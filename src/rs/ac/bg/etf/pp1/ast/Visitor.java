// generated with ast extension for cup
// version 0.8
// 29/7/2022 17:15:28


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(DesignatorAssignop DesignatorAssignop);
    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(FunctionCallArgs FunctionCallArgs);
    public void visit(Relop Relop);
    public void visit(DesignatorAdditional DesignatorAdditional);
    public void visit(LocalVarList LocalVarList);
    public void visit(ProgVar ProgVar);
    public void visit(Constants Constants);
    public void visit(Assignop Assignop);
    public void visit(MethodType MethodType);
    public void visit(StatementList StatementList);
    public void visit(ExprBinary ExprBinary);
    public void visit(PrintConst PrintConst);
    public void visit(ElseClause ElseClause);
    public void visit(Addop Addop);
    public void visit(ArrayIncrement ArrayIncrement);
    public void visit(ProgVarList ProgVarList);
    public void visit(DoWhileStart DoWhileStart);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(ConstList ConstList);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(NumConst NumConst);
    public void visit(Designator Designator);
    public void visit(DesignatorOp DesignatorOp);
    public void visit(Term Term);
    public void visit(FormParsList FormParsList);
    public void visit(Condition Condition);
    public void visit(ExprSign ExprSign);
    public void visit(LocalVars LocalVars);
    public void visit(Statements Statements);
    public void visit(CharConst CharConst);
    public void visit(IfCondition IfCondition);
    public void visit(BoolConst BoolConst);
    public void visit(VarDeclList VarDeclList);
    public void visit(VarArray VarArray);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ProgName ProgName);
    public void visit(ProgMethList ProgMethList);
    public void visit(Statement Statement);
    public void visit(Expression Expression);
    public void visit(VarDecl VarDecl);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(GlobalVars GlobalVars);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(FormPar FormPar);
    public void visit(GlobalVarList GlobalVarList);
    public void visit(OptArgs OptArgs);
    public void visit(OptArg OptArg);
    public void visit(SingleStatement SingleStatement);
    public void visit(ConstType ConstType);
    public void visit(FormPars FormPars);
    public void visit(ModuoOperation ModuoOperation);
    public void visit(DivisionOperation DivisionOperation);
    public void visit(MultiplicationOperation MultiplicationOperation);
    public void visit(SubtractionOperation SubtractionOperation);
    public void visit(AdditionOperation AdditionOperation);
    public void visit(RelationLessOrEquals RelationLessOrEquals);
    public void visit(RelationLess RelationLess);
    public void visit(RelationGreaterOrEquals RelationGreaterOrEquals);
    public void visit(RelationGreater RelationGreater);
    public void visit(RelationNotEquals RelationNotEquals);
    public void visit(RelationEquals RelationEquals);
    public void visit(AssignOperation AssignOperation);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorClass DesignatorClass);
    public void visit(NoDesignatorAdditional NoDesignatorAdditional);
    public void visit(DesignatorFactoriel DesignatorFactoriel);
    public void visit(DesignatorPower DesignatorPower);
    public void visit(FactorExpression FactorExpression);
    public void visit(FactorNewOperation FactorNewOperation);
    public void visit(FactorBooleanConstant FactorBooleanConstant);
    public void visit(FactorCharacterConstant FactorCharacterConstant);
    public void visit(FactorNumberConstant FactorNumberConstant);
    public void visit(FactorFunctionCall FactorFunctionCall);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(Terminal Terminal);
    public void visit(TerminalMulop TerminalMulop);
    public void visit(ExpressionClass ExpressionClass);
    public void visit(ExpressionAddop ExpressionAddop);
    public void visit(ExpressionPositive ExpressionPositive);
    public void visit(ExpressionNegative ExpressionNegative);
    public void visit(HasNotExprBinary HasNotExprBinary);
    public void visit(HasExprBinary HasExprBinary);
    public void visit(Expr Expr);
    public void visit(ConditionFact ConditionFact);
    public void visit(ConditionFactRelop ConditionFactRelop);
    public void visit(SingleConditionTerm SingleConditionTerm);
    public void visit(MultipleConditionTerms MultipleConditionTerms);
    public void visit(SingleCondition SingleCondition);
    public void visit(MultipleConditions MultipleConditions);
    public void visit(IfConditionError IfConditionError);
    public void visit(IfConditionClass IfConditionClass);
    public void visit(SingleActualParameter SingleActualParameter);
    public void visit(MultipleActualParameters MultipleActualParameters);
    public void visit(FunctionCallNoArguments FunctionCallNoArguments);
    public void visit(FunctionCallHasArguments FunctionCallHasArguments);
    public void visit(DesignatorAssignOperationError DesignatorAssignOperationError);
    public void visit(DesignatorAssignOperation DesignatorAssignOperation);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorFunctionCall DesignatorFunctionCall);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(DesignatorStatementClass DesignatorStatementClass);
    public void visit(EmptyStatementList EmptyStatementList);
    public void visit(StatementListClass StatementListClass);
    public void visit(StatementClass StatementClass);
    public void visit(HasNotPrintConstant HasNotPrintConstant);
    public void visit(HasPrintConstant HasPrintConstant);
    public void visit(NoReturnExpression NoReturnExpression);
    public void visit(HasReturnExpression HasReturnExpression);
    public void visit(DoWhileStartClass DoWhileStartClass);
    public void visit(ElseStart ElseStart);
    public void visit(HasNotElseClause HasNotElseClause);
    public void visit(HasElseClause HasElseClause);
    public void visit(IfStart IfStart);
    public void visit(IfClause IfClause);
    public void visit(DoWhileCondition DoWhileCondition);
    public void visit(DoWhileConditionStart DoWhileConditionStart);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(IfStatement IfStatement);
    public void visit(SSDesignatorStatement SSDesignatorStatement);
    public void visit(MultipleStatements MultipleStatements);
    public void visit(SingleStatementClass SingleStatementClass);
    public void visit(VariableDeclaration VariableDeclaration);
    public void visit(SingleLocalVariableList SingleLocalVariableList);
    public void visit(MultipleLocalVariablesList MultipleLocalVariablesList);
    public void visit(LocalVariables LocalVariables);
    public void visit(EmptyVariablesDeclarationList EmptyVariablesDeclarationList);
    public void visit(VariablesDeclarationList VariablesDeclarationList);
    public void visit(OptionalArgument OptionalArgument);
    public void visit(SingleOptionalArgument SingleOptionalArgument);
    public void visit(MultipleOptionalArguments MultipleOptionalArguments);
    public void visit(FormalParameterError FormalParameterError);
    public void visit(FormalParameter FormalParameter);
    public void visit(SingleFormalParameter SingleFormalParameter);
    public void visit(MultipleFormalParameters MultipleFormalParameters);
    public void visit(EmptyFormalParametersList EmptyFormalParametersList);
    public void visit(OptionalArgumentsList OptionalArgumentsList);
    public void visit(FormalParametersList FormalParametersList);
    public void visit(FormalParametersListWithOptionalArguments FormalParametersListWithOptionalArguments);
    public void visit(MethodName MethodName);
    public void visit(MethodTypeVoid MethodTypeVoid);
    public void visit(MethodTypeNotVoid MethodTypeNotVoid);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(EmptyProgramMethodsList EmptyProgramMethodsList);
    public void visit(ProgramMethodsList ProgramMethodsList);
    public void visit(NoArrayIncrement NoArrayIncrement);
    public void visit(HasArrayIncrement HasArrayIncrement);
    public void visit(VarIsNotArray VarIsNotArray);
    public void visit(VarIsArray VarIsArray);
    public void visit(GlobalVariableDeclarationError GlobalVariableDeclarationError);
    public void visit(GlobalVariableDeclaration GlobalVariableDeclaration);
    public void visit(SingleGlobalVariableList SingleGlobalVariableList);
    public void visit(MultipleGlobalVariablesList MultipleGlobalVariablesList);
    public void visit(GlobalVariables GlobalVariables);
    public void visit(Type Type);
    public void visit(BooleanConstant BooleanConstant);
    public void visit(CharacterConstant CharacterConstant);
    public void visit(NumberConstant NumberConstant);
    public void visit(BoolConstClass BoolConstClass);
    public void visit(CharConstClass CharConstClass);
    public void visit(NumConstClass NumConstClass);
    public void visit(ConstantDeclaration ConstantDeclaration);
    public void visit(SingleConstantList SingleConstantList);
    public void visit(MultipleConstantsList MultipleConstantsList);
    public void visit(ConstantsClass ConstantsClass);
    public void visit(ProgramVariables ProgramVariables);
    public void visit(ProgramConstants ProgramConstants);
    public void visit(EmptyProgramVariablesList EmptyProgramVariablesList);
    public void visit(ProgramVariablesList ProgramVariablesList);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
