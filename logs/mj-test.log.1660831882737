INFO  16:10:25,700 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:10:25,707 - #2 program
INFO  16:10:25,707 - #48 MJLexerTest1
INFO  16:10:25,707 - #46 {
INFO  16:10:25,708 - #7 const
INFO  16:10:25,708 - #48 int
INFO  16:10:25,708 - #48 MAX
INFO  16:10:25,708 - #35 =
INFO  16:10:25,708 - #49 50
INFO  16:10:25,708 - #38 ;
INFO  16:10:25,708 - #48 int
INFO  16:10:25,708 - #48 x
INFO  16:10:25,709 - #35 =
INFO  16:10:25,709 - #49 5
INFO  16:10:25,709 - #40 ,
INFO  16:10:25,709 - #48 y
INFO  16:10:25,709 - #35 =
INFO  16:10:25,709 - #49 10
INFO  16:10:25,709 - #38 ;
INFO  16:10:25,709 - #48 boolean
INFO  16:10:25,710 - #48 b
INFO  16:10:25,710 - #38 ;
INFO  16:10:25,710 - #48 char
INFO  16:10:25,710 - #48 c
INFO  16:10:25,710 - #38 ;
INFO  16:10:25,710 - #48 int
INFO  16:10:25,710 - #48 array
INFO  16:10:25,710 - #44 [
INFO  16:10:25,711 - #48 MAX
INFO  16:10:25,711 - #45 ]
INFO  16:10:25,711 - #38 ;
INFO  16:10:25,711 - #48 int
INFO  16:10:25,711 - #48 sumOfArray
INFO  16:10:25,711 - #42 (
INFO  16:10:25,711 - #48 int
INFO  16:10:25,711 - #44 [
INFO  16:10:25,712 - #45 ]
INFO  16:10:25,712 - #48 array
INFO  16:10:25,712 - #43 )
INFO  16:10:25,712 - #46 {
INFO  16:10:25,712 - #48 int
INFO  16:10:25,712 - #48 sum
INFO  16:10:25,712 - #35 =
INFO  16:10:25,712 - #49 0
INFO  16:10:25,713 - #38 ;
INFO  16:10:25,713 - #48 for
INFO  16:10:25,713 - #42 (
INFO  16:10:25,713 - #48 int
INFO  16:10:25,713 - #48 i
INFO  16:10:25,713 - #35 =
INFO  16:10:25,713 - #49 0
INFO  16:10:25,714 - #38 ;
INFO  16:10:25,714 - #48 i
INFO  16:10:25,714 - #31 <
INFO  16:10:25,714 - #48 array
INFO  16:10:25,714 - #41 .
INFO  16:10:25,714 - #48 length
INFO  16:10:25,715 - #38 ;
INFO  16:10:25,715 - #48 i
INFO  16:10:25,715 - #36 ++
INFO  16:10:25,715 - #43 )
INFO  16:10:25,715 - #46 {
INFO  16:10:25,715 - #48 sum
INFO  16:10:25,715 - #35 =
INFO  16:10:25,715 - #48 sum
INFO  16:10:25,716 - #22 +
INFO  16:10:25,716 - #48 array
INFO  16:10:25,716 - #44 [
INFO  16:10:25,716 - #48 i
INFO  16:10:25,716 - #45 ]
INFO  16:10:25,716 - #38 ;
INFO  16:10:25,716 - #47 }
INFO  16:10:25,716 - #14 return
INFO  16:10:25,716 - #48 sum
INFO  16:10:25,717 - #38 ;
INFO  16:10:25,717 - #47 }
INFO  16:10:25,717 - #48 int
INFO  16:10:25,717 - #48 main
INFO  16:10:25,717 - #42 (
INFO  16:10:25,717 - #43 )
INFO  16:10:25,717 - #46 {
INFO  16:10:25,718 - #48 b
INFO  16:10:25,718 - #35 =
INFO  16:10:25,718 - #51 false
INFO  16:10:25,718 - #38 ;
INFO  16:10:25,718 - #48 int
INFO  16:10:25,718 - #48 cnt
INFO  16:10:25,718 - #35 =
INFO  16:10:25,718 - #49 0
INFO  16:10:25,718 - #38 ;
INFO  16:10:25,718 - #9 do
INFO  16:10:25,718 - #46 {
INFO  16:10:25,719 - #8 if
INFO  16:10:25,719 - #42 (
INFO  16:10:25,719 - #48 cnt
INFO  16:10:25,719 - #26 %
INFO  16:10:25,719 - #49 2
INFO  16:10:25,720 - #27 ==
INFO  16:10:25,720 - #49 0
INFO  16:10:25,720 - #43 )
INFO  16:10:25,720 - #46 {
INFO  16:10:25,720 - #48 array
INFO  16:10:25,720 - #44 [
INFO  16:10:25,720 - #48 cnt
INFO  16:10:25,721 - #45 ]
INFO  16:10:25,721 - #35 =
INFO  16:10:25,721 - #48 x
INFO  16:10:25,721 - #36 ++
INFO  16:10:25,721 - #38 ;
INFO  16:10:25,721 - #47 }
INFO  16:10:25,721 - #6 else
INFO  16:10:25,722 - #46 {
INFO  16:10:25,722 - #48 array
INFO  16:10:25,722 - #44 [
INFO  16:10:25,722 - #48 cnt
INFO  16:10:25,722 - #45 ]
INFO  16:10:25,722 - #35 =
INFO  16:10:25,723 - #48 y
INFO  16:10:25,723 - #36 ++
INFO  16:10:25,723 - #23 -
INFO  16:10:25,723 - #35 =
INFO  16:10:25,723 - #22 +
INFO  16:10:25,724 - #38 ;
INFO  16:10:25,724 - #47 }
INFO  16:10:25,724 - #48 int
INFO  16:10:25,724 - #48 sum
INFO  16:10:25,725 - #35 =
INFO  16:10:25,725 - #48 sumOfArray
INFO  16:10:25,725 - #42 (
INFO  16:10:25,725 - #48 array
INFO  16:10:25,725 - #43 )
INFO  16:10:25,725 - #38 ;
INFO  16:10:25,725 - #8 if
INFO  16:10:25,725 - #42 (
INFO  16:10:25,726 - #48 sum
INFO  16:10:25,726 - #29 >
INFO  16:10:25,726 - #49 100
INFO  16:10:25,726 - #43 )
INFO  16:10:25,726 - #46 {
INFO  16:10:25,726 - #48 b
INFO  16:10:25,726 - #35 =
INFO  16:10:25,726 - #51 true
INFO  16:10:25,726 - #38 ;
INFO  16:10:25,726 - #47 }
INFO  16:10:25,726 - #48 cnt
INFO  16:10:25,726 - #36 ++
INFO  16:10:25,727 - #38 ;
INFO  16:10:25,727 - #8 if
INFO  16:10:25,727 - #42 (
INFO  16:10:25,727 - #48 cnt
INFO  16:10:25,727 - #27 ==
INFO  16:10:25,727 - #48 MAX
INFO  16:10:25,727 - #43 )
INFO  16:10:25,727 - #46 {
INFO  16:10:25,727 - #12 print
INFO  16:10:25,727 - #42 (
INFO  16:10:25,727 - #48 Exceeded
INFO  16:10:25,727 - #48 limit
INFO  16:10:25,727 - #43 )
INFO  16:10:25,727 - #38 ;
INFO  16:10:25,727 - #48 b
INFO  16:10:25,727 - #35 =
INFO  16:10:25,728 - #51 true
INFO  16:10:25,728 - #38 ;
INFO  16:10:25,728 - #47 }
INFO  16:10:25,728 - #47 }
INFO  16:10:25,728 - #10 while
INFO  16:10:25,728 - #42 (
INFO  16:10:25,728 - #48 b
INFO  16:10:25,728 - #27 ==
INFO  16:10:25,728 - #51 false
INFO  16:10:25,728 - #43 )
INFO  16:10:25,728 - #38 ;
INFO  16:10:25,729 - #14 return
INFO  16:10:25,729 - #49 0
INFO  16:10:25,729 - #38 ;
INFO  16:10:25,729 - #47 }
INFO  16:10:25,729 - #47 }
