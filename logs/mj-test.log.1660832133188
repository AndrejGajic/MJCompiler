INFO  16:12:45,712 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:12:45,719 - #2 program
INFO  16:12:45,719 - #48 MJLexerTest1
INFO  16:12:45,719 - #46 {
INFO  16:12:45,719 - #7 const
INFO  16:12:45,719 - #48 int
INFO  16:12:45,719 - #48 MAX
INFO  16:12:45,719 - #35 =
INFO  16:12:45,720 - #49 50
INFO  16:12:45,720 - #38 ;
INFO  16:12:45,720 - #48 int
INFO  16:12:45,720 - #48 x
INFO  16:12:45,720 - #35 =
INFO  16:12:45,720 - #49 5
INFO  16:12:45,720 - #40 ,
INFO  16:12:45,720 - #48 y
INFO  16:12:45,720 - #35 =
INFO  16:12:45,720 - #49 10
INFO  16:12:45,720 - #38 ;
INFO  16:12:45,721 - #48 boolean
INFO  16:12:45,721 - #48 b
INFO  16:12:45,721 - #38 ;
INFO  16:12:45,721 - #48 char
INFO  16:12:45,721 - #48 c
INFO  16:12:45,721 - #38 ;
INFO  16:12:45,721 - #48 int
INFO  16:12:45,721 - #48 array
INFO  16:12:45,721 - #44 [
INFO  16:12:45,722 - #48 MAX
INFO  16:12:45,722 - #45 ]
INFO  16:12:45,722 - #38 ;
INFO  16:12:45,722 - #48 int
INFO  16:12:45,722 - #48 sumOfArray
INFO  16:12:45,722 - #42 (
INFO  16:12:45,722 - #48 int
INFO  16:12:45,722 - #44 [
INFO  16:12:45,722 - #45 ]
INFO  16:12:45,722 - #48 array
INFO  16:12:45,722 - #43 )
INFO  16:12:45,722 - #46 {
INFO  16:12:45,722 - #48 int
INFO  16:12:45,722 - #48 sum
INFO  16:12:45,722 - #35 =
INFO  16:12:45,723 - #49 0
INFO  16:12:45,723 - #38 ;
INFO  16:12:45,723 - #48 for
INFO  16:12:45,723 - #42 (
INFO  16:12:45,723 - #48 int
INFO  16:12:45,723 - #48 i
INFO  16:12:45,723 - #35 =
INFO  16:12:45,724 - #49 0
INFO  16:12:45,724 - #38 ;
INFO  16:12:45,724 - #48 i
INFO  16:12:45,724 - #31 <
INFO  16:12:45,724 - #48 array
INFO  16:12:45,724 - #41 .
INFO  16:12:45,724 - #48 length
INFO  16:12:45,724 - #38 ;
INFO  16:12:45,724 - #48 i
INFO  16:12:45,725 - #36 ++
INFO  16:12:45,725 - #43 )
INFO  16:12:45,725 - #46 {
INFO  16:12:45,725 - #48 sum
INFO  16:12:45,725 - #35 =
INFO  16:12:45,725 - #48 sum
INFO  16:12:45,725 - #22 +
INFO  16:12:45,726 - #48 array
INFO  16:12:45,726 - #44 [
INFO  16:12:45,726 - #48 i
INFO  16:12:45,726 - #45 ]
INFO  16:12:45,726 - #38 ;
INFO  16:12:45,726 - #47 }
INFO  16:12:45,727 - #14 return
INFO  16:12:45,727 - #48 sum
INFO  16:12:45,727 - #38 ;
INFO  16:12:45,727 - #47 }
INFO  16:12:45,727 - #48 int
INFO  16:12:45,727 - #48 main
INFO  16:12:45,727 - #42 (
INFO  16:12:45,727 - #43 )
INFO  16:12:45,728 - #46 {
INFO  16:12:45,728 - #48 b
INFO  16:12:45,728 - #35 =
INFO  16:12:45,728 - #51 false
INFO  16:12:45,728 - #38 ;
INFO  16:12:45,728 - #48 int
INFO  16:12:45,728 - #48 cnt
INFO  16:12:45,728 - #35 =
INFO  16:12:45,728 - #49 0
INFO  16:12:45,728 - #38 ;
INFO  16:12:45,728 - #9 do
INFO  16:12:45,729 - #46 {
INFO  16:12:45,729 - #8 if
INFO  16:12:45,729 - #42 (
INFO  16:12:45,729 - #48 cnt
INFO  16:12:45,729 - #26 %
INFO  16:12:45,729 - #49 2
INFO  16:12:45,729 - #27 ==
INFO  16:12:45,729 - #49 0
INFO  16:12:45,729 - #43 )
INFO  16:12:45,729 - #46 {
INFO  16:12:45,729 - #48 array
INFO  16:12:45,730 - #44 [
INFO  16:12:45,730 - #48 cnt
INFO  16:12:45,730 - #45 ]
INFO  16:12:45,730 - #35 =
INFO  16:12:45,730 - #48 x
INFO  16:12:45,730 - #36 ++
INFO  16:12:45,730 - #38 ;
INFO  16:12:45,731 - #47 }
INFO  16:12:45,731 - #6 else
INFO  16:12:45,731 - #46 {
INFO  16:12:45,731 - #48 array
INFO  16:12:45,731 - #44 [
INFO  16:12:45,731 - #48 cnt
INFO  16:12:45,732 - #45 ]
INFO  16:12:45,732 - #35 =
INFO  16:12:45,732 - #48 y
INFO  16:12:45,732 - #36 ++
INFO  16:12:45,732 - #38 ;
INFO  16:12:45,732 - #47 }
INFO  16:12:45,732 - #48 int
INFO  16:12:45,733 - #48 sum
INFO  16:12:45,733 - #35 =
INFO  16:12:45,733 - #48 sumOfArray
INFO  16:12:45,733 - #42 (
INFO  16:12:45,733 - #48 array
INFO  16:12:45,733 - #43 )
INFO  16:12:45,734 - #38 ;
INFO  16:12:45,734 - #8 if
INFO  16:12:45,734 - #42 (
INFO  16:12:45,734 - #48 sum
INFO  16:12:45,734 - #29 >
INFO  16:12:45,739 - #49 100
INFO  16:12:45,739 - #43 )
INFO  16:12:45,739 - #46 {
INFO  16:12:45,739 - #48 b
INFO  16:12:45,739 - #35 =
INFO  16:12:45,739 - #51 true
INFO  16:12:45,739 - #38 ;
INFO  16:12:45,739 - #47 }
INFO  16:12:45,739 - #48 cnt
INFO  16:12:45,739 - #36 ++
INFO  16:12:45,739 - #38 ;
INFO  16:12:45,739 - #8 if
INFO  16:12:45,740 - #42 (
INFO  16:12:45,740 - #48 cnt
INFO  16:12:45,740 - #27 ==
INFO  16:12:45,740 - #48 MAX
INFO  16:12:45,740 - #43 )
INFO  16:12:45,740 - #46 {
INFO  16:12:45,740 - #12 print
INFO  16:12:45,740 - #42 (
INFO  16:12:45,740 - #48 Exceeded
INFO  16:12:45,740 - #48 limit
INFO  16:12:45,740 - #43 )
INFO  16:12:45,741 - #38 ;
INFO  16:12:45,741 - #48 b
INFO  16:12:45,741 - #35 =
INFO  16:12:45,741 - #51 true
INFO  16:12:45,741 - #38 ;
INFO  16:12:45,741 - #47 }
INFO  16:12:45,741 - #47 }
INFO  16:12:45,741 - #10 while
INFO  16:12:45,742 - #42 (
INFO  16:12:45,742 - #48 b
INFO  16:12:45,742 - #27 ==
INFO  16:12:45,742 - #51 false
INFO  16:12:45,742 - #43 )
INFO  16:12:45,742 - #38 ;
INFO  16:12:45,742 - #14 return
INFO  16:12:45,742 - #49 0
INFO  16:12:45,742 - #38 ;
INFO  16:12:45,743 - #47 }
INFO  16:12:45,743 - #47 }
