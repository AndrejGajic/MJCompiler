INFO  16:10:17,373 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:10:17,383 - #2 program
INFO  16:10:17,384 - #48 MJLexerTest1
INFO  16:10:17,384 - #46 {
INFO  16:10:17,384 - #7 const
INFO  16:10:17,384 - #48 int
INFO  16:10:17,384 - #48 MAX
INFO  16:10:17,385 - #35 =
INFO  16:10:17,385 - #49 50
INFO  16:10:17,385 - #38 ;
INFO  16:10:17,385 - #48 int
INFO  16:10:17,386 - #48 x
INFO  16:10:17,386 - #35 =
INFO  16:10:17,386 - #49 5
INFO  16:10:17,386 - #40 ,
INFO  16:10:17,387 - #48 y
INFO  16:10:17,387 - #35 =
INFO  16:10:17,387 - #49 10
INFO  16:10:17,388 - #38 ;
INFO  16:10:17,388 - #48 boolean
INFO  16:10:17,388 - #48 b
INFO  16:10:17,389 - #38 ;
INFO  16:10:17,393 - #48 char
INFO  16:10:17,393 - #48 c
INFO  16:10:17,393 - #38 ;
INFO  16:10:17,393 - #48 int
INFO  16:10:17,393 - #48 array
INFO  16:10:17,393 - #44 [
INFO  16:10:17,393 - #48 MAX
INFO  16:10:17,393 - #45 ]
INFO  16:10:17,393 - #38 ;
INFO  16:10:17,393 - #48 int
INFO  16:10:17,394 - #48 sumOfArray
INFO  16:10:17,394 - #42 (
INFO  16:10:17,394 - #48 int
INFO  16:10:17,394 - #44 [
INFO  16:10:17,394 - #45 ]
INFO  16:10:17,394 - #48 array
INFO  16:10:17,394 - #43 )
INFO  16:10:17,394 - #46 {
INFO  16:10:17,394 - #48 int
INFO  16:10:17,394 - #48 sum
INFO  16:10:17,395 - #35 =
INFO  16:10:17,395 - #49 0
INFO  16:10:17,395 - #38 ;
INFO  16:10:17,395 - #48 for
INFO  16:10:17,395 - #42 (
INFO  16:10:17,395 - #48 int
INFO  16:10:17,395 - #48 i
INFO  16:10:17,395 - #35 =
INFO  16:10:17,396 - #49 0
INFO  16:10:17,396 - #38 ;
INFO  16:10:17,396 - #48 i
INFO  16:10:17,396 - #31 <
INFO  16:10:17,396 - #48 array
INFO  16:10:17,396 - #41 .
INFO  16:10:17,396 - #48 length
INFO  16:10:17,397 - #38 ;
INFO  16:10:17,397 - #48 i
INFO  16:10:17,397 - #36 ++
INFO  16:10:17,397 - #43 )
INFO  16:10:17,397 - #46 {
INFO  16:10:17,397 - #48 sum
INFO  16:10:17,397 - #35 =
INFO  16:10:17,398 - #48 sum
INFO  16:10:17,398 - #22 +
INFO  16:10:17,398 - #48 array
INFO  16:10:17,398 - #44 [
INFO  16:10:17,398 - #48 i
INFO  16:10:17,398 - #45 ]
INFO  16:10:17,398 - #38 ;
INFO  16:10:17,398 - #47 }
INFO  16:10:17,398 - #14 return
INFO  16:10:17,399 - #48 sum
INFO  16:10:17,399 - #38 ;
INFO  16:10:17,399 - #47 }
INFO  16:10:17,399 - #48 int
INFO  16:10:17,399 - #48 main
INFO  16:10:17,399 - #42 (
INFO  16:10:17,399 - #43 )
INFO  16:10:17,400 - #46 {
INFO  16:10:17,400 - #48 b
INFO  16:10:17,400 - #35 =
INFO  16:10:17,400 - #51 false
INFO  16:10:17,400 - #38 ;
INFO  16:10:17,400 - #48 int
INFO  16:10:17,401 - #48 cnt
INFO  16:10:17,401 - #35 =
INFO  16:10:17,401 - #49 0
INFO  16:10:17,401 - #38 ;
INFO  16:10:17,401 - #9 do
INFO  16:10:17,402 - #46 {
INFO  16:10:17,402 - #8 if
INFO  16:10:17,402 - #42 (
INFO  16:10:17,402 - #48 cnt
INFO  16:10:17,402 - #26 %
INFO  16:10:17,402 - #49 2
INFO  16:10:17,402 - #27 ==
INFO  16:10:17,402 - #49 0
INFO  16:10:17,402 - #43 )
INFO  16:10:17,402 - #46 {
INFO  16:10:17,402 - #48 array
INFO  16:10:17,403 - #44 [
INFO  16:10:17,403 - #48 cnt
INFO  16:10:17,403 - #45 ]
INFO  16:10:17,404 - #35 =
INFO  16:10:17,405 - #48 x
INFO  16:10:17,405 - #36 ++
INFO  16:10:17,406 - #38 ;
INFO  16:10:17,406 - #47 }
INFO  16:10:17,407 - #6 else
INFO  16:10:17,407 - #46 {
INFO  16:10:17,407 - #48 array
INFO  16:10:17,407 - #44 [
INFO  16:10:17,407 - #48 cnt
INFO  16:10:17,407 - #45 ]
INFO  16:10:17,408 - #35 =
INFO  16:10:17,408 - #48 y
INFO  16:10:17,408 - #36 ++
INFO  16:10:17,408 - #23 -
INFO  16:10:17,408 - #35 =
INFO  16:10:17,408 - #22 +
INFO  16:10:17,409 - #38 ;
INFO  16:10:17,409 - #47 }
INFO  16:10:17,409 - #48 int
INFO  16:10:17,409 - #48 sum
INFO  16:10:17,409 - #35 =
INFO  16:10:17,409 - #48 sumOfArray
INFO  16:10:17,410 - #42 (
INFO  16:10:17,410 - #48 array
INFO  16:10:17,410 - #43 )
INFO  16:10:17,410 - #38 ;
INFO  16:10:17,410 - #8 if
INFO  16:10:17,416 - #42 (
INFO  16:10:17,416 - #48 sum
INFO  16:10:17,416 - #29 >
INFO  16:10:17,416 - #49 100
INFO  16:10:17,416 - #43 )
INFO  16:10:17,416 - #46 {
INFO  16:10:17,416 - #48 b
INFO  16:10:17,417 - #35 =
INFO  16:10:17,417 - #51 true
INFO  16:10:17,417 - #38 ;
INFO  16:10:17,417 - #47 }
INFO  16:10:17,417 - #48 cnt
INFO  16:10:17,417 - #36 ++
INFO  16:10:17,417 - #38 ;
INFO  16:10:17,417 - #8 if
INFO  16:10:17,417 - #42 (
INFO  16:10:17,417 - #48 cnt
INFO  16:10:17,417 - #27 ==
INFO  16:10:17,417 - #48 MAX
INFO  16:10:17,417 - #43 )
INFO  16:10:17,418 - #46 {
INFO  16:10:17,418 - #12 print
INFO  16:10:17,418 - #42 (
INFO  16:10:17,418 - #48 Exceeded
INFO  16:10:17,418 - #48 limit
INFO  16:10:17,418 - #43 )
INFO  16:10:17,418 - #38 ;
INFO  16:10:17,418 - #48 b
INFO  16:10:17,418 - #35 =
INFO  16:10:17,418 - #51 true
INFO  16:10:17,418 - #38 ;
INFO  16:10:17,418 - #47 }
INFO  16:10:17,419 - #47 }
INFO  16:10:17,419 - #10 while
INFO  16:10:17,419 - #42 (
INFO  16:10:17,419 - #48 b
INFO  16:10:17,419 - #27 ==
INFO  16:10:17,419 - #51 false
INFO  16:10:17,419 - #43 )
INFO  16:10:17,419 - #38 ;
INFO  16:10:17,419 - #14 return
INFO  16:10:17,419 - #49 0
INFO  16:10:17,419 - #38 ;
INFO  16:10:17,419 - #47 }
INFO  16:10:17,419 - #47 }
