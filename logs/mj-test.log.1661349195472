INFO  15:53:06,478 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\test3.mj
INFO  15:53:06,596 - #2 program
INFO  15:53:06,596 - #48 p
INFO  15:53:06,597 - #7 const
INFO  15:53:06,598 - #48 int
INFO  15:53:06,598 - #48 x
INFO  15:53:06,599 - #35 =
INFO  15:53:06,599 - #49 50
INFO  15:53:06,599 - #38 ;
INFO  15:53:06,600 - #48 int
INFO  15:53:06,600 - #48 i1
INFO  15:53:06,601 - #40 ,
INFO  15:53:06,602 - #48 arr
INFO  15:53:06,603 - #44 [
INFO  15:53:06,603 - #45 ]
INFO  15:53:06,603 - #40 ,
INFO  15:53:06,604 - #48 arr2
INFO  15:53:06,604 - #44 [
INFO  15:53:06,604 - #45 ]
INFO  15:53:06,604 - #38 ;
INFO  15:53:06,604 - #48 int
INFO  15:53:06,605 - #48 i2
INFO  15:53:06,605 - #38 ;
INFO  15:53:06,609 - #48 char
INFO  15:53:06,609 - #48 c1
INFO  15:53:06,609 - #40 ,
INFO  15:53:06,609 - #48 c2
INFO  15:53:06,609 - #38 ;
INFO  15:53:06,609 - #48 bool
INFO  15:53:06,609 - #48 b
INFO  15:53:06,609 - #38 ;
INFO  15:53:06,609 - #46 {
INFO  15:53:06,609 - #48 int
INFO  15:53:06,610 - #48 f
INFO  15:53:06,610 - #42 (
INFO  15:53:06,611 - #48 int
INFO  15:53:06,611 - #48 param1
INFO  15:53:06,611 - #40 ,
INFO  15:53:06,612 - #48 int
INFO  15:53:06,612 - #48 param2
INFO  15:53:06,612 - #43 )
INFO  15:53:06,612 - #48 int
INFO  15:53:06,613 - #48 l
INFO  15:53:06,614 - #38 ;
INFO  15:53:06,614 - #48 int
INFO  15:53:06,614 - #48 s
INFO  15:53:06,615 - #38 ;
INFO  15:53:06,615 - #46 {
INFO  15:53:06,615 - #48 i1
INFO  15:53:06,616 - #35 =
INFO  15:53:06,618 - #49 5
INFO  15:53:06,622 - #38 ;
INFO  15:53:06,623 - #48 l
INFO  15:53:06,623 - #35 =
INFO  15:53:06,623 - #48 i1
INFO  15:53:06,624 - #22 +
INFO  15:53:06,625 - #49 5
INFO  15:53:06,627 - #38 ;
INFO  15:53:06,627 - #14 return
INFO  15:53:06,627 - #48 l
INFO  15:53:06,627 - #38 ;
INFO  15:53:06,627 - #47 }
INFO  15:53:06,627 - #48 char
INFO  15:53:06,628 - #48 f1
INFO  15:53:06,628 - #42 (
INFO  15:53:06,628 - #48 int
INFO  15:53:06,628 - #48 x
INFO  15:53:06,628 - #40 ,
INFO  15:53:06,628 - #48 int
INFO  15:53:06,628 - #48 y
INFO  15:53:06,628 - #40 ,
INFO  15:53:06,629 - #48 int
INFO  15:53:06,629 - #48 z
INFO  15:53:06,629 - #35 =
INFO  15:53:06,629 - #49 5
INFO  15:53:06,629 - #43 )
INFO  15:53:06,629 - #46 {
INFO  15:53:06,629 - #14 return
INFO  15:53:06,629 - #50 a
INFO  15:53:06,629 - #38 ;
INFO  15:53:06,630 - #47 }
INFO  15:53:06,630 - #15 void
INFO  15:53:06,630 - #48 main
INFO  15:53:06,631 - #42 (
INFO  15:53:06,631 - #43 )
INFO  15:53:06,632 - #46 {
INFO  15:53:06,632 - #48 f
INFO  15:53:06,632 - #42 (
INFO  15:53:06,632 - #49 2
INFO  15:53:06,633 - #40 ,
INFO  15:53:06,633 - #50 a
INFO  15:53:06,633 - #43 )
INFO  15:53:06,634 - #38 ;
INFO  15:53:06,634 - #47 }
INFO  15:53:06,634 - #47 }
INFO  15:53:06,637 - Program(
  ProgramName(
   p
  ) [ProgramName]
  ProgramVariablesList(
    ProgramVariablesList(
      ProgramVariablesList(
        ProgramVariablesList(
          ProgramVariablesList(
            EmptyProgramVariablesList(
            ) [EmptyProgramVariablesList]
            ProgramConstants(
              ConstantsClass(
                Type(
                 int
                ) [Type]
                SingleConstantList(
                  ConstantDeclaration(
                   x
                    NumConstClass(
                      NumberConstant(
                       50
                      ) [NumberConstant]
                    ) [NumConstClass]
                  ) [ConstantDeclaration]
                ) [SingleConstantList]
              ) [ConstantsClass]
            ) [ProgramConstants]
          ) [ProgramVariablesList]
          ProgramVariables(
            GlobalVariables(
              Type(
               int
              ) [Type]
              MultipleGlobalVariablesList(
                MultipleGlobalVariablesList(
                  SingleGlobalVariableList(
                    GlobalVariableDeclaration(
                     i1
                      VarIsNotArray(
                      ) [VarIsNotArray]
                    ) [GlobalVariableDeclaration]
                  ) [SingleGlobalVariableList]
                  GlobalVariableDeclaration(
                   arr
                    VarIsArray(
                    ) [VarIsArray]
                  ) [GlobalVariableDeclaration]
                ) [MultipleGlobalVariablesList]
                GlobalVariableDeclaration(
                 arr2
                  VarIsArray(
                  ) [VarIsArray]
                ) [GlobalVariableDeclaration]
              ) [MultipleGlobalVariablesList]
            ) [GlobalVariables]
          ) [ProgramVariables]
        ) [ProgramVariablesList]
        ProgramVariables(
          GlobalVariables(
            Type(
             int
            ) [Type]
            SingleGlobalVariableList(
              GlobalVariableDeclaration(
               i2
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [GlobalVariableDeclaration]
            ) [SingleGlobalVariableList]
          ) [GlobalVariables]
        ) [ProgramVariables]
      ) [ProgramVariablesList]
      ProgramVariables(
        GlobalVariables(
          Type(
           char
          ) [Type]
          MultipleGlobalVariablesList(
            SingleGlobalVariableList(
              GlobalVariableDeclaration(
               c1
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [GlobalVariableDeclaration]
            ) [SingleGlobalVariableList]
            GlobalVariableDeclaration(
             c2
              VarIsNotArray(
              ) [VarIsNotArray]
            ) [GlobalVariableDeclaration]
          ) [MultipleGlobalVariablesList]
        ) [GlobalVariables]
      ) [ProgramVariables]
    ) [ProgramVariablesList]
    ProgramVariables(
      GlobalVariables(
        Type(
         bool
        ) [Type]
        SingleGlobalVariableList(
          GlobalVariableDeclaration(
           b
            VarIsNotArray(
            ) [VarIsNotArray]
          ) [GlobalVariableDeclaration]
        ) [SingleGlobalVariableList]
      ) [GlobalVariables]
    ) [ProgramVariables]
  ) [ProgramVariablesList]
  ProgramMethodsList(
    ProgramMethodsList(
      ProgramMethodsList(
        EmptyProgramMethodsList(
        ) [EmptyProgramMethodsList]
        MethodDeclaration(
          MethodTypeNotVoid(
            Type(
             int
            ) [Type]
          ) [MethodTypeNotVoid]
          MethodName(
           f
          ) [MethodName]
          FormalParametersList(
            MultipleFormalParameters(
              SingleFormalParameter(
                FormalParameter(
                  Type(
                   int
                  ) [Type]
                 param1
                  VarIsNotArray(
                  ) [VarIsNotArray]
                ) [FormalParameter]
              ) [SingleFormalParameter]
              FormalParameter(
                Type(
                 int
                ) [Type]
               param2
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [FormalParameter]
            ) [MultipleFormalParameters]
          ) [FormalParametersList]
          VariablesDeclarationList(
            VariablesDeclarationList(
              EmptyVariablesDeclarationList(
              ) [EmptyVariablesDeclarationList]
              LocalVariables(
                Type(
                 int
                ) [Type]
                SingleLocalVariableList(
                  VariableDeclaration(
                   l
                    VarIsNotArray(
                    ) [VarIsNotArray]
                  ) [VariableDeclaration]
                ) [SingleLocalVariableList]
              ) [LocalVariables]
            ) [VariablesDeclarationList]
            LocalVariables(
              Type(
               int
              ) [Type]
              SingleLocalVariableList(
                VariableDeclaration(
                 s
                  VarIsNotArray(
                  ) [VarIsNotArray]
                ) [VariableDeclaration]
              ) [SingleLocalVariableList]
            ) [LocalVariables]
          ) [VariablesDeclarationList]
          StatementListClass(
            StatementListClass(
              StatementListClass(
                EmptyStatementList(
                ) [EmptyStatementList]
                SingleStatementClass(
                  SSDesignatorStatement(
                    DesignatorStatementClass(
                      Designator(
                       i1
                        DesignatorNotArray(
                        ) [DesignatorNotArray]
                      ) [Designator]
                      DesignatorAssign(
                        DesignatorAssignOperation(
                          AssignOperation(
                          ) [AssignOperation]
                          Expr(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorNumberConstant(
                                  NumberConstant(
                                   5
                                  ) [NumberConstant]
                                ) [FactorNumberConstant]
                              ) [Terminal]
                            ) [ExpressionClass]
                          ) [Expr]
                        ) [DesignatorAssignOperation]
                      ) [DesignatorAssign]
                    ) [DesignatorStatementClass]
                  ) [SSDesignatorStatement]
                ) [SingleStatementClass]
              ) [StatementListClass]
              SingleStatementClass(
                SSDesignatorStatement(
                  DesignatorStatementClass(
                    Designator(
                     l
                      DesignatorNotArray(
                      ) [DesignatorNotArray]
                    ) [Designator]
                    DesignatorAssign(
                      DesignatorAssignOperation(
                        AssignOperation(
                        ) [AssignOperation]
                        Expr(
                          ExpressionAddop(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorDesignator(
                                  Designator(
                                   i1
                                    DesignatorNotArray(
                                    ) [DesignatorNotArray]
                                  ) [Designator]
                                  FactorNoFunctionCall(
                                  ) [FactorNoFunctionCall]
                                ) [FactorDesignator]
                              ) [Terminal]
                            ) [ExpressionClass]
                            AdditionOperation(
                            ) [AdditionOperation]
                            Terminal(
                              FactorNumberConstant(
                                NumberConstant(
                                 5
                                ) [NumberConstant]
                              ) [FactorNumberConstant]
                            ) [Terminal]
                          ) [ExpressionAddop]
                        ) [Expr]
                      ) [DesignatorAssignOperation]
                    ) [DesignatorAssign]
                  ) [DesignatorStatementClass]
                ) [SSDesignatorStatement]
              ) [SingleStatementClass]
            ) [StatementListClass]
            SingleStatementClass(
              ReturnStatement(
                HasReturnExpression(
                  Expr(
                    ExpressionClass(
                      ExpressionPositive(
                      ) [ExpressionPositive]
                      Terminal(
                        FactorDesignator(
                          Designator(
                           l
                            DesignatorNotArray(
                            ) [DesignatorNotArray]
                          ) [Designator]
                          FactorNoFunctionCall(
                          ) [FactorNoFunctionCall]
                        ) [FactorDesignator]
                      ) [Terminal]
                    ) [ExpressionClass]
                  ) [Expr]
                ) [HasReturnExpression]
              ) [ReturnStatement]
            ) [SingleStatementClass]
          ) [StatementListClass]
        ) [MethodDeclaration]
      ) [ProgramMethodsList]
      MethodDeclaration(
        MethodTypeNotVoid(
          Type(
           char
          ) [Type]
        ) [MethodTypeNotVoid]
        MethodName(
         f1
        ) [MethodName]
        FormalParametersListWithOptionalArguments(
          MultipleFormalParameters(
            SingleFormalParameter(
              FormalParameter(
                Type(
                 int
                ) [Type]
               x
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [FormalParameter]
            ) [SingleFormalParameter]
            FormalParameter(
              Type(
               int
              ) [Type]
             y
              VarIsNotArray(
              ) [VarIsNotArray]
            ) [FormalParameter]
          ) [MultipleFormalParameters]
          SingleOptionalArgument(
            OptionalArgument(
              Type(
               int
              ) [Type]
             z
              NumConstClass(
                NumberConstant(
                 5
                ) [NumberConstant]
              ) [NumConstClass]
            ) [OptionalArgument]
          ) [SingleOptionalArgument]
        ) [FormalParametersListWithOptionalArguments]
        EmptyVariablesDeclarationList(
        ) [EmptyVariablesDeclarationList]
        StatementListClass(
          EmptyStatementList(
          ) [EmptyStatementList]
          SingleStatementClass(
            ReturnStatement(
              HasReturnExpression(
                Expr(
                  ExpressionClass(
                    ExpressionPositive(
                    ) [ExpressionPositive]
                    Terminal(
                      FactorCharacterConstant(
                        CharacterConstant(
                         a
                        ) [CharacterConstant]
                      ) [FactorCharacterConstant]
                    ) [Terminal]
                  ) [ExpressionClass]
                ) [Expr]
              ) [HasReturnExpression]
            ) [ReturnStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
      ) [MethodDeclaration]
    ) [ProgramMethodsList]
    MethodDeclaration(
      MethodTypeVoid(
      ) [MethodTypeVoid]
      MethodName(
       main
      ) [MethodName]
      EmptyFormalParametersList(
      ) [EmptyFormalParametersList]
      EmptyVariablesDeclarationList(
      ) [EmptyVariablesDeclarationList]
      StatementListClass(
        EmptyStatementList(
        ) [EmptyStatementList]
        SingleStatementClass(
          SSDesignatorStatement(
            DesignatorStatementClass(
              Designator(
               f
                DesignatorNotArray(
                ) [DesignatorNotArray]
              ) [Designator]
              DesignatorFunctionCall(
                FunctionCallHasArguments(
                  MultipleActualParameters(
                    SingleActualParameter(
                      Expr(
                        ExpressionClass(
                          ExpressionPositive(
                          ) [ExpressionPositive]
                          Terminal(
                            FactorNumberConstant(
                              NumberConstant(
                               2
                              ) [NumberConstant]
                            ) [FactorNumberConstant]
                          ) [Terminal]
                        ) [ExpressionClass]
                      ) [Expr]
                    ) [SingleActualParameter]
                    Expr(
                      ExpressionClass(
                        ExpressionPositive(
                        ) [ExpressionPositive]
                        Terminal(
                          FactorCharacterConstant(
                            CharacterConstant(
                             a
                            ) [CharacterConstant]
                          ) [FactorCharacterConstant]
                        ) [Terminal]
                      ) [ExpressionClass]
                    ) [Expr]
                  ) [MultipleActualParameters]
                ) [FunctionCallHasArguments]
              ) [DesignatorFunctionCall]
            ) [DesignatorStatementClass]
          ) [SSDesignatorStatement]
        ) [SingleStatementClass]
      ) [StatementListClass]
    ) [MethodDeclaration]
  ) [ProgramMethodsList]
) [Program]
INFO  15:53:06,638 - ===================================
INFO  15:53:06,638 - Parsing completed successfully!.
INFO  15:53:06,662 - Constant x declared  at line 2
INFO  15:53:06,662 - Global variable i1 declared at line 3
INFO  15:53:06,662 - Global array arr[] declared at line 3
INFO  15:53:06,662 - Global array arr2[] declared at line 3
INFO  15:53:06,662 - Global variable i2 declared at line 4
INFO  15:53:06,662 - Global variable c1 declared at line 5
INFO  15:53:06,662 - Global variable c2 declared at line 5
INFO  15:53:06,663 - Global variable b declared at line 6
INFO  15:53:06,663 - Function f is being parsed  at line 9
INFO  15:53:06,664 - Local parameter param1 declared at line 9
INFO  15:53:06,664 - Local parameter param2 declared at line 9
INFO  15:53:06,664 - Local variable l declared at line 9
INFO  15:53:06,664 - Local variable s declared at line 9
INFO  15:53:06,665 - Global variable i1 accessed at line 10
INFO  15:53:06,665 - Local variable l accessed at line 11
INFO  15:53:06,665 - Global variable i1 accessed at line 11
INFO  15:53:06,665 - Local variable l accessed at line 12
INFO  15:53:06,665 - Function f1 is being parsed  at line 15
INFO  15:53:06,665 - Local parameter x declared at line 15
INFO  15:53:06,666 - Local parameter y declared at line 15
INFO  15:53:06,666 - Default parameter z declared at line 15
INFO  15:53:06,666 - Function main is being parsed  at line 19
INFO  15:53:06,666 - Error! While calling function f, argument at position 1 is not compatibile type at line 20
INFO  15:53:06,666 - Semantic analysis completed.
