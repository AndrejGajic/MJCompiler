INFO  04:25:49,937 - Starting compilation of a file test/test4.mj
INFO  04:25:49,937 - Starting lexical analysis....
INFO  04:25:49,941 - Lexical analysis finished successfully!
INFO  04:25:49,941 - =========================================
INFO  04:25:49,942 - Starting syntax analysis....
INFO  04:25:50,061 - #2 program
INFO  04:25:50,061 - #48 Test4
INFO  04:25:50,061 - #7 const
INFO  04:25:50,063 - #48 int
INFO  04:25:50,063 - #48 N
INFO  04:25:50,064 - #35 =
INFO  04:25:50,065 - #49 50
INFO  04:25:50,065 - #38 ;
INFO  04:25:50,066 - #48 int
INFO  04:25:50,066 - #48 x
INFO  04:25:50,066 - #40 ,
INFO  04:25:50,069 - #48 y
INFO  04:25:50,069 - #40 ,
INFO  04:25:50,069 - #48 arr
INFO  04:25:50,069 - #44 [
INFO  04:25:50,073 - #45 ]
INFO  04:25:50,073 - #38 ;
INFO  04:25:50,075 - #46 {
INFO  04:25:50,075 - #48 int
INFO  04:25:50,076 - #48 sum
INFO  04:25:50,077 - #42 (
INFO  04:25:50,078 - #48 int
INFO  04:25:50,078 - #48 a
INFO  04:25:50,078 - #35 =
INFO  04:25:50,078 - #49 5
INFO  04:25:50,078 - #40 ,
INFO  04:25:50,079 - #48 int
INFO  04:25:50,079 - #48 b
INFO  04:25:50,079 - #35 =
INFO  04:25:50,079 - #49 10
INFO  04:25:50,079 - #43 )
INFO  04:25:50,080 - #46 {
INFO  04:25:50,081 - #14 return
INFO  04:25:50,082 - #48 a
INFO  04:25:50,084 - #22 +
INFO  04:25:50,085 - #48 b
INFO  04:25:50,087 - #38 ;
INFO  04:25:50,088 - #47 }
INFO  04:25:50,089 - #15 void
INFO  04:25:50,089 - #48 main
INFO  04:25:50,090 - #42 (
INFO  04:25:50,090 - #43 )
INFO  04:25:50,092 - #46 {
INFO  04:25:50,092 - #48 x
INFO  04:25:50,092 - #35 =
INFO  04:25:50,092 - #48 sum
INFO  04:25:50,093 - #42 (
INFO  04:25:50,093 - #49 1
INFO  04:25:50,094 - #40 ,
INFO  04:25:50,094 - #49 2
INFO  04:25:50,094 - #43 )
INFO  04:25:50,094 - #38 ;
INFO  04:25:50,095 - #12 print
INFO  04:25:50,095 - #42 (
INFO  04:25:50,095 - #48 x
INFO  04:25:50,096 - #43 )
INFO  04:25:50,097 - #38 ;
INFO  04:25:50,097 - #47 }
INFO  04:25:50,098 - #47 }
INFO  04:25:50,099 - Syntax analysis finished successfully!
INFO  04:25:50,099 - Syntax tree: 
INFO  04:25:50,101 - Program(
  ProgramName(
   Test4
  ) [ProgramName]
  ProgramVariablesList(
    ProgramVariablesList(
      EmptyProgramVariablesList(
      ) [EmptyProgramVariablesList]
      ProgramConstants(
        ConstantsClass(
          Type(
           int
          ) [Type]
          SingleConstantList(
            ConstantDeclaration(
             N
              NumConstClass(
                NumberConstant(
                 50
                ) [NumberConstant]
              ) [NumConstClass]
            ) [ConstantDeclaration]
          ) [SingleConstantList]
        ) [ConstantsClass]
      ) [ProgramConstants]
    ) [ProgramVariablesList]
    ProgramVariables(
      GlobalVariables(
        Type(
         int
        ) [Type]
        MultipleGlobalVariablesList(
          MultipleGlobalVariablesList(
            SingleGlobalVariableList(
              GlobalVariableDeclaration(
               x
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [GlobalVariableDeclaration]
            ) [SingleGlobalVariableList]
            GlobalVariableDeclaration(
             y
              VarIsNotArray(
              ) [VarIsNotArray]
            ) [GlobalVariableDeclaration]
          ) [MultipleGlobalVariablesList]
          GlobalVariableDeclaration(
           arr
            VarIsArray(
            ) [VarIsArray]
          ) [GlobalVariableDeclaration]
        ) [MultipleGlobalVariablesList]
      ) [GlobalVariables]
    ) [ProgramVariables]
  ) [ProgramVariablesList]
  ProgramMethodsList(
    ProgramMethodsList(
      EmptyProgramMethodsList(
      ) [EmptyProgramMethodsList]
      MethodDeclaration(
        MethodTypeNotVoid(
          Type(
           int
          ) [Type]
        ) [MethodTypeNotVoid]
        MethodName(
         sum
        ) [MethodName]
        OptionalArgumentsList(
          MultipleOptionalArguments(
            SingleOptionalArgument(
              OptionalArgument(
                Type(
                 int
                ) [Type]
               a
                NumConstClass(
                  NumberConstant(
                   5
                  ) [NumberConstant]
                ) [NumConstClass]
              ) [OptionalArgument]
            ) [SingleOptionalArgument]
            OptionalArgument(
              Type(
               int
              ) [Type]
             b
              NumConstClass(
                NumberConstant(
                 10
                ) [NumberConstant]
              ) [NumConstClass]
            ) [OptionalArgument]
          ) [MultipleOptionalArguments]
        ) [OptionalArgumentsList]
        EmptyVariablesDeclarationList(
        ) [EmptyVariablesDeclarationList]
        StatementListClass(
          EmptyStatementList(
          ) [EmptyStatementList]
          SingleStatementClass(
            ReturnStatement(
              HasReturnExpression(
                Expr(
                  ExpressionAddop(
                    ExpressionClass(
                      ExpressionPositive(
                      ) [ExpressionPositive]
                      Terminal(
                        FactorDesignator(
                          DesignatorClass(
                           a
                          ) [DesignatorClass]
                        ) [FactorDesignator]
                      ) [Terminal]
                    ) [ExpressionClass]
                    AdditionOperation(
                    ) [AdditionOperation]
                    Terminal(
                      FactorDesignator(
                        DesignatorClass(
                         b
                        ) [DesignatorClass]
                      ) [FactorDesignator]
                    ) [Terminal]
                  ) [ExpressionAddop]
                ) [Expr]
              ) [HasReturnExpression]
            ) [ReturnStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
      ) [MethodDeclaration]
    ) [ProgramMethodsList]
    MethodDeclaration(
      MethodTypeVoid(
      ) [MethodTypeVoid]
      MethodName(
       main
      ) [MethodName]
      EmptyFormalParametersList(
      ) [EmptyFormalParametersList]
      EmptyVariablesDeclarationList(
      ) [EmptyVariablesDeclarationList]
      StatementListClass(
        StatementListClass(
          EmptyStatementList(
          ) [EmptyStatementList]
          SingleStatementClass(
            SSDesignatorStatement(
              DesignatorStatementClass(
                DesignatorClass(
                 x
                ) [DesignatorClass]
                DesignatorAssign(
                  DesignatorAssignOperation(
                    AssignOperation(
                    ) [AssignOperation]
                    Expr(
                      ExpressionClass(
                        ExpressionPositive(
                        ) [ExpressionPositive]
                        Terminal(
                          FactorFunctionCall(
                            DesignatorClass(
                             sum
                            ) [DesignatorClass]
                            FunctionCallHasArguments(
                              MultipleActualParameters(
                                SingleActualParameter(
                                  Expr(
                                    ExpressionClass(
                                      ExpressionPositive(
                                      ) [ExpressionPositive]
                                      Terminal(
                                        FactorNumberConstant(
                                          NumberConstant(
                                           1
                                          ) [NumberConstant]
                                        ) [FactorNumberConstant]
                                      ) [Terminal]
                                    ) [ExpressionClass]
                                  ) [Expr]
                                ) [SingleActualParameter]
                                Expr(
                                  ExpressionClass(
                                    ExpressionPositive(
                                    ) [ExpressionPositive]
                                    Terminal(
                                      FactorNumberConstant(
                                        NumberConstant(
                                         2
                                        ) [NumberConstant]
                                      ) [FactorNumberConstant]
                                    ) [Terminal]
                                  ) [ExpressionClass]
                                ) [Expr]
                              ) [MultipleActualParameters]
                            ) [FunctionCallHasArguments]
                          ) [FactorFunctionCall]
                        ) [Terminal]
                      ) [ExpressionClass]
                    ) [Expr]
                  ) [DesignatorAssignOperation]
                ) [DesignatorAssign]
              ) [DesignatorStatementClass]
            ) [SSDesignatorStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
        SingleStatementClass(
          PrintStatement(
            Expr(
              ExpressionClass(
                ExpressionPositive(
                ) [ExpressionPositive]
                Terminal(
                  FactorDesignator(
                    DesignatorClass(
                     x
                    ) [DesignatorClass]
                  ) [FactorDesignator]
                ) [Terminal]
              ) [ExpressionClass]
            ) [Expr]
            HasNotPrintConstant(
            ) [HasNotPrintConstant]
          ) [PrintStatement]
        ) [SingleStatementClass]
      ) [StatementListClass]
    ) [MethodDeclaration]
  ) [ProgramMethodsList]
) [Program]
INFO  04:25:50,101 - =========================================
INFO  04:25:50,106 - Starting semantic analysis....
INFO  04:25:50,135 - Constant N declared  at line 2
INFO  04:25:50,136 - Global variable x declared at line 3
INFO  04:25:50,136 - Global variable y declared at line 3
INFO  04:25:50,136 - Global array arr[] declared at line 3
INFO  04:25:50,136 - Function sum is being parsed  at line 6
INFO  04:25:50,138 - Default parameter a declared at line 6
INFO  04:25:50,138 - Default parameter b declared at line 6
INFO  04:25:50,138 - Function parameter a accessed at line 7
INFO  04:25:50,138 - Function parameter b accessed at line 7
INFO  04:25:50,139 - Function main is being parsed  at line 10
INFO  04:25:50,139 - Global variable x accessed at line 11
INFO  04:25:50,139 - Function sum is called at line 11
INFO  04:25:50,139 - Global variable x accessed at line 12
INFO  04:25:50,139 - Semantic analysis completed.
INFO  04:25:50,139 - Semantic analysis finished successfully!
INFO  04:25:50,139 - Symbol table: 
INFO  04:25:50,140 - =========================================
INFO  04:25:50,140 - Started generating code....
INFO  04:25:50,148 - Code generated successfully!
INFO  04:25:50,149 - Compiling file successfully completed!
