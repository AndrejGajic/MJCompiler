INFO  03:21:46,366 - Starting compilation of a file test/test302.mj
INFO  03:21:46,367 - Starting lexical analysis....
INFO  03:21:46,370 - Lexical analysis finished successfully!
INFO  03:21:46,370 - =========================================
INFO  03:21:46,370 - Starting syntax analysis....
INFO  03:21:46,490 - #2 program
INFO  03:21:46,491 - #48 test302
INFO  03:21:46,491 - #7 const
INFO  03:21:46,492 - #48 int
INFO  03:21:46,492 - #48 jedan
INFO  03:21:46,493 - #35 =
INFO  03:21:46,493 - #49 1
INFO  03:21:46,493 - #38 ;
INFO  03:21:46,494 - #48 int
INFO  03:21:46,494 - #48 i
INFO  03:21:46,494 - #38 ;
INFO  03:21:46,496 - #48 bool
INFO  03:21:46,496 - #48 ibool
INFO  03:21:46,497 - #38 ;
INFO  03:21:46,497 - #48 int
INFO  03:21:46,501 - #48 niz2
INFO  03:21:46,501 - #38 ;
INFO  03:21:46,501 - #48 int
INFO  03:21:46,501 - #48 niz
INFO  03:21:46,501 - #44 [
INFO  03:21:46,501 - #45 ]
INFO  03:21:46,501 - #38 ;
INFO  03:21:46,502 - #48 int
INFO  03:21:46,502 - #48 a
INFO  03:21:46,502 - #38 ;
INFO  03:21:46,502 - #46 {
INFO  03:21:46,502 - #48 int
INFO  03:21:46,503 - #48 sum
INFO  03:21:46,504 - #42 (
INFO  03:21:46,504 - #48 int
INFO  03:21:46,505 - #48 z
INFO  03:21:46,505 - #35 =
INFO  03:21:46,505 - #49 1
INFO  03:21:46,505 - #40 ,
INFO  03:21:46,505 - #48 int
INFO  03:21:46,506 - #48 d
INFO  03:21:46,506 - #35 =
INFO  03:21:46,506 - #49 2
INFO  03:21:46,506 - #43 )
INFO  03:21:46,506 - #46 {
INFO  03:21:46,508 - #14 return
INFO  03:21:46,509 - #48 z
INFO  03:21:46,511 - #22 +
INFO  03:21:46,511 - #48 d
INFO  03:21:46,513 - #38 ;
INFO  03:21:46,514 - #47 }
INFO  03:21:46,515 - #48 int
INFO  03:21:46,515 - #48 inkrement
INFO  03:21:46,515 - #42 (
INFO  03:21:46,515 - #48 int
INFO  03:21:46,515 - #48 a
INFO  03:21:46,515 - #40 ,
INFO  03:21:46,516 - #48 int
INFO  03:21:46,516 - #48 inc
INFO  03:21:46,516 - #35 =
INFO  03:21:46,516 - #49 1
INFO  03:21:46,516 - #43 )
INFO  03:21:46,516 - #48 int
INFO  03:21:46,516 - #48 pom
INFO  03:21:46,516 - #38 ;
INFO  03:21:46,517 - #46 {
INFO  03:21:46,517 - #8 if
INFO  03:21:46,517 - #42 (
INFO  03:21:46,517 - #48 inc
INFO  03:21:46,517 - #27 ==
INFO  03:21:46,518 - #48 jedan
INFO  03:21:46,519 - #43 )
INFO  03:21:46,520 - #48 pom
INFO  03:21:46,520 - #35 =
INFO  03:21:46,520 - #49 1
INFO  03:21:46,521 - #38 ;
INFO  03:21:46,522 - #6 else
INFO  03:21:46,522 - #8 if
INFO  03:21:46,522 - #42 (
INFO  03:21:46,523 - #48 inc
INFO  03:21:46,523 - #27 ==
INFO  03:21:46,523 - #49 2
INFO  03:21:46,523 - #43 )
INFO  03:21:46,523 - #48 pom
INFO  03:21:46,523 - #35 =
INFO  03:21:46,523 - #48 a
INFO  03:21:46,523 - #38 ;
INFO  03:21:46,523 - #14 return
INFO  03:21:46,524 - #48 sum
INFO  03:21:46,524 - #42 (
INFO  03:21:46,525 - #48 a
INFO  03:21:46,525 - #40 ,
INFO  03:21:46,525 - #48 pom
INFO  03:21:46,525 - #43 )
INFO  03:21:46,525 - #38 ;
INFO  03:21:46,525 - #47 }
INFO  03:21:46,525 - #48 bool
INFO  03:21:46,525 - #48 verify
INFO  03:21:46,525 - #42 (
INFO  03:21:46,525 - #43 )
INFO  03:21:46,526 - #46 {
INFO  03:21:46,526 - #12 print
INFO  03:21:46,526 - #42 (
INFO  03:21:46,527 - #50 v
INFO  03:21:46,527 - #43 )
INFO  03:21:46,527 - #38 ;
INFO  03:21:46,528 - #14 return
INFO  03:21:46,528 - #51 false
INFO  03:21:46,528 - #38 ;
INFO  03:21:46,528 - #47 }
INFO  03:21:46,528 - #15 void
INFO  03:21:46,528 - #48 main
INFO  03:21:46,529 - #42 (
INFO  03:21:46,529 - #43 )
INFO  03:21:46,529 - #46 {
INFO  03:21:46,529 - #12 print
INFO  03:21:46,529 - #42 (
INFO  03:21:46,530 - #48 sum
INFO  03:21:46,530 - #42 (
INFO  03:21:46,530 - #43 )
INFO  03:21:46,531 - #43 )
INFO  03:21:46,531 - #38 ;
INFO  03:21:46,531 - #12 print
INFO  03:21:46,531 - #42 (
INFO  03:21:46,531 - #48 sum
INFO  03:21:46,531 - #42 (
INFO  03:21:46,531 - #49 2
INFO  03:21:46,531 - #43 )
INFO  03:21:46,531 - #43 )
INFO  03:21:46,532 - #38 ;
INFO  03:21:46,532 - #8 if
INFO  03:21:46,532 - #42 (
INFO  03:21:46,532 - #49 1
INFO  03:21:46,532 - #28 !=
INFO  03:21:46,532 - #49 1
INFO  03:21:46,534 - #43 )
INFO  03:21:46,534 - #12 print
INFO  03:21:46,534 - #42 (
INFO  03:21:46,534 - #23 -
INFO  03:21:46,535 - #49 6
INFO  03:21:46,535 - #43 )
INFO  03:21:46,536 - #38 ;
INFO  03:21:46,536 - #6 else
INFO  03:21:46,536 - #12 print
INFO  03:21:46,536 - #42 (
INFO  03:21:46,536 - #49 0
INFO  03:21:46,536 - #43 )
INFO  03:21:46,536 - #38 ;
INFO  03:21:46,536 - #48 ibool
INFO  03:21:46,536 - #35 =
INFO  03:21:46,536 - #51 false
INFO  03:21:46,536 - #38 ;
INFO  03:21:46,536 - #48 i
INFO  03:21:46,536 - #35 =
INFO  03:21:46,536 - #49 0
INFO  03:21:46,536 - #38 ;
INFO  03:21:46,537 - #9 do
INFO  03:21:46,537 - #46 {
INFO  03:21:46,538 - #8 if
INFO  03:21:46,538 - #42 (
INFO  03:21:46,538 - #48 i
INFO  03:21:46,538 - #27 ==
INFO  03:21:46,539 - #49 2
INFO  03:21:46,539 - #43 )
INFO  03:21:46,539 - #48 ibool
INFO  03:21:46,539 - #35 =
INFO  03:21:46,539 - #51 true
INFO  03:21:46,539 - #38 ;
INFO  03:21:46,539 - #48 i
INFO  03:21:46,539 - #36 ++
INFO  03:21:46,539 - #38 ;
INFO  03:21:46,540 - #47 }
INFO  03:21:46,540 - #10 while
INFO  03:21:46,541 - #42 (
INFO  03:21:46,541 - #48 i
INFO  03:21:46,541 - #31 <
INFO  03:21:46,541 - #49 5
INFO  03:21:46,542 - #43 )
INFO  03:21:46,542 - #38 ;
INFO  03:21:46,542 - #8 if
INFO  03:21:46,542 - #42 (
INFO  03:21:46,543 - #48 ibool
INFO  03:21:46,543 - #43 )
INFO  03:21:46,543 - #8 if
INFO  03:21:46,543 - #42 (
INFO  03:21:46,543 - #48 i
INFO  03:21:46,543 - #27 ==
INFO  03:21:46,543 - #49 5
INFO  03:21:46,543 - #43 )
INFO  03:21:46,544 - #12 print
INFO  03:21:46,544 - #42 (
INFO  03:21:46,544 - #49 1
INFO  03:21:46,544 - #43 )
INFO  03:21:46,544 - #38 ;
INFO  03:21:46,544 - #6 else
INFO  03:21:46,544 - #12 print
INFO  03:21:46,549 - #42 (
INFO  03:21:46,549 - #23 -
INFO  03:21:46,549 - #49 1
INFO  03:21:46,549 - #43 )
INFO  03:21:46,549 - #38 ;
INFO  03:21:46,549 - #48 a
INFO  03:21:46,550 - #35 =
INFO  03:21:46,550 - #49 2
INFO  03:21:46,550 - #38 ;
INFO  03:21:46,550 - #48 niz
INFO  03:21:46,550 - #35 =
INFO  03:21:46,550 - #11 new
INFO  03:21:46,550 - #48 int
INFO  03:21:46,550 - #44 [
INFO  03:21:46,550 - #49 3
INFO  03:21:46,550 - #45 ]
INFO  03:21:46,550 - #38 ;
INFO  03:21:46,551 - #48 niz
INFO  03:21:46,551 - #44 [
INFO  03:21:46,551 - #49 0
INFO  03:21:46,551 - #45 ]
INFO  03:21:46,551 - #35 =
INFO  03:21:46,552 - #49 1
INFO  03:21:46,552 - #24 *
INFO  03:21:46,553 - #48 a
INFO  03:21:46,555 - #38 ;
INFO  03:21:46,555 - #48 niz
INFO  03:21:46,556 - #44 [
INFO  03:21:46,556 - #49 1
INFO  03:21:46,556 - #45 ]
INFO  03:21:46,556 - #35 =
INFO  03:21:46,556 - #49 2
INFO  03:21:46,556 - #24 *
INFO  03:21:46,556 - #48 a
INFO  03:21:46,556 - #38 ;
INFO  03:21:46,556 - #48 niz
INFO  03:21:46,556 - #44 [
INFO  03:21:46,556 - #49 2
INFO  03:21:46,556 - #45 ]
INFO  03:21:46,556 - #35 =
INFO  03:21:46,556 - #48 sum
INFO  03:21:46,556 - #42 (
INFO  03:21:46,556 - #48 niz
INFO  03:21:46,556 - #44 [
INFO  03:21:46,556 - #49 1
INFO  03:21:46,556 - #45 ]
INFO  03:21:46,556 - #40 ,
INFO  03:21:46,556 - #48 niz
INFO  03:21:46,556 - #44 [
INFO  03:21:46,556 - #49 0
INFO  03:21:46,556 - #45 ]
INFO  03:21:46,556 - #43 )
INFO  03:21:46,557 - #24 *
INFO  03:21:46,557 - #48 a
INFO  03:21:46,557 - #22 +
INFO  03:21:46,557 - #49 1
INFO  03:21:46,557 - #38 ;
INFO  03:21:46,557 - #8 if
INFO  03:21:46,557 - #42 (
INFO  03:21:46,557 - #48 verify
INFO  03:21:46,557 - #42 (
INFO  03:21:46,557 - #43 )
INFO  03:21:46,557 - #34 ||
INFO  03:21:46,558 - #48 niz
INFO  03:21:46,558 - #44 [
INFO  03:21:46,558 - #49 2
INFO  03:21:46,558 - #45 ]
INFO  03:21:46,558 - #27 ==
INFO  03:21:46,558 - #49 4
INFO  03:21:46,558 - #43 )
INFO  03:21:46,558 - #12 print
INFO  03:21:46,558 - #42 (
INFO  03:21:46,558 - #48 ord
INFO  03:21:46,558 - #42 (
INFO  03:21:46,558 - #50 A
INFO  03:21:46,559 - #43 )
INFO  03:21:46,559 - #43 )
INFO  03:21:46,559 - #38 ;
INFO  03:21:46,559 - #6 else
INFO  03:21:46,559 - #12 print
INFO  03:21:46,559 - #42 (
INFO  03:21:46,559 - #48 ord
INFO  03:21:46,559 - #42 (
INFO  03:21:46,560 - #50 a
INFO  03:21:46,560 - #43 )
INFO  03:21:46,560 - #43 )
INFO  03:21:46,560 - #38 ;
INFO  03:21:46,560 - #12 print
INFO  03:21:46,560 - #42 (
INFO  03:21:46,560 - #48 eol
INFO  03:21:46,560 - #43 )
INFO  03:21:46,560 - #38 ;
INFO  03:21:46,560 - #48 i
INFO  03:21:46,560 - #35 =
INFO  03:21:46,560 - #48 inkrement
INFO  03:21:46,560 - #42 (
INFO  03:21:46,560 - #48 i
INFO  03:21:46,560 - #43 )
INFO  03:21:46,560 - #38 ;
INFO  03:21:46,560 - #47 }
INFO  03:21:46,560 - #47 }
INFO  03:21:46,562 - Syntax analysis finished successfully!
INFO  03:21:46,562 - Syntax tree: 
INFO  03:21:46,571 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  ProgramVariablesList(
    ProgramVariablesList(
      ProgramVariablesList(
        ProgramVariablesList(
          ProgramVariablesList(
            ProgramVariablesList(
              EmptyProgramVariablesList(
              ) [EmptyProgramVariablesList]
              ProgramConstants(
                ConstantsClass(
                  Type(
                   int
                  ) [Type]
                  SingleConstantList(
                    ConstantDeclaration(
                     jedan
                      NumConstClass(
                        NumberConstant(
                         1
                        ) [NumberConstant]
                      ) [NumConstClass]
                    ) [ConstantDeclaration]
                  ) [SingleConstantList]
                ) [ConstantsClass]
              ) [ProgramConstants]
            ) [ProgramVariablesList]
            ProgramVariables(
              GlobalVariables(
                Type(
                 int
                ) [Type]
                SingleGlobalVariableList(
                  GlobalVariableDeclaration(
                   i
                    VarIsNotArray(
                    ) [VarIsNotArray]
                  ) [GlobalVariableDeclaration]
                ) [SingleGlobalVariableList]
              ) [GlobalVariables]
            ) [ProgramVariables]
          ) [ProgramVariablesList]
          ProgramVariables(
            GlobalVariables(
              Type(
               bool
              ) [Type]
              SingleGlobalVariableList(
                GlobalVariableDeclaration(
                 ibool
                  VarIsNotArray(
                  ) [VarIsNotArray]
                ) [GlobalVariableDeclaration]
              ) [SingleGlobalVariableList]
            ) [GlobalVariables]
          ) [ProgramVariables]
        ) [ProgramVariablesList]
        ProgramVariables(
          GlobalVariables(
            Type(
             int
            ) [Type]
            SingleGlobalVariableList(
              GlobalVariableDeclaration(
               niz2
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [GlobalVariableDeclaration]
            ) [SingleGlobalVariableList]
          ) [GlobalVariables]
        ) [ProgramVariables]
      ) [ProgramVariablesList]
      ProgramVariables(
        GlobalVariables(
          Type(
           int
          ) [Type]
          SingleGlobalVariableList(
            GlobalVariableDeclaration(
             niz
              VarIsArray(
              ) [VarIsArray]
            ) [GlobalVariableDeclaration]
          ) [SingleGlobalVariableList]
        ) [GlobalVariables]
      ) [ProgramVariables]
    ) [ProgramVariablesList]
    ProgramVariables(
      GlobalVariables(
        Type(
         int
        ) [Type]
        SingleGlobalVariableList(
          GlobalVariableDeclaration(
           a
            VarIsNotArray(
            ) [VarIsNotArray]
          ) [GlobalVariableDeclaration]
        ) [SingleGlobalVariableList]
      ) [GlobalVariables]
    ) [ProgramVariables]
  ) [ProgramVariablesList]
  ProgramMethodsList(
    ProgramMethodsList(
      ProgramMethodsList(
        ProgramMethodsList(
          EmptyProgramMethodsList(
          ) [EmptyProgramMethodsList]
          MethodDeclaration(
            MethodTypeNotVoid(
              Type(
               int
              ) [Type]
            ) [MethodTypeNotVoid]
            MethodName(
             sum
            ) [MethodName]
            OptionalArgumentsList(
              MultipleOptionalArguments(
                SingleOptionalArgument(
                  OptionalArgument(
                    Type(
                     int
                    ) [Type]
                   z
                    NumConstClass(
                      NumberConstant(
                       1
                      ) [NumberConstant]
                    ) [NumConstClass]
                  ) [OptionalArgument]
                ) [SingleOptionalArgument]
                OptionalArgument(
                  Type(
                   int
                  ) [Type]
                 d
                  NumConstClass(
                    NumberConstant(
                     2
                    ) [NumberConstant]
                  ) [NumConstClass]
                ) [OptionalArgument]
              ) [MultipleOptionalArguments]
            ) [OptionalArgumentsList]
            EmptyVariablesDeclarationList(
            ) [EmptyVariablesDeclarationList]
            StatementListClass(
              EmptyStatementList(
              ) [EmptyStatementList]
              SingleStatementClass(
                ReturnStatement(
                  HasReturnExpression(
                    Expr(
                      ExpressionAddop(
                        ExpressionClass(
                          ExpressionPositive(
                          ) [ExpressionPositive]
                          Terminal(
                            FactorDesignator(
                              DesignatorClass(
                               z
                              ) [DesignatorClass]
                            ) [FactorDesignator]
                          ) [Terminal]
                        ) [ExpressionClass]
                        AdditionOperation(
                        ) [AdditionOperation]
                        Terminal(
                          FactorDesignator(
                            DesignatorClass(
                             d
                            ) [DesignatorClass]
                          ) [FactorDesignator]
                        ) [Terminal]
                      ) [ExpressionAddop]
                    ) [Expr]
                  ) [HasReturnExpression]
                ) [ReturnStatement]
              ) [SingleStatementClass]
            ) [StatementListClass]
          ) [MethodDeclaration]
        ) [ProgramMethodsList]
        MethodDeclaration(
          MethodTypeNotVoid(
            Type(
             int
            ) [Type]
          ) [MethodTypeNotVoid]
          MethodName(
           inkrement
          ) [MethodName]
          FormalParametersListWithOptionalArguments(
            SingleFormalParameter(
              FormalParameter(
                Type(
                 int
                ) [Type]
               a
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [FormalParameter]
            ) [SingleFormalParameter]
            SingleOptionalArgument(
              OptionalArgument(
                Type(
                 int
                ) [Type]
               inc
                NumConstClass(
                  NumberConstant(
                   1
                  ) [NumberConstant]
                ) [NumConstClass]
              ) [OptionalArgument]
            ) [SingleOptionalArgument]
          ) [FormalParametersListWithOptionalArguments]
          VariablesDeclarationList(
            EmptyVariablesDeclarationList(
            ) [EmptyVariablesDeclarationList]
            LocalVariables(
              Type(
               int
              ) [Type]
              SingleLocalVariableList(
                VariableDeclaration(
                 pom
                  VarIsNotArray(
                  ) [VarIsNotArray]
                ) [VariableDeclaration]
              ) [SingleLocalVariableList]
            ) [LocalVariables]
          ) [VariablesDeclarationList]
          StatementListClass(
            StatementListClass(
              EmptyStatementList(
              ) [EmptyStatementList]
              SingleStatementClass(
                IfStatement(
                  IfConditionClass(
                    SingleCondition(
                      SingleConditionTerm(
                        ConditionFactRelop(
                          ConditionFact(
                            Expr(
                              ExpressionClass(
                                ExpressionPositive(
                                ) [ExpressionPositive]
                                Terminal(
                                  FactorDesignator(
                                    DesignatorClass(
                                     inc
                                    ) [DesignatorClass]
                                  ) [FactorDesignator]
                                ) [Terminal]
                              ) [ExpressionClass]
                            ) [Expr]
                          ) [ConditionFact]
                          RelationEquals(
                          ) [RelationEquals]
                          Expr(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorDesignator(
                                  DesignatorClass(
                                   jedan
                                  ) [DesignatorClass]
                                ) [FactorDesignator]
                              ) [Terminal]
                            ) [ExpressionClass]
                          ) [Expr]
                        ) [ConditionFactRelop]
                      ) [SingleConditionTerm]
                    ) [SingleCondition]
                  ) [IfConditionClass]
                  SingleStatementClass(
                    SSDesignatorStatement(
                      DesignatorStatementClass(
                        DesignatorClass(
                         pom
                        ) [DesignatorClass]
                        DesignatorAssign(
                          DesignatorAssignOperation(
                            AssignOperation(
                            ) [AssignOperation]
                            Expr(
                              ExpressionClass(
                                ExpressionPositive(
                                ) [ExpressionPositive]
                                Terminal(
                                  FactorNumberConstant(
                                    NumberConstant(
                                     1
                                    ) [NumberConstant]
                                  ) [FactorNumberConstant]
                                ) [Terminal]
                              ) [ExpressionClass]
                            ) [Expr]
                          ) [DesignatorAssignOperation]
                        ) [DesignatorAssign]
                      ) [DesignatorStatementClass]
                    ) [SSDesignatorStatement]
                  ) [SingleStatementClass]
                  HasElseClause(
                    SingleStatementClass(
                      IfStatement(
                        IfConditionClass(
                          SingleCondition(
                            SingleConditionTerm(
                              ConditionFactRelop(
                                ConditionFact(
                                  Expr(
                                    ExpressionClass(
                                      ExpressionPositive(
                                      ) [ExpressionPositive]
                                      Terminal(
                                        FactorDesignator(
                                          DesignatorClass(
                                           inc
                                          ) [DesignatorClass]
                                        ) [FactorDesignator]
                                      ) [Terminal]
                                    ) [ExpressionClass]
                                  ) [Expr]
                                ) [ConditionFact]
                                RelationEquals(
                                ) [RelationEquals]
                                Expr(
                                  ExpressionClass(
                                    ExpressionPositive(
                                    ) [ExpressionPositive]
                                    Terminal(
                                      FactorNumberConstant(
                                        NumberConstant(
                                         2
                                        ) [NumberConstant]
                                      ) [FactorNumberConstant]
                                    ) [Terminal]
                                  ) [ExpressionClass]
                                ) [Expr]
                              ) [ConditionFactRelop]
                            ) [SingleConditionTerm]
                          ) [SingleCondition]
                        ) [IfConditionClass]
                        SingleStatementClass(
                          SSDesignatorStatement(
                            DesignatorStatementClass(
                              DesignatorClass(
                               pom
                              ) [DesignatorClass]
                              DesignatorAssign(
                                DesignatorAssignOperation(
                                  AssignOperation(
                                  ) [AssignOperation]
                                  Expr(
                                    ExpressionClass(
                                      ExpressionPositive(
                                      ) [ExpressionPositive]
                                      Terminal(
                                        FactorDesignator(
                                          DesignatorClass(
                                           a
                                          ) [DesignatorClass]
                                        ) [FactorDesignator]
                                      ) [Terminal]
                                    ) [ExpressionClass]
                                  ) [Expr]
                                ) [DesignatorAssignOperation]
                              ) [DesignatorAssign]
                            ) [DesignatorStatementClass]
                          ) [SSDesignatorStatement]
                        ) [SingleStatementClass]
                        HasNotElseClause(
                        ) [HasNotElseClause]
                      ) [IfStatement]
                    ) [SingleStatementClass]
                  ) [HasElseClause]
                ) [IfStatement]
              ) [SingleStatementClass]
            ) [StatementListClass]
            SingleStatementClass(
              ReturnStatement(
                HasReturnExpression(
                  Expr(
                    ExpressionClass(
                      ExpressionPositive(
                      ) [ExpressionPositive]
                      Terminal(
                        FactorFunctionCall(
                          DesignatorClass(
                           sum
                          ) [DesignatorClass]
                          FunctionCallHasArguments(
                            MultipleActualParameters(
                              SingleActualParameter(
                                Expr(
                                  ExpressionClass(
                                    ExpressionPositive(
                                    ) [ExpressionPositive]
                                    Terminal(
                                      FactorDesignator(
                                        DesignatorClass(
                                         a
                                        ) [DesignatorClass]
                                      ) [FactorDesignator]
                                    ) [Terminal]
                                  ) [ExpressionClass]
                                ) [Expr]
                              ) [SingleActualParameter]
                              Expr(
                                ExpressionClass(
                                  ExpressionPositive(
                                  ) [ExpressionPositive]
                                  Terminal(
                                    FactorDesignator(
                                      DesignatorClass(
                                       pom
                                      ) [DesignatorClass]
                                    ) [FactorDesignator]
                                  ) [Terminal]
                                ) [ExpressionClass]
                              ) [Expr]
                            ) [MultipleActualParameters]
                          ) [FunctionCallHasArguments]
                        ) [FactorFunctionCall]
                      ) [Terminal]
                    ) [ExpressionClass]
                  ) [Expr]
                ) [HasReturnExpression]
              ) [ReturnStatement]
            ) [SingleStatementClass]
          ) [StatementListClass]
        ) [MethodDeclaration]
      ) [ProgramMethodsList]
      MethodDeclaration(
        MethodTypeNotVoid(
          Type(
           bool
          ) [Type]
        ) [MethodTypeNotVoid]
        MethodName(
         verify
        ) [MethodName]
        EmptyFormalParametersList(
        ) [EmptyFormalParametersList]
        EmptyVariablesDeclarationList(
        ) [EmptyVariablesDeclarationList]
        StatementListClass(
          StatementListClass(
            EmptyStatementList(
            ) [EmptyStatementList]
            SingleStatementClass(
              PrintStatement(
                Expr(
                  ExpressionClass(
                    ExpressionPositive(
                    ) [ExpressionPositive]
                    Terminal(
                      FactorCharacterConstant(
                        CharacterConstant(
                         v
                        ) [CharacterConstant]
                      ) [FactorCharacterConstant]
                    ) [Terminal]
                  ) [ExpressionClass]
                ) [Expr]
                HasNotPrintConstant(
                ) [HasNotPrintConstant]
              ) [PrintStatement]
            ) [SingleStatementClass]
          ) [StatementListClass]
          SingleStatementClass(
            ReturnStatement(
              HasReturnExpression(
                Expr(
                  ExpressionClass(
                    ExpressionPositive(
                    ) [ExpressionPositive]
                    Terminal(
                      FactorBooleanConstant(
                        BooleanConstant(
                         false
                        ) [BooleanConstant]
                      ) [FactorBooleanConstant]
                    ) [Terminal]
                  ) [ExpressionClass]
                ) [Expr]
              ) [HasReturnExpression]
            ) [ReturnStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
      ) [MethodDeclaration]
    ) [ProgramMethodsList]
    MethodDeclaration(
      MethodTypeVoid(
      ) [MethodTypeVoid]
      MethodName(
       main
      ) [MethodName]
      EmptyFormalParametersList(
      ) [EmptyFormalParametersList]
      EmptyVariablesDeclarationList(
      ) [EmptyVariablesDeclarationList]
      StatementListClass(
        StatementListClass(
          StatementListClass(
            StatementListClass(
              StatementListClass(
                StatementListClass(
                  StatementListClass(
                    StatementListClass(
                      StatementListClass(
                        StatementListClass(
                          StatementListClass(
                            StatementListClass(
                              StatementListClass(
                                StatementListClass(
                                  StatementListClass(
                                    EmptyStatementList(
                                    ) [EmptyStatementList]
                                    SingleStatementClass(
                                      PrintStatement(
                                        Expr(
                                          ExpressionClass(
                                            ExpressionPositive(
                                            ) [ExpressionPositive]
                                            Terminal(
                                              FactorFunctionCall(
                                                DesignatorClass(
                                                 sum
                                                ) [DesignatorClass]
                                                FunctionCallNoArguments(
                                                ) [FunctionCallNoArguments]
                                              ) [FactorFunctionCall]
                                            ) [Terminal]
                                          ) [ExpressionClass]
                                        ) [Expr]
                                        HasNotPrintConstant(
                                        ) [HasNotPrintConstant]
                                      ) [PrintStatement]
                                    ) [SingleStatementClass]
                                  ) [StatementListClass]
                                  SingleStatementClass(
                                    PrintStatement(
                                      Expr(
                                        ExpressionClass(
                                          ExpressionPositive(
                                          ) [ExpressionPositive]
                                          Terminal(
                                            FactorFunctionCall(
                                              DesignatorClass(
                                               sum
                                              ) [DesignatorClass]
                                              FunctionCallHasArguments(
                                                SingleActualParameter(
                                                  Expr(
                                                    ExpressionClass(
                                                      ExpressionPositive(
                                                      ) [ExpressionPositive]
                                                      Terminal(
                                                        FactorNumberConstant(
                                                          NumberConstant(
                                                           2
                                                          ) [NumberConstant]
                                                        ) [FactorNumberConstant]
                                                      ) [Terminal]
                                                    ) [ExpressionClass]
                                                  ) [Expr]
                                                ) [SingleActualParameter]
                                              ) [FunctionCallHasArguments]
                                            ) [FactorFunctionCall]
                                          ) [Terminal]
                                        ) [ExpressionClass]
                                      ) [Expr]
                                      HasNotPrintConstant(
                                      ) [HasNotPrintConstant]
                                    ) [PrintStatement]
                                  ) [SingleStatementClass]
                                ) [StatementListClass]
                                SingleStatementClass(
                                  IfStatement(
                                    IfConditionClass(
                                      SingleCondition(
                                        SingleConditionTerm(
                                          ConditionFactRelop(
                                            ConditionFact(
                                              Expr(
                                                ExpressionClass(
                                                  ExpressionPositive(
                                                  ) [ExpressionPositive]
                                                  Terminal(
                                                    FactorNumberConstant(
                                                      NumberConstant(
                                                       1
                                                      ) [NumberConstant]
                                                    ) [FactorNumberConstant]
                                                  ) [Terminal]
                                                ) [ExpressionClass]
                                              ) [Expr]
                                            ) [ConditionFact]
                                            RelationNotEquals(
                                            ) [RelationNotEquals]
                                            Expr(
                                              ExpressionClass(
                                                ExpressionPositive(
                                                ) [ExpressionPositive]
                                                Terminal(
                                                  FactorNumberConstant(
                                                    NumberConstant(
                                                     1
                                                    ) [NumberConstant]
                                                  ) [FactorNumberConstant]
                                                ) [Terminal]
                                              ) [ExpressionClass]
                                            ) [Expr]
                                          ) [ConditionFactRelop]
                                        ) [SingleConditionTerm]
                                      ) [SingleCondition]
                                    ) [IfConditionClass]
                                    SingleStatementClass(
                                      PrintStatement(
                                        Expr(
                                          ExpressionClass(
                                            ExpressionNegative(
                                            ) [ExpressionNegative]
                                            Terminal(
                                              FactorNumberConstant(
                                                NumberConstant(
                                                 6
                                                ) [NumberConstant]
                                              ) [FactorNumberConstant]
                                            ) [Terminal]
                                          ) [ExpressionClass]
                                        ) [Expr]
                                        HasNotPrintConstant(
                                        ) [HasNotPrintConstant]
                                      ) [PrintStatement]
                                    ) [SingleStatementClass]
                                    HasElseClause(
                                      SingleStatementClass(
                                        PrintStatement(
                                          Expr(
                                            ExpressionClass(
                                              ExpressionPositive(
                                              ) [ExpressionPositive]
                                              Terminal(
                                                FactorNumberConstant(
                                                  NumberConstant(
                                                   0
                                                  ) [NumberConstant]
                                                ) [FactorNumberConstant]
                                              ) [Terminal]
                                            ) [ExpressionClass]
                                          ) [Expr]
                                          HasNotPrintConstant(
                                          ) [HasNotPrintConstant]
                                        ) [PrintStatement]
                                      ) [SingleStatementClass]
                                    ) [HasElseClause]
                                  ) [IfStatement]
                                ) [SingleStatementClass]
                              ) [StatementListClass]
                              SingleStatementClass(
                                SSDesignatorStatement(
                                  DesignatorStatementClass(
                                    DesignatorClass(
                                     ibool
                                    ) [DesignatorClass]
                                    DesignatorAssign(
                                      DesignatorAssignOperation(
                                        AssignOperation(
                                        ) [AssignOperation]
                                        Expr(
                                          ExpressionClass(
                                            ExpressionPositive(
                                            ) [ExpressionPositive]
                                            Terminal(
                                              FactorBooleanConstant(
                                                BooleanConstant(
                                                 false
                                                ) [BooleanConstant]
                                              ) [FactorBooleanConstant]
                                            ) [Terminal]
                                          ) [ExpressionClass]
                                        ) [Expr]
                                      ) [DesignatorAssignOperation]
                                    ) [DesignatorAssign]
                                  ) [DesignatorStatementClass]
                                ) [SSDesignatorStatement]
                              ) [SingleStatementClass]
                            ) [StatementListClass]
                            SingleStatementClass(
                              SSDesignatorStatement(
                                DesignatorStatementClass(
                                  DesignatorClass(
                                   i
                                  ) [DesignatorClass]
                                  DesignatorAssign(
                                    DesignatorAssignOperation(
                                      AssignOperation(
                                      ) [AssignOperation]
                                      Expr(
                                        ExpressionClass(
                                          ExpressionPositive(
                                          ) [ExpressionPositive]
                                          Terminal(
                                            FactorNumberConstant(
                                              NumberConstant(
                                               0
                                              ) [NumberConstant]
                                            ) [FactorNumberConstant]
                                          ) [Terminal]
                                        ) [ExpressionClass]
                                      ) [Expr]
                                    ) [DesignatorAssignOperation]
                                  ) [DesignatorAssign]
                                ) [DesignatorStatementClass]
                              ) [SSDesignatorStatement]
                            ) [SingleStatementClass]
                          ) [StatementListClass]
                          SingleStatementClass(
                            DoWhileStatement(
                              DoWhileStartClass(
                              ) [DoWhileStartClass]
                              MultipleStatements(
                                StatementClass(
                                  StatementListClass(
                                    StatementListClass(
                                      EmptyStatementList(
                                      ) [EmptyStatementList]
                                      SingleStatementClass(
                                        IfStatement(
                                          IfConditionClass(
                                            SingleCondition(
                                              SingleConditionTerm(
                                                ConditionFactRelop(
                                                  ConditionFact(
                                                    Expr(
                                                      ExpressionClass(
                                                        ExpressionPositive(
                                                        ) [ExpressionPositive]
                                                        Terminal(
                                                          FactorDesignator(
                                                            DesignatorClass(
                                                             i
                                                            ) [DesignatorClass]
                                                          ) [FactorDesignator]
                                                        ) [Terminal]
                                                      ) [ExpressionClass]
                                                    ) [Expr]
                                                  ) [ConditionFact]
                                                  RelationEquals(
                                                  ) [RelationEquals]
                                                  Expr(
                                                    ExpressionClass(
                                                      ExpressionPositive(
                                                      ) [ExpressionPositive]
                                                      Terminal(
                                                        FactorNumberConstant(
                                                          NumberConstant(
                                                           2
                                                          ) [NumberConstant]
                                                        ) [FactorNumberConstant]
                                                      ) [Terminal]
                                                    ) [ExpressionClass]
                                                  ) [Expr]
                                                ) [ConditionFactRelop]
                                              ) [SingleConditionTerm]
                                            ) [SingleCondition]
                                          ) [IfConditionClass]
                                          SingleStatementClass(
                                            SSDesignatorStatement(
                                              DesignatorStatementClass(
                                                DesignatorClass(
                                                 ibool
                                                ) [DesignatorClass]
                                                DesignatorAssign(
                                                  DesignatorAssignOperation(
                                                    AssignOperation(
                                                    ) [AssignOperation]
                                                    Expr(
                                                      ExpressionClass(
                                                        ExpressionPositive(
                                                        ) [ExpressionPositive]
                                                        Terminal(
                                                          FactorBooleanConstant(
                                                            BooleanConstant(
                                                             true
                                                            ) [BooleanConstant]
                                                          ) [FactorBooleanConstant]
                                                        ) [Terminal]
                                                      ) [ExpressionClass]
                                                    ) [Expr]
                                                  ) [DesignatorAssignOperation]
                                                ) [DesignatorAssign]
                                              ) [DesignatorStatementClass]
                                            ) [SSDesignatorStatement]
                                          ) [SingleStatementClass]
                                          HasNotElseClause(
                                          ) [HasNotElseClause]
                                        ) [IfStatement]
                                      ) [SingleStatementClass]
                                    ) [StatementListClass]
                                    SingleStatementClass(
                                      SSDesignatorStatement(
                                        DesignatorStatementClass(
                                          DesignatorClass(
                                           i
                                          ) [DesignatorClass]
                                          DesignatorIncrement(
                                          ) [DesignatorIncrement]
                                        ) [DesignatorStatementClass]
                                      ) [SSDesignatorStatement]
                                    ) [SingleStatementClass]
                                  ) [StatementListClass]
                                ) [StatementClass]
                              ) [MultipleStatements]
                              SingleCondition(
                                SingleConditionTerm(
                                  ConditionFactRelop(
                                    ConditionFact(
                                      Expr(
                                        ExpressionClass(
                                          ExpressionPositive(
                                          ) [ExpressionPositive]
                                          Terminal(
                                            FactorDesignator(
                                              DesignatorClass(
                                               i
                                              ) [DesignatorClass]
                                            ) [FactorDesignator]
                                          ) [Terminal]
                                        ) [ExpressionClass]
                                      ) [Expr]
                                    ) [ConditionFact]
                                    RelationLess(
                                    ) [RelationLess]
                                    Expr(
                                      ExpressionClass(
                                        ExpressionPositive(
                                        ) [ExpressionPositive]
                                        Terminal(
                                          FactorNumberConstant(
                                            NumberConstant(
                                             5
                                            ) [NumberConstant]
                                          ) [FactorNumberConstant]
                                        ) [Terminal]
                                      ) [ExpressionClass]
                                    ) [Expr]
                                  ) [ConditionFactRelop]
                                ) [SingleConditionTerm]
                              ) [SingleCondition]
                            ) [DoWhileStatement]
                          ) [SingleStatementClass]
                        ) [StatementListClass]
                        SingleStatementClass(
                          IfStatement(
                            IfConditionClass(
                              SingleCondition(
                                SingleConditionTerm(
                                  ConditionFact(
                                    Expr(
                                      ExpressionClass(
                                        ExpressionPositive(
                                        ) [ExpressionPositive]
                                        Terminal(
                                          FactorDesignator(
                                            DesignatorClass(
                                             ibool
                                            ) [DesignatorClass]
                                          ) [FactorDesignator]
                                        ) [Terminal]
                                      ) [ExpressionClass]
                                    ) [Expr]
                                  ) [ConditionFact]
                                ) [SingleConditionTerm]
                              ) [SingleCondition]
                            ) [IfConditionClass]
                            SingleStatementClass(
                              IfStatement(
                                IfConditionClass(
                                  SingleCondition(
                                    SingleConditionTerm(
                                      ConditionFactRelop(
                                        ConditionFact(
                                          Expr(
                                            ExpressionClass(
                                              ExpressionPositive(
                                              ) [ExpressionPositive]
                                              Terminal(
                                                FactorDesignator(
                                                  DesignatorClass(
                                                   i
                                                  ) [DesignatorClass]
                                                ) [FactorDesignator]
                                              ) [Terminal]
                                            ) [ExpressionClass]
                                          ) [Expr]
                                        ) [ConditionFact]
                                        RelationEquals(
                                        ) [RelationEquals]
                                        Expr(
                                          ExpressionClass(
                                            ExpressionPositive(
                                            ) [ExpressionPositive]
                                            Terminal(
                                              FactorNumberConstant(
                                                NumberConstant(
                                                 5
                                                ) [NumberConstant]
                                              ) [FactorNumberConstant]
                                            ) [Terminal]
                                          ) [ExpressionClass]
                                        ) [Expr]
                                      ) [ConditionFactRelop]
                                    ) [SingleConditionTerm]
                                  ) [SingleCondition]
                                ) [IfConditionClass]
                                SingleStatementClass(
                                  PrintStatement(
                                    Expr(
                                      ExpressionClass(
                                        ExpressionPositive(
                                        ) [ExpressionPositive]
                                        Terminal(
                                          FactorNumberConstant(
                                            NumberConstant(
                                             1
                                            ) [NumberConstant]
                                          ) [FactorNumberConstant]
                                        ) [Terminal]
                                      ) [ExpressionClass]
                                    ) [Expr]
                                    HasNotPrintConstant(
                                    ) [HasNotPrintConstant]
                                  ) [PrintStatement]
                                ) [SingleStatementClass]
                                HasElseClause(
                                  SingleStatementClass(
                                    PrintStatement(
                                      Expr(
                                        ExpressionClass(
                                          ExpressionNegative(
                                          ) [ExpressionNegative]
                                          Terminal(
                                            FactorNumberConstant(
                                              NumberConstant(
                                               1
                                              ) [NumberConstant]
                                            ) [FactorNumberConstant]
                                          ) [Terminal]
                                        ) [ExpressionClass]
                                      ) [Expr]
                                      HasNotPrintConstant(
                                      ) [HasNotPrintConstant]
                                    ) [PrintStatement]
                                  ) [SingleStatementClass]
                                ) [HasElseClause]
                              ) [IfStatement]
                            ) [SingleStatementClass]
                            HasNotElseClause(
                            ) [HasNotElseClause]
                          ) [IfStatement]
                        ) [SingleStatementClass]
                      ) [StatementListClass]
                      SingleStatementClass(
                        SSDesignatorStatement(
                          DesignatorStatementClass(
                            DesignatorClass(
                             a
                            ) [DesignatorClass]
                            DesignatorAssign(
                              DesignatorAssignOperation(
                                AssignOperation(
                                ) [AssignOperation]
                                Expr(
                                  ExpressionClass(
                                    ExpressionPositive(
                                    ) [ExpressionPositive]
                                    Terminal(
                                      FactorNumberConstant(
                                        NumberConstant(
                                         2
                                        ) [NumberConstant]
                                      ) [FactorNumberConstant]
                                    ) [Terminal]
                                  ) [ExpressionClass]
                                ) [Expr]
                              ) [DesignatorAssignOperation]
                            ) [DesignatorAssign]
                          ) [DesignatorStatementClass]
                        ) [SSDesignatorStatement]
                      ) [SingleStatementClass]
                    ) [StatementListClass]
                    SingleStatementClass(
                      SSDesignatorStatement(
                        DesignatorStatementClass(
                          DesignatorClass(
                           niz
                          ) [DesignatorClass]
                          DesignatorAssign(
                            DesignatorAssignOperation(
                              AssignOperation(
                              ) [AssignOperation]
                              Expr(
                                ExpressionClass(
                                  ExpressionPositive(
                                  ) [ExpressionPositive]
                                  Terminal(
                                    FactorNewOperation(
                                      Type(
                                       int
                                      ) [Type]
                                      Expr(
                                        ExpressionClass(
                                          ExpressionPositive(
                                          ) [ExpressionPositive]
                                          Terminal(
                                            FactorNumberConstant(
                                              NumberConstant(
                                               3
                                              ) [NumberConstant]
                                            ) [FactorNumberConstant]
                                          ) [Terminal]
                                        ) [ExpressionClass]
                                      ) [Expr]
                                    ) [FactorNewOperation]
                                  ) [Terminal]
                                ) [ExpressionClass]
                              ) [Expr]
                            ) [DesignatorAssignOperation]
                          ) [DesignatorAssign]
                        ) [DesignatorStatementClass]
                      ) [SSDesignatorStatement]
                    ) [SingleStatementClass]
                  ) [StatementListClass]
                  SingleStatementClass(
                    SSDesignatorStatement(
                      DesignatorStatementClass(
                        DesignatorArray(
                          DesignatorClass(
                           niz
                          ) [DesignatorClass]
                          Expr(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorNumberConstant(
                                  NumberConstant(
                                   0
                                  ) [NumberConstant]
                                ) [FactorNumberConstant]
                              ) [Terminal]
                            ) [ExpressionClass]
                          ) [Expr]
                        ) [DesignatorArray]
                        DesignatorAssign(
                          DesignatorAssignOperation(
                            AssignOperation(
                            ) [AssignOperation]
                            Expr(
                              ExpressionClass(
                                ExpressionPositive(
                                ) [ExpressionPositive]
                                TerminalMulop(
                                  Terminal(
                                    FactorNumberConstant(
                                      NumberConstant(
                                       1
                                      ) [NumberConstant]
                                    ) [FactorNumberConstant]
                                  ) [Terminal]
                                  MultiplicationOperation(
                                  ) [MultiplicationOperation]
                                  FactorDesignator(
                                    DesignatorClass(
                                     a
                                    ) [DesignatorClass]
                                  ) [FactorDesignator]
                                ) [TerminalMulop]
                              ) [ExpressionClass]
                            ) [Expr]
                          ) [DesignatorAssignOperation]
                        ) [DesignatorAssign]
                      ) [DesignatorStatementClass]
                    ) [SSDesignatorStatement]
                  ) [SingleStatementClass]
                ) [StatementListClass]
                SingleStatementClass(
                  SSDesignatorStatement(
                    DesignatorStatementClass(
                      DesignatorArray(
                        DesignatorClass(
                         niz
                        ) [DesignatorClass]
                        Expr(
                          ExpressionClass(
                            ExpressionPositive(
                            ) [ExpressionPositive]
                            Terminal(
                              FactorNumberConstant(
                                NumberConstant(
                                 1
                                ) [NumberConstant]
                              ) [FactorNumberConstant]
                            ) [Terminal]
                          ) [ExpressionClass]
                        ) [Expr]
                      ) [DesignatorArray]
                      DesignatorAssign(
                        DesignatorAssignOperation(
                          AssignOperation(
                          ) [AssignOperation]
                          Expr(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              TerminalMulop(
                                Terminal(
                                  FactorNumberConstant(
                                    NumberConstant(
                                     2
                                    ) [NumberConstant]
                                  ) [FactorNumberConstant]
                                ) [Terminal]
                                MultiplicationOperation(
                                ) [MultiplicationOperation]
                                FactorDesignator(
                                  DesignatorClass(
                                   a
                                  ) [DesignatorClass]
                                ) [FactorDesignator]
                              ) [TerminalMulop]
                            ) [ExpressionClass]
                          ) [Expr]
                        ) [DesignatorAssignOperation]
                      ) [DesignatorAssign]
                    ) [DesignatorStatementClass]
                  ) [SSDesignatorStatement]
                ) [SingleStatementClass]
              ) [StatementListClass]
              SingleStatementClass(
                SSDesignatorStatement(
                  DesignatorStatementClass(
                    DesignatorArray(
                      DesignatorClass(
                       niz
                      ) [DesignatorClass]
                      Expr(
                        ExpressionClass(
                          ExpressionPositive(
                          ) [ExpressionPositive]
                          Terminal(
                            FactorNumberConstant(
                              NumberConstant(
                               2
                              ) [NumberConstant]
                            ) [FactorNumberConstant]
                          ) [Terminal]
                        ) [ExpressionClass]
                      ) [Expr]
                    ) [DesignatorArray]
                    DesignatorAssign(
                      DesignatorAssignOperation(
                        AssignOperation(
                        ) [AssignOperation]
                        Expr(
                          ExpressionAddop(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              TerminalMulop(
                                Terminal(
                                  FactorFunctionCall(
                                    DesignatorClass(
                                     sum
                                    ) [DesignatorClass]
                                    FunctionCallHasArguments(
                                      MultipleActualParameters(
                                        SingleActualParameter(
                                          Expr(
                                            ExpressionClass(
                                              ExpressionPositive(
                                              ) [ExpressionPositive]
                                              Terminal(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                    DesignatorClass(
                                                     niz
                                                    ) [DesignatorClass]
                                                    Expr(
                                                      ExpressionClass(
                                                        ExpressionPositive(
                                                        ) [ExpressionPositive]
                                                        Terminal(
                                                          FactorNumberConstant(
                                                            NumberConstant(
                                                             1
                                                            ) [NumberConstant]
                                                          ) [FactorNumberConstant]
                                                        ) [Terminal]
                                                      ) [ExpressionClass]
                                                    ) [Expr]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [Terminal]
                                            ) [ExpressionClass]
                                          ) [Expr]
                                        ) [SingleActualParameter]
                                        Expr(
                                          ExpressionClass(
                                            ExpressionPositive(
                                            ) [ExpressionPositive]
                                            Terminal(
                                              FactorDesignator(
                                                DesignatorArray(
                                                  DesignatorClass(
                                                   niz
                                                  ) [DesignatorClass]
                                                  Expr(
                                                    ExpressionClass(
                                                      ExpressionPositive(
                                                      ) [ExpressionPositive]
                                                      Terminal(
                                                        FactorNumberConstant(
                                                          NumberConstant(
                                                           0
                                                          ) [NumberConstant]
                                                        ) [FactorNumberConstant]
                                                      ) [Terminal]
                                                    ) [ExpressionClass]
                                                  ) [Expr]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [Terminal]
                                          ) [ExpressionClass]
                                        ) [Expr]
                                      ) [MultipleActualParameters]
                                    ) [FunctionCallHasArguments]
                                  ) [FactorFunctionCall]
                                ) [Terminal]
                                MultiplicationOperation(
                                ) [MultiplicationOperation]
                                FactorDesignator(
                                  DesignatorClass(
                                   a
                                  ) [DesignatorClass]
                                ) [FactorDesignator]
                              ) [TerminalMulop]
                            ) [ExpressionClass]
                            AdditionOperation(
                            ) [AdditionOperation]
                            Terminal(
                              FactorNumberConstant(
                                NumberConstant(
                                 1
                                ) [NumberConstant]
                              ) [FactorNumberConstant]
                            ) [Terminal]
                          ) [ExpressionAddop]
                        ) [Expr]
                      ) [DesignatorAssignOperation]
                    ) [DesignatorAssign]
                  ) [DesignatorStatementClass]
                ) [SSDesignatorStatement]
              ) [SingleStatementClass]
            ) [StatementListClass]
            SingleStatementClass(
              IfStatement(
                IfConditionClass(
                  MultipleConditions(
                    SingleCondition(
                      SingleConditionTerm(
                        ConditionFact(
                          Expr(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorFunctionCall(
                                  DesignatorClass(
                                   verify
                                  ) [DesignatorClass]
                                  FunctionCallNoArguments(
                                  ) [FunctionCallNoArguments]
                                ) [FactorFunctionCall]
                              ) [Terminal]
                            ) [ExpressionClass]
                          ) [Expr]
                        ) [ConditionFact]
                      ) [SingleConditionTerm]
                    ) [SingleCondition]
                    SingleConditionTerm(
                      ConditionFactRelop(
                        ConditionFact(
                          Expr(
                            ExpressionClass(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorDesignator(
                                  DesignatorArray(
                                    DesignatorClass(
                                     niz
                                    ) [DesignatorClass]
                                    Expr(
                                      ExpressionClass(
                                        ExpressionPositive(
                                        ) [ExpressionPositive]
                                        Terminal(
                                          FactorNumberConstant(
                                            NumberConstant(
                                             2
                                            ) [NumberConstant]
                                          ) [FactorNumberConstant]
                                        ) [Terminal]
                                      ) [ExpressionClass]
                                    ) [Expr]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [Terminal]
                            ) [ExpressionClass]
                          ) [Expr]
                        ) [ConditionFact]
                        RelationEquals(
                        ) [RelationEquals]
                        Expr(
                          ExpressionClass(
                            ExpressionPositive(
                            ) [ExpressionPositive]
                            Terminal(
                              FactorNumberConstant(
                                NumberConstant(
                                 4
                                ) [NumberConstant]
                              ) [FactorNumberConstant]
                            ) [Terminal]
                          ) [ExpressionClass]
                        ) [Expr]
                      ) [ConditionFactRelop]
                    ) [SingleConditionTerm]
                  ) [MultipleConditions]
                ) [IfConditionClass]
                SingleStatementClass(
                  PrintStatement(
                    Expr(
                      ExpressionClass(
                        ExpressionPositive(
                        ) [ExpressionPositive]
                        Terminal(
                          FactorFunctionCall(
                            DesignatorClass(
                             ord
                            ) [DesignatorClass]
                            FunctionCallHasArguments(
                              SingleActualParameter(
                                Expr(
                                  ExpressionClass(
                                    ExpressionPositive(
                                    ) [ExpressionPositive]
                                    Terminal(
                                      FactorCharacterConstant(
                                        CharacterConstant(
                                         A
                                        ) [CharacterConstant]
                                      ) [FactorCharacterConstant]
                                    ) [Terminal]
                                  ) [ExpressionClass]
                                ) [Expr]
                              ) [SingleActualParameter]
                            ) [FunctionCallHasArguments]
                          ) [FactorFunctionCall]
                        ) [Terminal]
                      ) [ExpressionClass]
                    ) [Expr]
                    HasNotPrintConstant(
                    ) [HasNotPrintConstant]
                  ) [PrintStatement]
                ) [SingleStatementClass]
                HasElseClause(
                  SingleStatementClass(
                    PrintStatement(
                      Expr(
                        ExpressionClass(
                          ExpressionPositive(
                          ) [ExpressionPositive]
                          Terminal(
                            FactorFunctionCall(
                              DesignatorClass(
                               ord
                              ) [DesignatorClass]
                              FunctionCallHasArguments(
                                SingleActualParameter(
                                  Expr(
                                    ExpressionClass(
                                      ExpressionPositive(
                                      ) [ExpressionPositive]
                                      Terminal(
                                        FactorCharacterConstant(
                                          CharacterConstant(
                                           a
                                          ) [CharacterConstant]
                                        ) [FactorCharacterConstant]
                                      ) [Terminal]
                                    ) [ExpressionClass]
                                  ) [Expr]
                                ) [SingleActualParameter]
                              ) [FunctionCallHasArguments]
                            ) [FactorFunctionCall]
                          ) [Terminal]
                        ) [ExpressionClass]
                      ) [Expr]
                      HasNotPrintConstant(
                      ) [HasNotPrintConstant]
                    ) [PrintStatement]
                  ) [SingleStatementClass]
                ) [HasElseClause]
              ) [IfStatement]
            ) [SingleStatementClass]
          ) [StatementListClass]
          SingleStatementClass(
            PrintStatement(
              Expr(
                ExpressionClass(
                  ExpressionPositive(
                  ) [ExpressionPositive]
                  Terminal(
                    FactorDesignator(
                      DesignatorClass(
                       eol
                      ) [DesignatorClass]
                    ) [FactorDesignator]
                  ) [Terminal]
                ) [ExpressionClass]
              ) [Expr]
              HasNotPrintConstant(
              ) [HasNotPrintConstant]
            ) [PrintStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
        SingleStatementClass(
          SSDesignatorStatement(
            DesignatorStatementClass(
              DesignatorClass(
               i
              ) [DesignatorClass]
              DesignatorAssign(
                DesignatorAssignOperation(
                  AssignOperation(
                  ) [AssignOperation]
                  Expr(
                    ExpressionClass(
                      ExpressionPositive(
                      ) [ExpressionPositive]
                      Terminal(
                        FactorFunctionCall(
                          DesignatorClass(
                           inkrement
                          ) [DesignatorClass]
                          FunctionCallHasArguments(
                            SingleActualParameter(
                              Expr(
                                ExpressionClass(
                                  ExpressionPositive(
                                  ) [ExpressionPositive]
                                  Terminal(
                                    FactorDesignator(
                                      DesignatorClass(
                                       i
                                      ) [DesignatorClass]
                                    ) [FactorDesignator]
                                  ) [Terminal]
                                ) [ExpressionClass]
                              ) [Expr]
                            ) [SingleActualParameter]
                          ) [FunctionCallHasArguments]
                        ) [FactorFunctionCall]
                      ) [Terminal]
                    ) [ExpressionClass]
                  ) [Expr]
                ) [DesignatorAssignOperation]
              ) [DesignatorAssign]
            ) [DesignatorStatementClass]
          ) [SSDesignatorStatement]
        ) [SingleStatementClass]
      ) [StatementListClass]
    ) [MethodDeclaration]
  ) [ProgramMethodsList]
) [Program]
INFO  03:21:46,576 - =========================================
INFO  03:21:46,576 - Starting semantic analysis....
INFO  03:21:46,597 - Constant jedan declared  at line 5
INFO  03:21:46,598 - Global variable i declared at line 7
INFO  03:21:46,598 - Global variable ibool declared at line 8
INFO  03:21:46,598 - Global variable niz2 declared at line 10
INFO  03:21:46,598 - Global array niz[] declared at line 12
INFO  03:21:46,598 - Global variable a declared at line 13
INFO  03:21:46,598 - Function sum is being parsed  at line 17
INFO  03:21:46,599 - Default parameter z declared at line 17
INFO  03:21:46,599 - Default parameter d declared at line 17
INFO  03:21:46,599 - Function parameter z accessed at line 19
INFO  03:21:46,600 - Function parameter d accessed at line 19
INFO  03:21:46,600 - Function inkrement is being parsed  at line 23
INFO  03:21:46,600 - Local parameter a declared at line 23
INFO  03:21:46,600 - Default parameter inc declared at line 23
INFO  03:21:46,601 - Local variable pom declared at line 24
INFO  03:21:46,601 - Function parameter inc accessed at line 26
INFO  03:21:46,601 - Local variable pom accessed at line 26
INFO  03:21:46,602 - Function parameter inc accessed at line 27
INFO  03:21:46,602 - Local variable pom accessed at line 27
INFO  03:21:46,602 - Function parameter a accessed at line 27
INFO  03:21:46,602 - Function parameter a accessed at line 29
INFO  03:21:46,602 - Local variable pom accessed at line 29
INFO  03:21:46,602 - Function sum is called at line 29
INFO  03:21:46,602 - Function verify is being parsed  at line 32
INFO  03:21:46,603 - Function main is being parsed  at line 37
INFO  03:21:46,603 - Function sum is called at line 40
INFO  03:21:46,603 - Function sum is called at line 41
INFO  03:21:46,603 - Global variable ibool accessed at line 45
INFO  03:21:46,603 - Global variable i accessed at line 46
INFO  03:21:46,604 - Global variable i accessed at line 48
INFO  03:21:46,604 - Global variable ibool accessed at line 48
INFO  03:21:46,604 - Global variable i accessed at line 49
INFO  03:21:46,604 - Global variable i accessed at line 50
INFO  03:21:46,604 - Global variable ibool accessed at line 52
INFO  03:21:46,604 - Global variable i accessed at line 53
INFO  03:21:46,604 - Global variable a accessed at line 55
INFO  03:21:46,605 - Global variable niz accessed at line 56
INFO  03:21:46,605 - Global variable niz accessed at line 57
INFO  03:21:46,605 - Element in array niz[] accessed at line 57
INFO  03:21:46,606 - Global variable a accessed at line 57
INFO  03:21:46,607 - Global variable niz accessed at line 58
INFO  03:21:46,607 - Element in array niz[] accessed at line 58
INFO  03:21:46,607 - Global variable a accessed at line 58
INFO  03:21:46,607 - Global variable niz accessed at line 59
INFO  03:21:46,607 - Element in array niz[] accessed at line 59
INFO  03:21:46,607 - Global variable niz accessed at line 59
INFO  03:21:46,607 - Element in array niz[] accessed at line 59
INFO  03:21:46,608 - Global variable niz accessed at line 59
INFO  03:21:46,608 - Element in array niz[] accessed at line 59
INFO  03:21:46,608 - Function sum is called at line 59
INFO  03:21:46,608 - Global variable a accessed at line 59
INFO  03:21:46,608 - Function verify is called at line 60
INFO  03:21:46,608 - Global variable niz accessed at line 60
INFO  03:21:46,608 - Element in array niz[] accessed at line 60
INFO  03:21:46,608 - Function ord is called at line 60
INFO  03:21:46,608 - Function ord is called at line 61
INFO  03:21:46,608 - Global variable i accessed at line 64
INFO  03:21:46,608 - Global variable i accessed at line 64
INFO  03:21:46,609 - Function inkrement is called at line 64
INFO  03:21:46,609 - Semantic analysis completed.
INFO  03:21:46,609 - Semantic analysis finished successfully!
INFO  03:21:46,609 - Symbol table: 
INFO  03:21:46,610 - =========================================
INFO  03:21:46,610 - Started generating code....
INFO  03:21:46,622 - Code generated successfully!
INFO  03:21:46,622 - Compiling file successfully completed!
