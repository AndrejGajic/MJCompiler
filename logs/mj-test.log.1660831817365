INFO  16:09:23,385 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:09:23,393 - #2 program
INFO  16:09:23,393 - #48 MJLexerTest1
INFO  16:09:23,393 - #46 {
INFO  16:09:23,394 - #7 const
INFO  16:09:23,394 - #48 int
INFO  16:09:23,394 - #48 MAX
INFO  16:09:23,394 - #35 =
INFO  16:09:23,394 - #49 50
INFO  16:09:23,394 - #38 ;
INFO  16:09:23,394 - #48 int
INFO  16:09:23,394 - #48 x
INFO  16:09:23,394 - #35 =
INFO  16:09:23,394 - #49 5
INFO  16:09:23,395 - #40 ,
INFO  16:09:23,395 - #48 y
INFO  16:09:23,395 - #35 =
INFO  16:09:23,395 - #49 10
INFO  16:09:23,395 - #38 ;
INFO  16:09:23,395 - #48 boolean
INFO  16:09:23,395 - #48 b
INFO  16:09:23,395 - #38 ;
INFO  16:09:23,396 - #48 char
INFO  16:09:23,396 - #48 c
INFO  16:09:23,396 - #38 ;
INFO  16:09:23,396 - #48 int
INFO  16:09:23,396 - #48 array
INFO  16:09:23,396 - #44 [
INFO  16:09:23,396 - #48 MAX
INFO  16:09:23,396 - #45 ]
INFO  16:09:23,396 - #38 ;
INFO  16:09:23,397 - #48 int
INFO  16:09:23,397 - #48 sumOfArray
INFO  16:09:23,397 - #42 (
INFO  16:09:23,397 - #48 int
INFO  16:09:23,397 - #44 [
INFO  16:09:23,397 - #45 ]
INFO  16:09:23,397 - #48 array
INFO  16:09:23,397 - #43 )
INFO  16:09:23,397 - #46 {
INFO  16:09:23,397 - #48 int
INFO  16:09:23,397 - #48 sum
INFO  16:09:23,397 - #35 =
INFO  16:09:23,397 - #49 0
INFO  16:09:23,397 - #38 ;
INFO  16:09:23,398 - #48 for
INFO  16:09:23,398 - #42 (
INFO  16:09:23,398 - #48 int
INFO  16:09:23,398 - #48 i
INFO  16:09:23,398 - #35 =
INFO  16:09:23,398 - #49 0
INFO  16:09:23,398 - #38 ;
INFO  16:09:23,398 - #48 i
INFO  16:09:23,398 - #31 <
INFO  16:09:23,398 - #48 array
INFO  16:09:23,399 - #41 .
INFO  16:09:23,399 - #48 length
INFO  16:09:23,399 - #38 ;
INFO  16:09:23,399 - #48 i
INFO  16:09:23,399 - #36 ++
INFO  16:09:23,399 - #43 )
INFO  16:09:23,399 - #46 {
INFO  16:09:23,399 - #48 sum
INFO  16:09:23,399 - #35 =
INFO  16:09:23,399 - #48 sum
INFO  16:09:23,400 - #22 +
INFO  16:09:23,400 - #48 array
INFO  16:09:23,400 - #44 [
INFO  16:09:23,400 - #48 i
INFO  16:09:23,400 - #45 ]
INFO  16:09:23,400 - #38 ;
INFO  16:09:23,400 - #47 }
INFO  16:09:23,400 - #14 return
INFO  16:09:23,400 - #48 sum
INFO  16:09:23,400 - #38 ;
INFO  16:09:23,401 - #47 }
INFO  16:09:23,401 - #48 int
INFO  16:09:23,401 - #48 main
INFO  16:09:23,401 - #42 (
INFO  16:09:23,401 - #43 )
INFO  16:09:23,401 - #46 {
INFO  16:09:23,401 - #48 b
INFO  16:09:23,401 - #35 =
INFO  16:09:23,401 - #51 false
INFO  16:09:23,402 - #38 ;
INFO  16:09:23,402 - #48 int
INFO  16:09:23,402 - #48 cnt
INFO  16:09:23,402 - #35 =
INFO  16:09:23,402 - #49 0
INFO  16:09:23,402 - #38 ;
INFO  16:09:23,403 - #9 do
INFO  16:09:23,403 - #46 {
INFO  16:09:23,403 - #8 if
INFO  16:09:23,403 - #42 (
INFO  16:09:23,403 - #48 cnt
INFO  16:09:23,403 - #26 %
INFO  16:09:23,404 - #49 2
INFO  16:09:23,404 - #27 ==
INFO  16:09:23,404 - #49 0
INFO  16:09:23,404 - #43 )
INFO  16:09:23,404 - #46 {
INFO  16:09:23,404 - #48 array
INFO  16:09:23,404 - #44 [
INFO  16:09:23,404 - #48 cnt
INFO  16:09:23,404 - #45 ]
INFO  16:09:23,405 - #35 =
INFO  16:09:23,405 - #48 x
INFO  16:09:23,405 - #36 ++
INFO  16:09:23,405 - #38 ;
INFO  16:09:23,405 - #47 }
INFO  16:09:23,405 - #6 else
INFO  16:09:23,406 - #46 {
INFO  16:09:23,406 - #48 array
INFO  16:09:23,406 - #44 [
INFO  16:09:23,406 - #48 cnt
INFO  16:09:23,406 - #45 ]
INFO  16:09:23,407 - #35 =
INFO  16:09:23,407 - #48 y
INFO  16:09:23,407 - #36 ++
INFO  16:09:23,407 - #23 -
INFO  16:09:23,407 - #35 =
INFO  16:09:23,407 - #22 +
INFO  16:09:23,408 - #38 ;
INFO  16:09:23,408 - #47 }
INFO  16:09:23,408 - #48 int
INFO  16:09:23,408 - #48 sum
INFO  16:09:23,408 - #35 =
INFO  16:09:23,408 - #48 sumOfArray
INFO  16:09:23,409 - #42 (
INFO  16:09:23,409 - #48 array
INFO  16:09:23,409 - #43 )
INFO  16:09:23,409 - #38 ;
INFO  16:09:23,409 - #8 if
INFO  16:09:23,415 - #42 (
INFO  16:09:23,415 - #48 sum
INFO  16:09:23,415 - #29 >
INFO  16:09:23,415 - #49 100
INFO  16:09:23,415 - #43 )
INFO  16:09:23,415 - #46 {
INFO  16:09:23,415 - #48 b
INFO  16:09:23,415 - #35 =
INFO  16:09:23,415 - #51 true
INFO  16:09:23,415 - #38 ;
INFO  16:09:23,415 - #47 }
INFO  16:09:23,416 - #48 cnt
INFO  16:09:23,416 - #36 ++
INFO  16:09:23,416 - #38 ;
INFO  16:09:23,416 - #8 if
INFO  16:09:23,416 - #42 (
INFO  16:09:23,416 - #48 cnt
INFO  16:09:23,416 - #27 ==
INFO  16:09:23,416 - #48 MAX
INFO  16:09:23,416 - #43 )
INFO  16:09:23,416 - #46 {
INFO  16:09:23,417 - #12 print
INFO  16:09:23,417 - #42 (
INFO  16:09:23,417 - #48 Exceeded
INFO  16:09:23,417 - #48 limit
INFO  16:09:23,417 - #43 )
INFO  16:09:23,417 - #38 ;
INFO  16:09:23,417 - #48 b
INFO  16:09:23,417 - #35 =
INFO  16:09:23,417 - #51 true
INFO  16:09:23,418 - #38 ;
INFO  16:09:23,418 - #47 }
INFO  16:09:23,418 - #47 }
INFO  16:09:23,418 - #10 while
INFO  16:09:23,418 - #42 (
INFO  16:09:23,418 - #48 b
INFO  16:09:23,418 - #27 ==
INFO  16:09:23,418 - #51 false
INFO  16:09:23,419 - #43 )
INFO  16:09:23,419 - #38 ;
INFO  16:09:23,419 - #14 return
INFO  16:09:23,419 - #49 0
INFO  16:09:23,420 - #38 ;
INFO  16:09:23,420 - #47 }
INFO  16:09:23,420 - #47 }
