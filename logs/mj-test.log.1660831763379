INFO  16:08:37,226 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:08:37,238 - #2 program
INFO  16:08:37,238 - #48 MJLexerTest1
INFO  16:08:37,238 - #46 {
INFO  16:08:37,238 - #7 const
INFO  16:08:37,238 - #48 int
INFO  16:08:37,239 - #48 MAX
INFO  16:08:37,239 - #35 =
INFO  16:08:37,239 - #49 50
INFO  16:08:37,239 - #38 ;
INFO  16:08:37,239 - #48 int
INFO  16:08:37,240 - #48 x
INFO  16:08:37,240 - #35 =
INFO  16:08:37,240 - #49 5
INFO  16:08:37,240 - #40 ,
INFO  16:08:37,240 - #48 y
INFO  16:08:37,240 - #35 =
INFO  16:08:37,241 - #49 10
INFO  16:08:37,241 - #38 ;
INFO  16:08:37,241 - #48 boolean
INFO  16:08:37,241 - #48 b
INFO  16:08:37,241 - #38 ;
INFO  16:08:37,245 - #48 char
INFO  16:08:37,245 - #48 c
INFO  16:08:37,245 - #38 ;
INFO  16:08:37,245 - #48 int
INFO  16:08:37,246 - #48 array
INFO  16:08:37,246 - #44 [
INFO  16:08:37,246 - #48 MAX
INFO  16:08:37,246 - #45 ]
INFO  16:08:37,246 - #38 ;
INFO  16:08:37,246 - #48 int
INFO  16:08:37,246 - #48 sumOfArray
INFO  16:08:37,246 - #42 (
INFO  16:08:37,247 - #48 int
INFO  16:08:37,247 - #44 [
INFO  16:08:37,247 - #45 ]
INFO  16:08:37,247 - #48 array
INFO  16:08:37,247 - #43 )
INFO  16:08:37,247 - #46 {
INFO  16:08:37,247 - #48 int
INFO  16:08:37,247 - #48 sum
INFO  16:08:37,247 - #35 =
INFO  16:08:37,247 - #49 0
INFO  16:08:37,248 - #38 ;
INFO  16:08:37,248 - #48 for
INFO  16:08:37,248 - #42 (
INFO  16:08:37,248 - #48 int
INFO  16:08:37,248 - #48 i
INFO  16:08:37,248 - #35 =
INFO  16:08:37,248 - #49 0
INFO  16:08:37,248 - #38 ;
INFO  16:08:37,248 - #48 i
INFO  16:08:37,248 - #31 <
INFO  16:08:37,249 - #48 array
INFO  16:08:37,249 - #41 .
INFO  16:08:37,249 - #48 length
INFO  16:08:37,249 - #38 ;
INFO  16:08:37,249 - #48 i
INFO  16:08:37,249 - #36 ++
INFO  16:08:37,249 - #43 )
INFO  16:08:37,250 - #46 {
INFO  16:08:37,250 - #48 sum
INFO  16:08:37,250 - #35 =
INFO  16:08:37,250 - #48 sum
INFO  16:08:37,250 - #22 +
INFO  16:08:37,250 - #48 array
INFO  16:08:37,250 - #44 [
INFO  16:08:37,250 - #48 i
INFO  16:08:37,250 - #45 ]
INFO  16:08:37,251 - #38 ;
INFO  16:08:37,251 - #47 }
INFO  16:08:37,251 - #14 return
INFO  16:08:37,251 - #48 sum
INFO  16:08:37,251 - #38 ;
INFO  16:08:37,251 - #47 }
INFO  16:08:37,251 - #48 int
INFO  16:08:37,251 - #48 main
INFO  16:08:37,251 - #42 (
INFO  16:08:37,251 - #43 )
INFO  16:08:37,251 - #46 {
INFO  16:08:37,251 - #48 b
INFO  16:08:37,252 - #35 =
INFO  16:08:37,252 - #51 false
INFO  16:08:37,252 - #38 ;
INFO  16:08:37,252 - #48 int
INFO  16:08:37,252 - #48 cnt
INFO  16:08:37,252 - #35 =
INFO  16:08:37,252 - #49 0
INFO  16:08:37,252 - #38 ;
INFO  16:08:37,252 - #9 do
INFO  16:08:37,253 - #46 {
INFO  16:08:37,253 - #8 if
INFO  16:08:37,253 - #42 (
INFO  16:08:37,253 - #48 cnt
INFO  16:08:37,253 - #26 %
INFO  16:08:37,253 - #49 2
INFO  16:08:37,254 - #27 ==
INFO  16:08:37,254 - #49 0
INFO  16:08:37,254 - #43 )
INFO  16:08:37,254 - #46 {
INFO  16:08:37,254 - #48 array
INFO  16:08:37,254 - #44 [
INFO  16:08:37,254 - #48 cnt
INFO  16:08:37,254 - #45 ]
INFO  16:08:37,255 - #35 =
INFO  16:08:37,255 - #48 x
INFO  16:08:37,255 - #36 ++
INFO  16:08:37,255 - #38 ;
INFO  16:08:37,255 - #47 }
INFO  16:08:37,256 - #6 else
INFO  16:08:37,256 - #46 {
INFO  16:08:37,256 - #48 array
INFO  16:08:37,256 - #44 [
INFO  16:08:37,257 - #48 cnt
INFO  16:08:37,257 - #45 ]
INFO  16:08:37,257 - #35 =
INFO  16:08:37,257 - #48 y
INFO  16:08:37,257 - #36 ++
INFO  16:08:37,257 - #23 -
INFO  16:08:37,258 - #35 =
INFO  16:08:37,258 - #22 +
INFO  16:08:37,259 - #38 ;
INFO  16:08:37,259 - #47 }
INFO  16:08:37,260 - #48 int
INFO  16:08:37,260 - #48 sum
INFO  16:08:37,260 - #35 =
INFO  16:08:37,260 - #48 sumOfArray
INFO  16:08:37,260 - #42 (
INFO  16:08:37,260 - #48 array
INFO  16:08:37,260 - #43 )
INFO  16:08:37,260 - #38 ;
INFO  16:08:37,261 - #8 if
INFO  16:08:37,266 - #42 (
INFO  16:08:37,267 - #48 sum
INFO  16:08:37,267 - #29 >
INFO  16:08:37,267 - #49 100
INFO  16:08:37,267 - #43 )
INFO  16:08:37,267 - #46 {
INFO  16:08:37,267 - #48 b
INFO  16:08:37,267 - #35 =
INFO  16:08:37,267 - #51 true
INFO  16:08:37,267 - #38 ;
INFO  16:08:37,267 - #47 }
INFO  16:08:37,268 - #48 cnt
INFO  16:08:37,268 - #36 ++
INFO  16:08:37,268 - #38 ;
INFO  16:08:37,268 - #8 if
INFO  16:08:37,268 - #42 (
INFO  16:08:37,268 - #48 cnt
INFO  16:08:37,268 - #27 ==
INFO  16:08:37,268 - #48 MAX
INFO  16:08:37,268 - #43 )
INFO  16:08:37,268 - #46 {
INFO  16:08:37,268 - #12 print
INFO  16:08:37,268 - #42 (
INFO  16:08:37,268 - #48 Exceeded
INFO  16:08:37,269 - #48 limit
INFO  16:08:37,269 - #43 )
INFO  16:08:37,269 - #38 ;
INFO  16:08:37,269 - #48 b
INFO  16:08:37,269 - #35 =
INFO  16:08:37,269 - #51 true
INFO  16:08:37,269 - #38 ;
INFO  16:08:37,269 - #47 }
INFO  16:08:37,269 - #47 }
INFO  16:08:37,269 - #10 while
INFO  16:08:37,269 - #42 (
INFO  16:08:37,270 - #48 b
INFO  16:08:37,270 - #27 ==
INFO  16:08:37,270 - #51 false
INFO  16:08:37,270 - #43 )
INFO  16:08:37,270 - #38 ;
INFO  16:08:37,270 - #14 return
INFO  16:08:37,270 - #49 0
INFO  16:08:37,270 - #38 ;
INFO  16:08:37,270 - #47 }
INFO  16:08:37,271 - #47 }
