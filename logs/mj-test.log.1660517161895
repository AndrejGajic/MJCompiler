INFO  00:45:47,130 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  00:45:47,140 - #2 program
INFO  00:45:47,140 - #48 MJLexerTest1
INFO  00:45:47,140 - #46 {
INFO  00:45:47,141 - #7 const
INFO  00:45:47,141 - #48 int
INFO  00:45:47,141 - #48 MAX
INFO  00:45:47,141 - #35 =
INFO  00:45:47,141 - #49 50
INFO  00:45:47,141 - #38 ;
INFO  00:45:47,141 - #48 int
INFO  00:45:47,141 - #48 x
INFO  00:45:47,141 - #35 =
INFO  00:45:47,142 - #49 5
INFO  00:45:47,142 - #40 ,
INFO  00:45:47,142 - #48 y
INFO  00:45:47,142 - #35 =
INFO  00:45:47,142 - #49 10
INFO  00:45:47,142 - #38 ;
INFO  00:45:47,142 - #48 boolean
INFO  00:45:47,142 - #48 b
INFO  00:45:47,143 - #38 ;
INFO  00:45:47,143 - #48 char
INFO  00:45:47,143 - #48 c
INFO  00:45:47,143 - #38 ;
INFO  00:45:47,143 - #48 int
INFO  00:45:47,144 - #48 array
INFO  00:45:47,144 - #44 [
INFO  00:45:47,144 - #48 MAX
INFO  00:45:47,144 - #45 ]
INFO  00:45:47,144 - #38 ;
INFO  00:45:47,144 - #48 int
INFO  00:45:47,144 - #48 sumOfArray
INFO  00:45:47,144 - #42 (
INFO  00:45:47,144 - #48 int
INFO  00:45:47,145 - #44 [
INFO  00:45:47,145 - #45 ]
INFO  00:45:47,145 - #48 array
INFO  00:45:47,145 - #43 )
INFO  00:45:47,145 - #46 {
INFO  00:45:47,145 - #48 int
INFO  00:45:47,145 - #48 sum
INFO  00:45:47,145 - #35 =
INFO  00:45:47,146 - #49 0
INFO  00:45:47,146 - #38 ;
INFO  00:45:47,146 - #48 for
INFO  00:45:47,146 - #42 (
INFO  00:45:47,146 - #48 int
INFO  00:45:47,146 - #48 i
INFO  00:45:47,146 - #35 =
INFO  00:45:47,147 - #49 0
INFO  00:45:47,147 - #38 ;
INFO  00:45:47,147 - #48 i
INFO  00:45:47,147 - #31 <
INFO  00:45:47,147 - #48 array
INFO  00:45:47,147 - #41 .
INFO  00:45:47,147 - #48 length
INFO  00:45:47,147 - #38 ;
INFO  00:45:47,148 - #48 i
INFO  00:45:47,148 - #36 ++
INFO  00:45:47,148 - #43 )
INFO  00:45:47,148 - #46 {
INFO  00:45:47,148 - #48 sum
INFO  00:45:47,148 - #35 =
INFO  00:45:47,148 - #48 sum
INFO  00:45:47,148 - #22 +
INFO  00:45:47,149 - #48 array
INFO  00:45:47,149 - #44 [
INFO  00:45:47,149 - #48 i
INFO  00:45:47,149 - #45 ]
INFO  00:45:47,149 - #38 ;
INFO  00:45:47,149 - #47 }
INFO  00:45:47,149 - #14 return
INFO  00:45:47,149 - #48 sum
INFO  00:45:47,150 - #38 ;
INFO  00:45:47,150 - #47 }
INFO  00:45:47,150 - #48 int
INFO  00:45:47,150 - #48 main
INFO  00:45:47,150 - #42 (
INFO  00:45:47,150 - #43 )
INFO  00:45:47,152 - #46 {
INFO  00:45:47,152 - #48 b
INFO  00:45:47,152 - #35 =
INFO  00:45:47,152 - #51 false
INFO  00:45:47,152 - #38 ;
INFO  00:45:47,153 - #48 int
INFO  00:45:47,153 - #48 cnt
INFO  00:45:47,153 - #35 =
INFO  00:45:47,153 - #49 0
INFO  00:45:47,153 - #38 ;
INFO  00:45:47,153 - #9 do
INFO  00:45:47,154 - #46 {
INFO  00:45:47,154 - #8 if
INFO  00:45:47,154 - #42 (
INFO  00:45:47,154 - #48 cnt
INFO  00:45:47,154 - #26 %
INFO  00:45:47,154 - #49 2
INFO  00:45:47,154 - #27 ==
INFO  00:45:47,154 - #49 0
INFO  00:45:47,154 - #43 )
INFO  00:45:47,154 - #46 {
INFO  00:45:47,155 - #48 array
INFO  00:45:47,155 - #44 [
INFO  00:45:47,155 - #48 cnt
INFO  00:45:47,155 - #45 ]
INFO  00:45:47,155 - #35 =
INFO  00:45:47,156 - #48 x
INFO  00:45:47,156 - #36 ++
INFO  00:45:47,157 - #38 ;
INFO  00:45:47,157 - #47 }
INFO  00:45:47,157 - #6 else
INFO  00:45:47,157 - #46 {
INFO  00:45:47,157 - #48 array
INFO  00:45:47,157 - #44 [
INFO  00:45:47,158 - #48 cnt
INFO  00:45:47,158 - #45 ]
INFO  00:45:47,158 - #35 =
INFO  00:45:47,158 - #48 y
INFO  00:45:47,158 - #36 ++
INFO  00:45:47,158 - #38 ;
INFO  00:45:47,158 - #47 }
INFO  00:45:47,159 - #48 int
INFO  00:45:47,159 - #48 sum
INFO  00:45:47,159 - #35 =
INFO  00:45:47,159 - #48 sumOfArray
INFO  00:45:47,159 - #42 (
INFO  00:45:47,159 - #48 array
INFO  00:45:47,159 - #43 )
INFO  00:45:47,159 - #38 ;
INFO  00:45:47,159 - #8 if
INFO  00:45:47,160 - #42 (
INFO  00:45:47,160 - #48 sum
INFO  00:45:47,160 - #29 >
INFO  00:45:47,165 - #49 100
INFO  00:45:47,166 - #43 )
INFO  00:45:47,166 - #46 {
INFO  00:45:47,166 - #48 b
INFO  00:45:47,166 - #35 =
INFO  00:45:47,166 - #51 true
INFO  00:45:47,166 - #38 ;
INFO  00:45:47,166 - #47 }
INFO  00:45:47,166 - #48 cnt
INFO  00:45:47,166 - #36 ++
INFO  00:45:47,166 - #38 ;
INFO  00:45:47,167 - #8 if
INFO  00:45:47,167 - #42 (
INFO  00:45:47,167 - #48 cnt
INFO  00:45:47,167 - #27 ==
INFO  00:45:47,167 - #48 MAX
INFO  00:45:47,167 - #43 )
INFO  00:45:47,167 - #46 {
INFO  00:45:47,167 - #12 print
INFO  00:45:47,168 - #42 (
INFO  00:45:47,168 - #48 Exceeded
INFO  00:45:47,168 - #48 limit
INFO  00:45:47,168 - #43 )
INFO  00:45:47,168 - #38 ;
INFO  00:45:47,168 - #48 b
INFO  00:45:47,168 - #35 =
INFO  00:45:47,169 - #51 true
INFO  00:45:47,169 - #38 ;
INFO  00:45:47,169 - #47 }
INFO  00:45:47,169 - #47 }
INFO  00:45:47,169 - #10 while
INFO  00:45:47,169 - #42 (
INFO  00:45:47,169 - #48 b
INFO  00:45:47,169 - #27 ==
INFO  00:45:47,169 - #51 false
INFO  00:45:47,169 - #43 )
INFO  00:45:47,169 - #38 ;
INFO  00:45:47,170 - #14 return
INFO  00:45:47,170 - #49 0
INFO  00:45:47,170 - #38 ;
INFO  00:45:47,170 - #47 }
INFO  00:45:47,170 - #47 }
