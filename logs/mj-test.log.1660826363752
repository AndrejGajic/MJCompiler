INFO  00:46:01,902 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  00:46:01,910 - #2 program
INFO  00:46:01,910 - #48 MJLexerTest1
INFO  00:46:01,910 - #46 {
INFO  00:46:01,910 - #7 const
INFO  00:46:01,911 - #48 int
INFO  00:46:01,911 - #48 MAX
INFO  00:46:01,911 - #35 =
INFO  00:46:01,911 - #49 50
INFO  00:46:01,911 - #38 ;
INFO  00:46:01,911 - #48 int
INFO  00:46:01,911 - #48 x
INFO  00:46:01,911 - #35 =
INFO  00:46:01,911 - #49 5
INFO  00:46:01,911 - #40 ,
INFO  00:46:01,912 - #48 y
INFO  00:46:01,912 - #35 =
INFO  00:46:01,912 - #49 10
INFO  00:46:01,912 - #38 ;
INFO  00:46:01,912 - #48 boolean
INFO  00:46:01,912 - #48 b
INFO  00:46:01,912 - #38 ;
INFO  00:46:01,916 - #48 char
INFO  00:46:01,916 - #48 c
INFO  00:46:01,916 - #38 ;
INFO  00:46:01,917 - #48 int
INFO  00:46:01,917 - #48 array
INFO  00:46:01,917 - #44 [
INFO  00:46:01,917 - #48 MAX
INFO  00:46:01,917 - #45 ]
INFO  00:46:01,917 - #38 ;
INFO  00:46:01,917 - #48 int
INFO  00:46:01,917 - #48 sumOfArray
INFO  00:46:01,917 - #42 (
INFO  00:46:01,917 - #48 int
INFO  00:46:01,918 - #44 [
INFO  00:46:01,918 - #45 ]
INFO  00:46:01,918 - #48 array
INFO  00:46:01,918 - #43 )
INFO  00:46:01,918 - #46 {
INFO  00:46:01,918 - #48 int
INFO  00:46:01,918 - #48 sum
INFO  00:46:01,919 - #35 =
INFO  00:46:01,919 - #49 0
INFO  00:46:01,919 - #38 ;
INFO  00:46:01,919 - #48 for
INFO  00:46:01,920 - #42 (
INFO  00:46:01,920 - #48 int
INFO  00:46:01,920 - #48 i
INFO  00:46:01,920 - #35 =
INFO  00:46:01,920 - #49 0
INFO  00:46:01,920 - #38 ;
INFO  00:46:01,921 - #48 i
INFO  00:46:01,921 - #31 <
INFO  00:46:01,921 - #48 array
INFO  00:46:01,921 - #41 .
INFO  00:46:01,922 - #48 length
INFO  00:46:01,922 - #38 ;
INFO  00:46:01,922 - #48 i
INFO  00:46:01,922 - #36 ++
INFO  00:46:01,922 - #43 )
INFO  00:46:01,922 - #46 {
INFO  00:46:01,922 - #48 sum
INFO  00:46:01,923 - #35 =
INFO  00:46:01,923 - #48 sum
INFO  00:46:01,923 - #22 +
INFO  00:46:01,923 - #48 array
INFO  00:46:01,923 - #44 [
INFO  00:46:01,923 - #48 i
INFO  00:46:01,923 - #45 ]
INFO  00:46:01,923 - #38 ;
INFO  00:46:01,923 - #47 }
INFO  00:46:01,924 - #14 return
INFO  00:46:01,924 - #48 sum
INFO  00:46:01,924 - #38 ;
INFO  00:46:01,924 - #47 }
INFO  00:46:01,924 - #48 int
INFO  00:46:01,924 - #48 main
INFO  00:46:01,925 - #42 (
INFO  00:46:01,925 - #43 )
INFO  00:46:01,925 - #46 {
INFO  00:46:01,925 - #48 b
INFO  00:46:01,925 - #35 =
INFO  00:46:01,925 - #51 false
INFO  00:46:01,925 - #38 ;
INFO  00:46:01,925 - #48 int
INFO  00:46:01,926 - #48 cnt
INFO  00:46:01,926 - #35 =
INFO  00:46:01,926 - #49 0
INFO  00:46:01,926 - #38 ;
INFO  00:46:01,926 - #9 do
INFO  00:46:01,926 - #46 {
INFO  00:46:01,926 - #8 if
INFO  00:46:01,926 - #42 (
INFO  00:46:01,926 - #48 cnt
INFO  00:46:01,926 - #26 %
INFO  00:46:01,927 - #49 2
INFO  00:46:01,927 - #27 ==
INFO  00:46:01,927 - #49 0
INFO  00:46:01,927 - #43 )
INFO  00:46:01,927 - #46 {
INFO  00:46:01,927 - #48 array
INFO  00:46:01,927 - #44 [
INFO  00:46:01,927 - #48 cnt
INFO  00:46:01,927 - #45 ]
INFO  00:46:01,927 - #35 =
INFO  00:46:01,928 - #48 x
INFO  00:46:01,929 - #36 ++
INFO  00:46:01,929 - #38 ;
INFO  00:46:01,929 - #47 }
INFO  00:46:01,929 - #6 else
INFO  00:46:01,929 - #46 {
INFO  00:46:01,929 - #48 array
INFO  00:46:01,929 - #44 [
INFO  00:46:01,930 - #48 cnt
INFO  00:46:01,930 - #45 ]
INFO  00:46:01,930 - #35 =
INFO  00:46:01,930 - #48 y
INFO  00:46:01,930 - #36 ++
INFO  00:46:01,930 - #38 ;
INFO  00:46:01,931 - #47 }
INFO  00:46:01,931 - #48 int
INFO  00:46:01,931 - #48 sum
INFO  00:46:01,931 - #35 =
INFO  00:46:01,931 - #48 sumOfArray
INFO  00:46:01,931 - #42 (
INFO  00:46:01,931 - #48 array
INFO  00:46:01,931 - #43 )
INFO  00:46:01,931 - #38 ;
INFO  00:46:01,932 - #8 if
INFO  00:46:01,932 - #42 (
INFO  00:46:01,932 - #48 sum
INFO  00:46:01,932 - #29 >
INFO  00:46:01,932 - #49 100
INFO  00:46:01,932 - #43 )
INFO  00:46:01,932 - #46 {
INFO  00:46:01,932 - #48 b
INFO  00:46:01,932 - #35 =
INFO  00:46:01,932 - #51 true
INFO  00:46:01,932 - #38 ;
INFO  00:46:01,932 - #47 }
INFO  00:46:01,932 - #48 cnt
INFO  00:46:01,932 - #36 ++
INFO  00:46:01,932 - #38 ;
INFO  00:46:01,933 - #8 if
INFO  00:46:01,933 - #42 (
INFO  00:46:01,933 - #48 cnt
INFO  00:46:01,933 - #27 ==
INFO  00:46:01,933 - #48 MAX
INFO  00:46:01,933 - #43 )
INFO  00:46:01,933 - #46 {
INFO  00:46:01,933 - #12 print
INFO  00:46:01,933 - #42 (
INFO  00:46:01,933 - #48 Exceeded
INFO  00:46:01,933 - #48 limit
INFO  00:46:01,933 - #43 )
INFO  00:46:01,933 - #38 ;
INFO  00:46:01,933 - #48 b
INFO  00:46:01,933 - #35 =
INFO  00:46:01,934 - #51 true
INFO  00:46:01,934 - #38 ;
INFO  00:46:01,934 - #47 }
INFO  00:46:01,934 - #47 }
INFO  00:46:01,934 - #10 while
INFO  00:46:01,934 - #42 (
INFO  00:46:01,934 - #48 b
INFO  00:46:01,934 - #27 ==
INFO  00:46:01,934 - #51 false
INFO  00:46:01,934 - #43 )
INFO  00:46:01,934 - #38 ;
INFO  00:46:01,935 - #14 return
INFO  00:46:01,935 - #49 0
INFO  00:46:01,935 - #38 ;
INFO  00:46:01,935 - #47 }
INFO  00:46:01,935 - #47 }
