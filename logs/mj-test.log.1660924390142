INFO  17:52:34,201 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\test2.mj
INFO  17:52:34,308 - #2 program
INFO  17:52:34,308 - #48 p
INFO  17:52:34,309 - #7 const
INFO  17:52:34,310 - #48 int
INFO  17:52:34,310 - #48 x
INFO  17:52:34,310 - #35 =
INFO  17:52:34,310 - #49 10
INFO  17:52:34,310 - #38 ;
INFO  17:52:34,311 - #48 int
INFO  17:52:34,312 - #48 y
INFO  17:52:34,312 - #40 ,
INFO  17:52:34,313 - #48 z
INFO  17:52:34,314 - #38 ;
INFO  17:52:34,314 - #48 bool
INFO  17:52:34,314 - #48 b
INFO  17:52:34,314 - #38 ;
INFO  17:52:34,314 - #46 {
INFO  17:52:34,315 - #48 char
INFO  17:52:34,316 - #48 function
INFO  17:52:34,316 - #42 (
INFO  17:52:34,316 - #48 int
INFO  17:52:34,316 - #48 param1
INFO  17:52:34,320 - #40 ,
INFO  17:52:34,320 - #48 char
INFO  17:52:34,320 - #48 param2
INFO  17:52:34,320 - #44 [
INFO  17:52:34,320 - #45 ]
INFO  17:52:34,321 - #40 ,
INFO  17:52:34,322 - #48 bool
INFO  17:52:34,322 - #48 param3
INFO  17:52:34,322 - #43 )
INFO  17:52:34,322 - #48 int
INFO  17:52:34,323 - #48 local1
INFO  17:52:34,323 - #40 ,
INFO  17:52:34,323 - #48 local2
INFO  17:52:34,323 - #38 ;
INFO  17:52:34,323 - #48 bool
INFO  17:52:34,324 - #48 local3
INFO  17:52:34,324 - #38 ;
INFO  17:52:34,324 - #48 int
INFO  17:52:34,324 - #48 array1
INFO  17:52:34,324 - #44 [
INFO  17:52:34,324 - #45 ]
INFO  17:52:34,324 - #38 ;
INFO  17:52:34,324 - #46 {
INFO  17:52:34,324 - #48 local2
INFO  17:52:34,325 - #35 =
INFO  17:52:34,326 - #49 4
INFO  17:52:34,330 - #38 ;
INFO  17:52:34,332 - #48 local2
INFO  17:52:34,332 - #36 ++
INFO  17:52:34,332 - #38 ;
INFO  17:52:34,333 - #8 if
INFO  17:52:34,333 - #42 (
INFO  17:52:34,333 - #48 local2
INFO  17:52:34,333 - #29 >
INFO  17:52:34,334 - #49 3
INFO  17:52:34,336 - #43 )
INFO  17:52:34,336 - #46 {
INFO  17:52:34,336 - #48 local1
INFO  17:52:34,337 - #35 =
INFO  17:52:34,337 - #48 local2
INFO  17:52:34,337 - #24 *
INFO  17:52:34,337 - #49 5
INFO  17:52:34,339 - #38 ;
INFO  17:52:34,340 - #47 }
INFO  17:52:34,340 - #6 else
INFO  17:52:34,340 - #8 if
INFO  17:52:34,340 - #42 (
INFO  17:52:34,344 - #48 local2
INFO  17:52:34,344 - #29 >
INFO  17:52:34,344 - #49 0
INFO  17:52:34,344 - #33 &&
INFO  17:52:34,344 - #48 local2
INFO  17:52:34,344 - #31 <
INFO  17:52:34,344 - #49 3
INFO  17:52:34,345 - #43 )
INFO  17:52:34,345 - #46 {
INFO  17:52:34,345 - #48 local1
INFO  17:52:34,345 - #35 =
INFO  17:52:34,345 - #48 local2
INFO  17:52:34,345 - #24 *
INFO  17:52:34,346 - #49 20
INFO  17:52:34,346 - #38 ;
INFO  17:52:34,346 - #47 }
INFO  17:52:34,346 - #6 else
INFO  17:52:34,346 - #46 {
INFO  17:52:34,346 - #48 local1
INFO  17:52:34,346 - #35 =
INFO  17:52:34,346 - #48 local2
INFO  17:52:34,346 - #24 *
INFO  17:52:34,346 - #42 (
INFO  17:52:34,347 - #23 -
INFO  17:52:34,347 - #49 5
INFO  17:52:34,348 - #43 )
INFO  17:52:34,348 - #38 ;
INFO  17:52:34,348 - #47 }
INFO  17:52:34,348 - #12 print
INFO  17:52:34,349 - #42 (
INFO  17:52:34,349 - #48 local1
INFO  17:52:34,349 - #43 )
INFO  17:52:34,350 - #38 ;
INFO  17:52:34,350 - #8 if
INFO  17:52:34,350 - #42 (
INFO  17:52:34,350 - #48 local1
INFO  17:52:34,350 - #29 >
INFO  17:52:34,350 - #23 -
INFO  17:52:34,350 - #49 5
INFO  17:52:34,350 - #22 +
INFO  17:52:34,350 - #48 local1
INFO  17:52:34,352 - #23 -
INFO  17:52:34,353 - #49 2
INFO  17:52:34,354 - #43 )
INFO  17:52:34,355 - #46 {
INFO  17:52:34,355 - #12 print
INFO  17:52:34,355 - #42 (
INFO  17:52:34,355 - #48 local2
INFO  17:52:34,355 - #43 )
INFO  17:52:34,355 - #38 ;
INFO  17:52:34,355 - #47 }
INFO  17:52:34,355 - #13 read
INFO  17:52:34,356 - #42 (
INFO  17:52:34,357 - #48 array1
INFO  17:52:34,357 - #44 [
INFO  17:52:34,357 - #48 x
INFO  17:52:34,357 - #45 ]
INFO  17:52:34,357 - #43 )
INFO  17:52:34,357 - #38 ;
INFO  17:52:34,357 - #48 local1
INFO  17:52:34,358 - #35 =
INFO  17:52:34,358 - #48 function2
INFO  17:52:34,358 - #42 (
INFO  17:52:34,358 - #48 array1
INFO  17:52:34,358 - #40 ,
INFO  17:52:34,358 - #48 local2
INFO  17:52:34,358 - #43 )
INFO  17:52:34,359 - #38 ;
INFO  17:52:34,359 - #12 print
INFO  17:52:34,359 - #42 (
INFO  17:52:34,359 - #48 local1
INFO  17:52:34,359 - #43 )
INFO  17:52:34,359 - #38 ;
INFO  17:52:34,359 - #47 }
INFO  17:52:34,359 - #48 int
INFO  17:52:34,359 - #48 function2
INFO  17:52:34,359 - #42 (
INFO  17:52:34,359 - #48 int
INFO  17:52:34,359 - #48 param1
INFO  17:52:34,359 - #44 [
INFO  17:52:34,359 - #45 ]
INFO  17:52:34,359 - #40 ,
INFO  17:52:34,360 - #48 int
INFO  17:52:34,360 - #48 param2
INFO  17:52:34,360 - #43 )
INFO  17:52:34,360 - #48 int
INFO  17:52:34,360 - #48 local1
INFO  17:52:34,360 - #38 ;
INFO  17:52:34,360 - #48 bool
INFO  17:52:34,360 - #48 local2
INFO  17:52:34,360 - #44 [
INFO  17:52:34,360 - #45 ]
INFO  17:52:34,360 - #38 ;
INFO  17:52:34,360 - #46 {
INFO  17:52:34,360 - #47 }
INFO  17:52:34,361 - #48 int
INFO  17:52:34,361 - #48 sum
INFO  17:52:34,361 - #42 (
INFO  17:52:34,361 - #48 int
INFO  17:52:34,361 - #48 z
INFO  17:52:34,361 - #40 ,
INFO  17:52:34,361 - #48 int
INFO  17:52:34,361 - #48 d
INFO  17:52:34,361 - #43 )
INFO  17:52:34,361 - #46 {
INFO  17:52:34,361 - #14 return
INFO  17:52:34,361 - #48 z
ERROR 17:52:34,361 - 
Syntax error! at line 30
INFO  17:52:34,361 - #22 +
INFO  17:52:34,361 - #48 d
INFO  17:52:34,361 - #38 ;
INFO  17:52:34,362 - #47 }
INFO  17:52:34,362 - #47 }
ERROR 17:52:34,363 - Fatal error, parsing cannot continue! at line 33
