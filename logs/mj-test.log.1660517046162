INFO  16:24:43,756 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:24:43,764 - #1 program
INFO  16:24:43,764 - #20 MJLexerTest1
INFO  16:24:43,764 - #48 {
INFO  16:24:43,764 - #20 int
INFO  16:24:43,764 - #20 x
INFO  16:24:43,765 - #37 =
INFO  16:24:43,765 - #50 5
INFO  16:24:43,765 - #42 ,
INFO  16:24:43,765 - #20 y
INFO  16:24:43,765 - #37 =
INFO  16:24:43,765 - #50 6
INFO  16:24:43,765 - #40 ;
INFO  16:24:43,765 - #20 int
INFO  16:24:43,765 - #20 add
INFO  16:24:43,765 - #44 (
INFO  16:24:43,766 - #20 int
INFO  16:24:43,766 - #20 first
INFO  16:24:43,766 - #42 ,
INFO  16:24:43,766 - #20 int
INFO  16:24:43,766 - #20 second
INFO  16:24:43,766 - #45 )
INFO  16:24:43,766 - #48 {
INFO  16:24:43,766 - #20 int
INFO  16:24:43,766 - #20 sum
INFO  16:24:43,767 - #37 =
INFO  16:24:43,767 - #20 first
INFO  16:24:43,767 - #24 +
INFO  16:24:43,767 - #20 second
INFO  16:24:43,767 - #40 ;
INFO  16:24:43,767 - #13 return
INFO  16:24:43,767 - #20 sum
INFO  16:24:43,767 - #40 ;
INFO  16:24:43,767 - #49 }
INFO  16:24:43,767 - #14 void
INFO  16:24:43,767 - #20 main
INFO  16:24:43,767 - #44 (
INFO  16:24:43,768 - #45 )
INFO  16:24:43,768 - #48 {
INFO  16:24:43,768 - #20 int
INFO  16:24:43,768 - #20 sum
INFO  16:24:43,768 - #37 =
INFO  16:24:43,768 - #50 0
INFO  16:24:43,769 - #40 ;
INFO  16:24:43,769 - #7 if
INFO  16:24:43,769 - #44 (
INFO  16:24:43,769 - #20 x
INFO  16:24:43,769 - #31 >
INFO  16:24:43,769 - #20 y
INFO  16:24:43,770 - #45 )
INFO  16:24:43,770 - #48 {
INFO  16:24:43,770 - #20 sum
INFO  16:24:43,770 - #37 =
INFO  16:24:43,770 - #20 add
INFO  16:24:43,770 - #44 (
INFO  16:24:43,770 - #20 x
INFO  16:24:43,770 - #42 ,
INFO  16:24:43,771 - #25 -
INFO  16:24:43,771 - #20 y
INFO  16:24:43,771 - #45 )
INFO  16:24:43,771 - #40 ;
INFO  16:24:43,771 - #49 }
INFO  16:24:43,772 - #5 else
INFO  16:24:43,772 - #48 {
INFO  16:24:43,772 - #20 sum
INFO  16:24:43,772 - #37 =
INFO  16:24:43,772 - #20 add
INFO  16:24:43,772 - #44 (
INFO  16:24:43,772 - #25 -
INFO  16:24:43,772 - #20 x
INFO  16:24:43,772 - #42 ,
INFO  16:24:43,773 - #20 y
INFO  16:24:43,773 - #45 )
INFO  16:24:43,773 - #40 ;
INFO  16:24:43,773 - #49 }
INFO  16:24:43,773 - #11 print
INFO  16:24:43,773 - #20 sum
INFO  16:24:43,773 - #40 ;
INFO  16:24:43,773 - #8 do
INFO  16:24:43,773 - #48 {
INFO  16:24:43,773 - #20 sum
INFO  16:24:43,773 - #39 --
INFO  16:24:43,774 - #40 ;
INFO  16:24:43,775 - #49 }
INFO  16:24:43,775 - #9 while
INFO  16:24:43,775 - #44 (
INFO  16:24:43,775 - #20 sum
INFO  16:24:43,775 - #31 >
INFO  16:24:43,776 - #50 0
INFO  16:24:43,776 - #45 )
INFO  16:24:43,776 - #40 ;
INFO  16:24:43,776 - #13 return
INFO  16:24:43,776 - #40 ;
INFO  16:24:43,776 - #49 }
INFO  16:24:43,776 - #49 }
