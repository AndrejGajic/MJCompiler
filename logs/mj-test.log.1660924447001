INFO  17:53:57,975 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\test302.mj
INFO  17:53:58,081 - #2 program
INFO  17:53:58,081 - #48 test302
INFO  17:53:58,081 - #7 const
INFO  17:53:58,082 - #48 int
INFO  17:53:58,082 - #48 jedan
INFO  17:53:58,083 - #35 =
INFO  17:53:58,083 - #49 1
INFO  17:53:58,083 - #38 ;
INFO  17:53:58,083 - #48 int
INFO  17:53:58,084 - #48 i
INFO  17:53:58,084 - #38 ;
INFO  17:53:58,085 - #48 bool
INFO  17:53:58,086 - #48 ibool
INFO  17:53:58,086 - #38 ;
INFO  17:53:58,086 - #48 int
INFO  17:53:58,086 - #48 niz2
INFO  17:53:58,086 - #38 ;
INFO  17:53:58,086 - #48 int
INFO  17:53:58,087 - #48 niz
INFO  17:53:58,087 - #44 [
INFO  17:53:58,087 - #45 ]
INFO  17:53:58,091 - #38 ;
INFO  17:53:58,091 - #48 int
INFO  17:53:58,092 - #48 a
INFO  17:53:58,092 - #38 ;
INFO  17:53:58,092 - #46 {
INFO  17:53:58,092 - #48 int
INFO  17:53:58,093 - #48 sum
INFO  17:53:58,093 - #42 (
INFO  17:53:58,093 - #48 int
INFO  17:53:58,093 - #48 z
INFO  17:53:58,093 - #40 ,
INFO  17:53:58,093 - #48 int
INFO  17:53:58,093 - #48 d
INFO  17:53:58,093 - #43 )
INFO  17:53:58,094 - #46 {
INFO  17:53:58,094 - #47 }
INFO  17:53:58,095 - #48 int
INFO  17:53:58,096 - #48 inkrement
INFO  17:53:58,096 - #42 (
INFO  17:53:58,096 - #48 int
INFO  17:53:58,096 - #48 a
INFO  17:53:58,096 - #40 ,
INFO  17:53:58,096 - #48 int
INFO  17:53:58,096 - #48 inc
INFO  17:53:58,096 - #43 )
INFO  17:53:58,096 - #48 int
INFO  17:53:58,096 - #48 pom
INFO  17:53:58,097 - #38 ;
INFO  17:53:58,097 - #46 {
INFO  17:53:58,097 - #8 if
INFO  17:53:58,098 - #42 (
INFO  17:53:58,098 - #48 inc
INFO  17:53:58,100 - #27 ==
INFO  17:53:58,104 - #48 jedan
INFO  17:53:58,105 - #43 )
INFO  17:53:58,105 - #48 pom
INFO  17:53:58,106 - #35 =
INFO  17:53:58,106 - #49 1
INFO  17:53:58,108 - #38 ;
INFO  17:53:58,108 - #6 else
INFO  17:53:58,108 - #8 if
INFO  17:53:58,108 - #42 (
INFO  17:53:58,109 - #48 inc
INFO  17:53:58,109 - #27 ==
INFO  17:53:58,109 - #49 2
INFO  17:53:58,109 - #43 )
INFO  17:53:58,109 - #48 pom
INFO  17:53:58,110 - #35 =
INFO  17:53:58,110 - #48 a
INFO  17:53:58,110 - #38 ;
INFO  17:53:58,110 - #47 }
INFO  17:53:58,111 - #48 bool
INFO  17:53:58,112 - #48 verify
INFO  17:53:58,112 - #42 (
INFO  17:53:58,112 - #43 )
INFO  17:53:58,113 - #46 {
INFO  17:53:58,113 - #12 print
INFO  17:53:58,113 - #42 (
INFO  17:53:58,113 - #50 v
INFO  17:53:58,113 - #43 )
INFO  17:53:58,114 - #38 ;
INFO  17:53:58,115 - #14 return
INFO  17:53:58,115 - #51 false
ERROR 17:53:58,115 - 
Syntax error! at line 32
INFO  17:53:58,115 - #38 ;
INFO  17:53:58,115 - #47 }
INFO  17:53:58,115 - #15 void
INFO  17:53:58,116 - #48 main
INFO  17:53:58,116 - #42 (
INFO  17:53:58,116 - #43 )
INFO  17:53:58,116 - #46 {
INFO  17:53:58,116 - #47 }
INFO  17:53:58,116 - #47 }
ERROR 17:53:58,117 - Syntax error in DECLARING FORMAL PARAMETER at line 30
INFO  17:53:58,120 - Program(
 test302
  ProgramVariablesList(
    ProgramVariablesList(
      ProgramVariablesList(
        ProgramVariablesList(
          ProgramVariablesList(
            ProgramVariablesList(
              EmptyProgramVariablesList(
              ) [EmptyProgramVariablesList]
              ProgramConstants(
                ConstantsClass(
                  TypeClass(
                   int
                  ) [TypeClass]
                  SingleConstantList(
                    ConstantDeclaration(
                     jedan
                      NumConstClass(
                        NumberConstant(
                         1
                        ) [NumberConstant]
                      ) [NumConstClass]
                    ) [ConstantDeclaration]
                  ) [SingleConstantList]
                ) [ConstantsClass]
              ) [ProgramConstants]
            ) [ProgramVariablesList]
            ProgramVariables(
              GlobalVariables(
                TypeClass(
                 int
                ) [TypeClass]
                SingleGlobalVariableList(
                  GlobalVariableDeclaration(
                   i
                    VarIsNotArray(
                    ) [VarIsNotArray]
                  ) [GlobalVariableDeclaration]
                ) [SingleGlobalVariableList]
              ) [GlobalVariables]
            ) [ProgramVariables]
          ) [ProgramVariablesList]
          ProgramVariables(
            GlobalVariables(
              TypeClass(
               bool
              ) [TypeClass]
              SingleGlobalVariableList(
                GlobalVariableDeclaration(
                 ibool
                  VarIsNotArray(
                  ) [VarIsNotArray]
                ) [GlobalVariableDeclaration]
              ) [SingleGlobalVariableList]
            ) [GlobalVariables]
          ) [ProgramVariables]
        ) [ProgramVariablesList]
        ProgramVariables(
          GlobalVariables(
            TypeClass(
             int
            ) [TypeClass]
            SingleGlobalVariableList(
              GlobalVariableDeclaration(
               niz2
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [GlobalVariableDeclaration]
            ) [SingleGlobalVariableList]
          ) [GlobalVariables]
        ) [ProgramVariables]
      ) [ProgramVariablesList]
      ProgramVariables(
        GlobalVariables(
          TypeClass(
           int
          ) [TypeClass]
          SingleGlobalVariableList(
            GlobalVariableDeclaration(
             niz
              VarIsArray(
              ) [VarIsArray]
            ) [GlobalVariableDeclaration]
          ) [SingleGlobalVariableList]
        ) [GlobalVariables]
      ) [ProgramVariables]
    ) [ProgramVariablesList]
    ProgramVariables(
      GlobalVariables(
        TypeClass(
         int
        ) [TypeClass]
        SingleGlobalVariableList(
          GlobalVariableDeclaration(
           a
            VarIsNotArray(
            ) [VarIsNotArray]
          ) [GlobalVariableDeclaration]
        ) [SingleGlobalVariableList]
      ) [GlobalVariables]
    ) [ProgramVariables]
  ) [ProgramVariablesList]
  ProgramMethodsList(
    ProgramMethodsList(
      ProgramMethodsList(
        EmptyProgramMethodsList(
        ) [EmptyProgramMethodsList]
        MethodDeclaration(
          MethodTypeNotVoid(
            TypeClass(
             int
            ) [TypeClass]
          ) [MethodTypeNotVoid]
         sum
          FormalParametersList(
            MultipleFormalParameters(
              SingleFormalParameter(
                FormalParameter(
                  TypeClass(
                   int
                  ) [TypeClass]
                 z
                  VarIsNotArray(
                  ) [VarIsNotArray]
                ) [FormalParameter]
              ) [SingleFormalParameter]
              FormalParameter(
                TypeClass(
                 int
                ) [TypeClass]
               d
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [FormalParameter]
            ) [MultipleFormalParameters]
          ) [FormalParametersList]
          EmptyVariablesDeclarationList(
          ) [EmptyVariablesDeclarationList]
          EmptyStatementList(
          ) [EmptyStatementList]
        ) [MethodDeclaration]
      ) [ProgramMethodsList]
      MethodDeclaration(
        MethodTypeNotVoid(
          TypeClass(
           int
          ) [TypeClass]
        ) [MethodTypeNotVoid]
       inkrement
        FormalParametersList(
          MultipleFormalParameters(
            SingleFormalParameter(
              FormalParameter(
                TypeClass(
                 int
                ) [TypeClass]
               a
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [FormalParameter]
            ) [SingleFormalParameter]
            FormalParameter(
              TypeClass(
               int
              ) [TypeClass]
             inc
              VarIsNotArray(
              ) [VarIsNotArray]
            ) [FormalParameter]
          ) [MultipleFormalParameters]
        ) [FormalParametersList]
        VariablesDeclarationList(
          EmptyVariablesDeclarationList(
          ) [EmptyVariablesDeclarationList]
          LocalVariables(
            TypeClass(
             int
            ) [TypeClass]
            SingleLocalVariableList(
              VariableDeclaration(
               pom
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [VariableDeclaration]
            ) [SingleLocalVariableList]
          ) [LocalVariables]
        ) [VariablesDeclarationList]
        StatementListClass(
          EmptyStatementList(
          ) [EmptyStatementList]
          SingleStatementClass(
            IfStatement(
              IfConditionClass(
                SingleCondition(
                  SingleConditionTerm(
                    ConditionFact(
                      Expression(
                        ExpressionPositive(
                        ) [ExpressionPositive]
                        Terminal(
                          FactorDesignator(
                            DesignatorClass(
                             inc
                              EmptyDesignatorList(
                              ) [EmptyDesignatorList]
                            ) [DesignatorClass]
                            FactorNoFunctionCall(
                            ) [FactorNoFunctionCall]
                          ) [FactorDesignator]
                          EmptyTerminalMultiplicationList(
                          ) [EmptyTerminalMultiplicationList]
                        ) [Terminal]
                        EmptyExpressionAdditionList(
                        ) [EmptyExpressionAdditionList]
                      ) [Expression]
                      ConditionFactHasRelationOperation(
                        RelationEquals(
                        ) [RelationEquals]
                        Expression(
                          ExpressionPositive(
                          ) [ExpressionPositive]
                          Terminal(
                            FactorDesignator(
                              DesignatorClass(
                               jedan
                                EmptyDesignatorList(
                                ) [EmptyDesignatorList]
                              ) [DesignatorClass]
                              FactorNoFunctionCall(
                              ) [FactorNoFunctionCall]
                            ) [FactorDesignator]
                            EmptyTerminalMultiplicationList(
                            ) [EmptyTerminalMultiplicationList]
                          ) [Terminal]
                          EmptyExpressionAdditionList(
                          ) [EmptyExpressionAdditionList]
                        ) [Expression]
                      ) [ConditionFactHasRelationOperation]
                    ) [ConditionFact]
                  ) [SingleConditionTerm]
                ) [SingleCondition]
              ) [IfConditionClass]
              SingleStatementClass(
                SSDesignatorStatement(
                  DesignatorStatementClass(
                    DesignatorClass(
                     pom
                      EmptyDesignatorList(
                      ) [EmptyDesignatorList]
                    ) [DesignatorClass]
                    DesignatorAssignOperation(
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        ExpressionPositive(
                        ) [ExpressionPositive]
                        Terminal(
                          FactorNumberConstant(
                            NumberConstant(
                             1
                            ) [NumberConstant]
                          ) [FactorNumberConstant]
                          EmptyTerminalMultiplicationList(
                          ) [EmptyTerminalMultiplicationList]
                        ) [Terminal]
                        EmptyExpressionAdditionList(
                        ) [EmptyExpressionAdditionList]
                      ) [Expression]
                    ) [DesignatorAssignOperation]
                  ) [DesignatorStatementClass]
                ) [SSDesignatorStatement]
              ) [SingleStatementClass]
              HasElseClause(
                SingleStatementClass(
                  IfStatement(
                    IfConditionClass(
                      SingleCondition(
                        SingleConditionTerm(
                          ConditionFact(
                            Expression(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorDesignator(
                                  DesignatorClass(
                                   inc
                                    EmptyDesignatorList(
                                    ) [EmptyDesignatorList]
                                  ) [DesignatorClass]
                                  FactorNoFunctionCall(
                                  ) [FactorNoFunctionCall]
                                ) [FactorDesignator]
                                EmptyTerminalMultiplicationList(
                                ) [EmptyTerminalMultiplicationList]
                              ) [Terminal]
                              EmptyExpressionAdditionList(
                              ) [EmptyExpressionAdditionList]
                            ) [Expression]
                            ConditionFactHasRelationOperation(
                              RelationEquals(
                              ) [RelationEquals]
                              Expression(
                                ExpressionPositive(
                                ) [ExpressionPositive]
                                Terminal(
                                  FactorNumberConstant(
                                    NumberConstant(
                                     2
                                    ) [NumberConstant]
                                  ) [FactorNumberConstant]
                                  EmptyTerminalMultiplicationList(
                                  ) [EmptyTerminalMultiplicationList]
                                ) [Terminal]
                                EmptyExpressionAdditionList(
                                ) [EmptyExpressionAdditionList]
                              ) [Expression]
                            ) [ConditionFactHasRelationOperation]
                          ) [ConditionFact]
                        ) [SingleConditionTerm]
                      ) [SingleCondition]
                    ) [IfConditionClass]
                    SingleStatementClass(
                      SSDesignatorStatement(
                        DesignatorStatementClass(
                          DesignatorClass(
                           pom
                            EmptyDesignatorList(
                            ) [EmptyDesignatorList]
                          ) [DesignatorClass]
                          DesignatorAssignOperation(
                            AssignOperation(
                            ) [AssignOperation]
                            Expression(
                              ExpressionPositive(
                              ) [ExpressionPositive]
                              Terminal(
                                FactorDesignator(
                                  DesignatorClass(
                                   a
                                    EmptyDesignatorList(
                                    ) [EmptyDesignatorList]
                                  ) [DesignatorClass]
                                  FactorNoFunctionCall(
                                  ) [FactorNoFunctionCall]
                                ) [FactorDesignator]
                                EmptyTerminalMultiplicationList(
                                ) [EmptyTerminalMultiplicationList]
                              ) [Terminal]
                              EmptyExpressionAdditionList(
                              ) [EmptyExpressionAdditionList]
                            ) [Expression]
                          ) [DesignatorAssignOperation]
                        ) [DesignatorStatementClass]
                      ) [SSDesignatorStatement]
                    ) [SingleStatementClass]
                    HasNotElseClause(
                    ) [HasNotElseClause]
                  ) [IfStatement]
                ) [SingleStatementClass]
              ) [HasElseClause]
            ) [IfStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
      ) [MethodDeclaration]
    ) [ProgramMethodsList]
    MethodDeclaration(
      MethodTypeNotVoid(
        TypeClass(
         bool
        ) [TypeClass]
      ) [MethodTypeNotVoid]
     verify
      FormalParametersList(
        SingleFormalParameter(
          FormalParameterError(
          ) [FormalParameterError]
        ) [SingleFormalParameter]
      ) [FormalParametersList]
      EmptyVariablesDeclarationList(
      ) [EmptyVariablesDeclarationList]
      EmptyStatementList(
      ) [EmptyStatementList]
    ) [MethodDeclaration]
  ) [ProgramMethodsList]
) [Program]
INFO  17:53:58,121 - ===================================
ERROR 17:53:58,121 - Parsing did not complete due to error.
