INFO  02:41:47,052 - Starting compilation of a file test/test4.mj
INFO  02:41:47,052 - Starting lexical analysis....
INFO  02:41:47,058 - Lexical analysis finished successfully!
INFO  02:41:47,058 - =========================================
INFO  02:41:47,058 - Starting syntax analysis....
INFO  02:41:47,170 - #2 program
INFO  02:41:47,170 - #48 Test4
INFO  02:41:47,170 - #7 const
INFO  02:41:47,171 - #48 int
INFO  02:41:47,171 - #48 N
INFO  02:41:47,173 - #35 =
INFO  02:41:47,173 - #49 50
INFO  02:41:47,173 - #38 ;
INFO  02:41:47,173 - #48 int
INFO  02:41:47,174 - #48 x
INFO  02:41:47,174 - #40 ,
INFO  02:41:47,175 - #48 y
INFO  02:41:47,175 - #40 ,
INFO  02:41:47,176 - #48 arr
INFO  02:41:47,176 - #44 [
INFO  02:41:47,180 - #45 ]
INFO  02:41:47,180 - #38 ;
INFO  02:41:47,181 - #46 {
INFO  02:41:47,182 - #48 int
INFO  02:41:47,183 - #48 sum
INFO  02:41:47,183 - #42 (
INFO  02:41:47,184 - #48 int
INFO  02:41:47,184 - #48 a
INFO  02:41:47,184 - #40 ,
INFO  02:41:47,185 - #48 int
INFO  02:41:47,185 - #48 b
INFO  02:41:47,185 - #43 )
INFO  02:41:47,185 - #46 {
INFO  02:41:47,186 - #14 return
INFO  02:41:47,187 - #48 a
INFO  02:41:47,188 - #22 +
INFO  02:41:47,189 - #48 b
INFO  02:41:47,191 - #38 ;
INFO  02:41:47,193 - #47 }
INFO  02:41:47,194 - #15 void
INFO  02:41:47,194 - #48 main
INFO  02:41:47,196 - #42 (
INFO  02:41:47,196 - #43 )
INFO  02:41:47,197 - #46 {
INFO  02:41:47,197 - #48 x
INFO  02:41:47,198 - #35 =
INFO  02:41:47,198 - #48 sum
INFO  02:41:47,204 - #42 (
INFO  02:41:47,204 - #43 )
INFO  02:41:47,205 - #38 ;
INFO  02:41:47,206 - #12 print
INFO  02:41:47,206 - #42 (
INFO  02:41:47,207 - #48 x
INFO  02:41:47,207 - #43 )
INFO  02:41:47,208 - #38 ;
INFO  02:41:47,208 - #47 }
INFO  02:41:47,209 - #47 }
INFO  02:41:47,210 - Syntax analysis finished successfully!
INFO  02:41:47,210 - Syntax tree: 
INFO  02:41:47,212 - Program(
  ProgramName(
   Test4
  ) [ProgramName]
  ProgramVariablesList(
    ProgramVariablesList(
      EmptyProgramVariablesList(
      ) [EmptyProgramVariablesList]
      ProgramConstants(
        ConstantsClass(
          Type(
           int
          ) [Type]
          SingleConstantList(
            ConstantDeclaration(
             N
              NumConstClass(
                NumberConstant(
                 50
                ) [NumberConstant]
              ) [NumConstClass]
            ) [ConstantDeclaration]
          ) [SingleConstantList]
        ) [ConstantsClass]
      ) [ProgramConstants]
    ) [ProgramVariablesList]
    ProgramVariables(
      GlobalVariables(
        Type(
         int
        ) [Type]
        MultipleGlobalVariablesList(
          MultipleGlobalVariablesList(
            SingleGlobalVariableList(
              GlobalVariableDeclaration(
               x
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [GlobalVariableDeclaration]
            ) [SingleGlobalVariableList]
            GlobalVariableDeclaration(
             y
              VarIsNotArray(
              ) [VarIsNotArray]
            ) [GlobalVariableDeclaration]
          ) [MultipleGlobalVariablesList]
          GlobalVariableDeclaration(
           arr
            VarIsArray(
            ) [VarIsArray]
          ) [GlobalVariableDeclaration]
        ) [MultipleGlobalVariablesList]
      ) [GlobalVariables]
    ) [ProgramVariables]
  ) [ProgramVariablesList]
  ProgramMethodsList(
    ProgramMethodsList(
      EmptyProgramMethodsList(
      ) [EmptyProgramMethodsList]
      MethodDeclaration(
        MethodTypeNotVoid(
          Type(
           int
          ) [Type]
        ) [MethodTypeNotVoid]
        MethodName(
         sum
        ) [MethodName]
        FormalParametersList(
          MultipleFormalParameters(
            SingleFormalParameter(
              FormalParameter(
                Type(
                 int
                ) [Type]
               a
                VarIsNotArray(
                ) [VarIsNotArray]
              ) [FormalParameter]
            ) [SingleFormalParameter]
            FormalParameter(
              Type(
               int
              ) [Type]
             b
              VarIsNotArray(
              ) [VarIsNotArray]
            ) [FormalParameter]
          ) [MultipleFormalParameters]
        ) [FormalParametersList]
        EmptyVariablesDeclarationList(
        ) [EmptyVariablesDeclarationList]
        StatementListClass(
          EmptyStatementList(
          ) [EmptyStatementList]
          SingleStatementClass(
            ReturnStatement(
              HasReturnExpression(
                Expr(
                  ExpressionAddop(
                    ExpressionClass(
                      ExpressionPositive(
                      ) [ExpressionPositive]
                      Terminal(
                        FactorDesignator(
                          DesignatorClass(
                           a
                          ) [DesignatorClass]
                        ) [FactorDesignator]
                      ) [Terminal]
                    ) [ExpressionClass]
                    AdditionOperation(
                    ) [AdditionOperation]
                    Terminal(
                      FactorDesignator(
                        DesignatorClass(
                         b
                        ) [DesignatorClass]
                      ) [FactorDesignator]
                    ) [Terminal]
                  ) [ExpressionAddop]
                ) [Expr]
              ) [HasReturnExpression]
            ) [ReturnStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
      ) [MethodDeclaration]
    ) [ProgramMethodsList]
    MethodDeclaration(
      MethodTypeVoid(
      ) [MethodTypeVoid]
      MethodName(
       main
      ) [MethodName]
      EmptyFormalParametersList(
      ) [EmptyFormalParametersList]
      EmptyVariablesDeclarationList(
      ) [EmptyVariablesDeclarationList]
      StatementListClass(
        StatementListClass(
          EmptyStatementList(
          ) [EmptyStatementList]
          SingleStatementClass(
            SSDesignatorStatement(
              DesignatorStatementClass(
                DesignatorClass(
                 x
                ) [DesignatorClass]
                DesignatorAssign(
                  DesignatorAssignOperation(
                    AssignOperation(
                    ) [AssignOperation]
                    Expr(
                      ExpressionClass(
                        ExpressionPositive(
                        ) [ExpressionPositive]
                        Terminal(
                          FactorFunctionCall(
                            DesignatorClass(
                             sum
                            ) [DesignatorClass]
                            FunctionCallNoArguments(
                            ) [FunctionCallNoArguments]
                          ) [FactorFunctionCall]
                        ) [Terminal]
                      ) [ExpressionClass]
                    ) [Expr]
                  ) [DesignatorAssignOperation]
                ) [DesignatorAssign]
              ) [DesignatorStatementClass]
            ) [SSDesignatorStatement]
          ) [SingleStatementClass]
        ) [StatementListClass]
        SingleStatementClass(
          PrintStatement(
            Expr(
              ExpressionClass(
                ExpressionPositive(
                ) [ExpressionPositive]
                Terminal(
                  FactorDesignator(
                    DesignatorClass(
                     x
                    ) [DesignatorClass]
                  ) [FactorDesignator]
                ) [Terminal]
              ) [ExpressionClass]
            ) [Expr]
            HasNotPrintConstant(
            ) [HasNotPrintConstant]
          ) [PrintStatement]
        ) [SingleStatementClass]
      ) [StatementListClass]
    ) [MethodDeclaration]
  ) [ProgramMethodsList]
) [Program]
INFO  02:41:47,215 - =========================================
INFO  02:41:47,215 - Starting semantic analysis....
INFO  02:41:47,250 - Constant N declared  at line 2
INFO  02:41:47,250 - Global variable x declared at line 3
INFO  02:41:47,250 - Global variable y declared at line 3
INFO  02:41:47,251 - Global array arr[] declared at line 3
INFO  02:41:47,251 - Function sum is being parsed  at line 6
INFO  02:41:47,252 - Local parameter a declared at line 6
INFO  02:41:47,252 - Local parameter b declared at line 6
INFO  02:41:47,253 - Function parameter a accessed at line 7
INFO  02:41:47,253 - Function parameter b accessed at line 7
INFO  02:41:47,253 - Function main is being parsed  at line 10
INFO  02:41:47,253 - Global variable x accessed at line 11
INFO  02:41:47,253 - Error! Calling function sum with too few arguments at line 11
INFO  02:41:47,253 - Error! Assignment operation can be done between compatibile types only at line 11
INFO  02:41:47,253 - Global variable x accessed at line 12
INFO  02:41:47,253 - Semantic analysis completed.
ERROR 02:41:47,253 - An error occured in semantic analysis!
