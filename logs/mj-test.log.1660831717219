INFO  16:08:19,604 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:08:19,615 - #2 program
INFO  16:08:19,616 - #48 MJLexerTest1
INFO  16:08:19,616 - #46 {
INFO  16:08:19,616 - #7 const
INFO  16:08:19,616 - #48 int
INFO  16:08:19,616 - #48 MAX
INFO  16:08:19,617 - #35 =
INFO  16:08:19,617 - #49 50
INFO  16:08:19,617 - #38 ;
INFO  16:08:19,617 - #48 int
INFO  16:08:19,617 - #48 x
INFO  16:08:19,617 - #35 =
INFO  16:08:19,617 - #49 5
INFO  16:08:19,618 - #40 ,
INFO  16:08:19,618 - #48 y
INFO  16:08:19,618 - #35 =
INFO  16:08:19,618 - #49 10
INFO  16:08:19,618 - #38 ;
INFO  16:08:19,618 - #48 boolean
INFO  16:08:19,619 - #48 b
INFO  16:08:19,619 - #38 ;
INFO  16:08:19,619 - #48 char
INFO  16:08:19,619 - #48 c
INFO  16:08:19,619 - #38 ;
INFO  16:08:19,619 - #48 int
INFO  16:08:19,620 - #48 array
INFO  16:08:19,620 - #44 [
INFO  16:08:19,620 - #48 MAX
INFO  16:08:19,620 - #45 ]
INFO  16:08:19,620 - #38 ;
INFO  16:08:19,620 - #48 int
INFO  16:08:19,620 - #48 sumOfArray
INFO  16:08:19,621 - #42 (
INFO  16:08:19,621 - #48 int
INFO  16:08:19,621 - #44 [
INFO  16:08:19,621 - #45 ]
INFO  16:08:19,621 - #48 array
INFO  16:08:19,621 - #43 )
INFO  16:08:19,621 - #46 {
INFO  16:08:19,621 - #48 int
INFO  16:08:19,621 - #48 sum
INFO  16:08:19,622 - #35 =
INFO  16:08:19,622 - #49 0
INFO  16:08:19,622 - #38 ;
INFO  16:08:19,622 - #48 for
INFO  16:08:19,622 - #42 (
INFO  16:08:19,622 - #48 int
INFO  16:08:19,622 - #48 i
INFO  16:08:19,623 - #35 =
INFO  16:08:19,623 - #49 0
INFO  16:08:19,623 - #38 ;
INFO  16:08:19,623 - #48 i
INFO  16:08:19,623 - #31 <
INFO  16:08:19,623 - #48 array
INFO  16:08:19,624 - #41 .
INFO  16:08:19,624 - #48 length
INFO  16:08:19,624 - #38 ;
INFO  16:08:19,624 - #48 i
INFO  16:08:19,624 - #36 ++
INFO  16:08:19,624 - #43 )
INFO  16:08:19,624 - #46 {
INFO  16:08:19,624 - #48 sum
INFO  16:08:19,625 - #35 =
INFO  16:08:19,625 - #48 sum
INFO  16:08:19,625 - #22 +
INFO  16:08:19,625 - #48 array
INFO  16:08:19,625 - #44 [
INFO  16:08:19,625 - #48 i
INFO  16:08:19,625 - #45 ]
INFO  16:08:19,625 - #38 ;
INFO  16:08:19,625 - #47 }
INFO  16:08:19,626 - #14 return
INFO  16:08:19,626 - #48 sum
INFO  16:08:19,626 - #38 ;
INFO  16:08:19,626 - #47 }
INFO  16:08:19,626 - #48 int
INFO  16:08:19,626 - #48 main
INFO  16:08:19,627 - #42 (
INFO  16:08:19,627 - #43 )
INFO  16:08:19,627 - #46 {
INFO  16:08:19,627 - #48 b
INFO  16:08:19,627 - #35 =
INFO  16:08:19,627 - #51 false
INFO  16:08:19,628 - #38 ;
INFO  16:08:19,628 - #48 int
INFO  16:08:19,628 - #48 cnt
INFO  16:08:19,628 - #35 =
INFO  16:08:19,628 - #49 0
INFO  16:08:19,628 - #38 ;
INFO  16:08:19,628 - #9 do
INFO  16:08:19,628 - #46 {
INFO  16:08:19,629 - #8 if
INFO  16:08:19,629 - #42 (
INFO  16:08:19,629 - #48 cnt
INFO  16:08:19,629 - #26 %
INFO  16:08:19,629 - #49 2
INFO  16:08:19,629 - #27 ==
INFO  16:08:19,629 - #49 0
INFO  16:08:19,629 - #43 )
INFO  16:08:19,629 - #46 {
INFO  16:08:19,629 - #48 array
INFO  16:08:19,629 - #44 [
INFO  16:08:19,629 - #48 cnt
INFO  16:08:19,630 - #45 ]
INFO  16:08:19,630 - #35 =
INFO  16:08:19,630 - #48 x
INFO  16:08:19,630 - #36 ++
INFO  16:08:19,630 - #38 ;
INFO  16:08:19,631 - #47 }
INFO  16:08:19,631 - #6 else
INFO  16:08:19,631 - #46 {
INFO  16:08:19,631 - #48 array
INFO  16:08:19,631 - #44 [
INFO  16:08:19,631 - #48 cnt
INFO  16:08:19,632 - #45 ]
INFO  16:08:19,632 - #35 =
INFO  16:08:19,632 - #48 y
INFO  16:08:19,632 - #36 ++
INFO  16:08:19,632 - #23 -
INFO  16:08:19,632 - #35 =
INFO  16:08:19,633 - #22 +
INFO  16:08:19,633 - #38 ;
INFO  16:08:19,633 - #47 }
INFO  16:08:19,633 - #48 int
INFO  16:08:19,633 - #48 sum
INFO  16:08:19,633 - #35 =
INFO  16:08:19,633 - #48 sumOfArray
INFO  16:08:19,633 - #42 (
INFO  16:08:19,634 - #48 array
INFO  16:08:19,634 - #43 )
INFO  16:08:19,634 - #38 ;
INFO  16:08:19,634 - #8 if
INFO  16:08:19,634 - #42 (
INFO  16:08:19,634 - #48 sum
INFO  16:08:19,634 - #29 >
INFO  16:08:19,634 - #49 100
INFO  16:08:19,634 - #43 )
INFO  16:08:19,634 - #46 {
INFO  16:08:19,634 - #48 b
INFO  16:08:19,634 - #35 =
INFO  16:08:19,635 - #51 true
INFO  16:08:19,635 - #38 ;
INFO  16:08:19,635 - #47 }
INFO  16:08:19,635 - #48 cnt
INFO  16:08:19,635 - #36 ++
INFO  16:08:19,635 - #38 ;
INFO  16:08:19,635 - #8 if
INFO  16:08:19,635 - #42 (
INFO  16:08:19,635 - #48 cnt
INFO  16:08:19,635 - #27 ==
INFO  16:08:19,635 - #48 MAX
INFO  16:08:19,635 - #43 )
INFO  16:08:19,636 - #46 {
INFO  16:08:19,636 - #12 print
INFO  16:08:19,636 - #42 (
INFO  16:08:19,636 - #48 Exceeded
INFO  16:08:19,636 - #48 limit
INFO  16:08:19,636 - #43 )
INFO  16:08:19,636 - #38 ;
INFO  16:08:19,636 - #48 b
INFO  16:08:19,636 - #35 =
INFO  16:08:19,637 - #51 true
INFO  16:08:19,637 - #38 ;
INFO  16:08:19,637 - #47 }
INFO  16:08:19,637 - #47 }
INFO  16:08:19,637 - #10 while
INFO  16:08:19,637 - #42 (
INFO  16:08:19,637 - #48 b
INFO  16:08:19,638 - #27 ==
INFO  16:08:19,638 - #51 false
INFO  16:08:19,638 - #43 )
INFO  16:08:19,638 - #38 ;
INFO  16:08:19,638 - #14 return
INFO  16:08:19,638 - #49 0
INFO  16:08:19,638 - #38 ;
INFO  16:08:19,638 - #47 }
INFO  16:08:19,638 - #47 }
