INFO  16:15:33,194 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:15:33,203 - #2 program
INFO  16:15:33,204 - #48 MJLexerTest1
INFO  16:15:33,204 - #46 {
INFO  16:15:33,204 - #7 const
INFO  16:15:33,204 - #48 int
INFO  16:15:33,204 - #48 MAX
INFO  16:15:33,204 - #35 =
INFO  16:15:33,205 - #49 50
INFO  16:15:33,205 - #38 ;
INFO  16:15:33,205 - #48 int
INFO  16:15:33,205 - #48 x
INFO  16:15:33,205 - #35 =
INFO  16:15:33,205 - #49 5
INFO  16:15:33,205 - #40 ,
INFO  16:15:33,206 - #48 y
INFO  16:15:33,206 - #35 =
INFO  16:15:33,206 - #49 10
INFO  16:15:33,206 - #38 ;
INFO  16:15:33,206 - #48 boolean
INFO  16:15:33,206 - #48 b
INFO  16:15:33,207 - #38 ;
INFO  16:15:33,210 - #48 char
INFO  16:15:33,210 - #48 c
INFO  16:15:33,211 - #38 ;
INFO  16:15:33,211 - #48 int
INFO  16:15:33,211 - #48 array
INFO  16:15:33,211 - #44 [
INFO  16:15:33,211 - #48 MAX
INFO  16:15:33,211 - #45 ]
INFO  16:15:33,211 - #38 ;
INFO  16:15:33,211 - #48 int
INFO  16:15:33,211 - #48 sumOfArray
INFO  16:15:33,211 - #42 (
INFO  16:15:33,212 - #48 int
INFO  16:15:33,212 - #44 [
INFO  16:15:33,212 - #45 ]
INFO  16:15:33,212 - #48 array
INFO  16:15:33,212 - #43 )
INFO  16:15:33,212 - #46 {
INFO  16:15:33,212 - #48 int
INFO  16:15:33,212 - #48 sum
INFO  16:15:33,212 - #35 =
INFO  16:15:33,214 - #49 0
INFO  16:15:33,214 - #38 ;
INFO  16:15:33,215 - #48 for
INFO  16:15:33,215 - #42 (
INFO  16:15:33,215 - #48 int
INFO  16:15:33,215 - #48 i
INFO  16:15:33,215 - #35 =
INFO  16:15:33,215 - #49 0
INFO  16:15:33,215 - #38 ;
INFO  16:15:33,216 - #48 i
INFO  16:15:33,216 - #31 <
INFO  16:15:33,216 - #48 array
INFO  16:15:33,216 - #41 .
INFO  16:15:33,216 - #48 length
INFO  16:15:33,216 - #38 ;
INFO  16:15:33,217 - #48 i
INFO  16:15:33,217 - #36 ++
INFO  16:15:33,217 - #43 )
INFO  16:15:33,217 - #46 {
INFO  16:15:33,217 - #48 sum
INFO  16:15:33,217 - #35 =
INFO  16:15:33,218 - #48 sum
INFO  16:15:33,218 - #22 +
INFO  16:15:33,218 - #48 array
INFO  16:15:33,218 - #44 [
INFO  16:15:33,218 - #48 i
INFO  16:15:33,224 - #45 ]
INFO  16:15:33,224 - #38 ;
INFO  16:15:33,224 - #47 }
INFO  16:15:33,224 - #14 return
INFO  16:15:33,224 - #48 sum
INFO  16:15:33,224 - #38 ;
INFO  16:15:33,224 - #47 }
INFO  16:15:33,224 - #48 int
INFO  16:15:33,225 - #48 main
INFO  16:15:33,225 - #42 (
INFO  16:15:33,225 - #43 )
INFO  16:15:33,225 - #46 {
INFO  16:15:33,225 - #48 b
INFO  16:15:33,225 - #35 =
INFO  16:15:33,225 - #51 false
INFO  16:15:33,226 - #38 ;
INFO  16:15:33,226 - #48 int
INFO  16:15:33,226 - #48 cnt
INFO  16:15:33,226 - #35 =
INFO  16:15:33,226 - #49 0
INFO  16:15:33,226 - #38 ;
INFO  16:15:33,226 - #9 do
INFO  16:15:33,227 - #46 {
INFO  16:15:33,227 - #8 if
INFO  16:15:33,227 - #42 (
INFO  16:15:33,227 - #48 cnt
INFO  16:15:33,227 - #26 %
INFO  16:15:33,227 - #49 2
INFO  16:15:33,227 - #27 ==
INFO  16:15:33,227 - #49 0
INFO  16:15:33,228 - #43 )
INFO  16:15:33,228 - #46 {
INFO  16:15:33,228 - #48 array
INFO  16:15:33,228 - #44 [
INFO  16:15:33,228 - #48 cnt
INFO  16:15:33,228 - #45 ]
INFO  16:15:33,228 - #35 =
INFO  16:15:33,230 - #48 x
INFO  16:15:33,231 - #36 ++
INFO  16:15:33,231 - #38 ;
INFO  16:15:33,231 - #47 }
INFO  16:15:33,232 - #6 else
INFO  16:15:33,232 - #46 {
INFO  16:15:33,232 - #48 array
INFO  16:15:33,232 - #44 [
INFO  16:15:33,233 - #48 cnt
INFO  16:15:33,233 - #45 ]
INFO  16:15:33,233 - #35 =
INFO  16:15:33,233 - #48 y
INFO  16:15:33,233 - #36 ++
INFO  16:15:33,233 - #38 ;
INFO  16:15:33,233 - #47 }
INFO  16:15:33,233 - #48 int
INFO  16:15:33,234 - #48 sum
INFO  16:15:33,234 - #35 =
INFO  16:15:33,234 - #48 sumOfArray
INFO  16:15:33,234 - #42 (
INFO  16:15:33,234 - #48 array
INFO  16:15:33,234 - #43 )
INFO  16:15:33,235 - #38 ;
INFO  16:15:33,235 - #8 if
INFO  16:15:33,235 - #42 (
INFO  16:15:33,235 - #48 sum
INFO  16:15:33,235 - #29 >
INFO  16:15:33,235 - #49 100
INFO  16:15:33,236 - #43 )
INFO  16:15:33,236 - #46 {
INFO  16:15:33,236 - #48 b
INFO  16:15:33,236 - #35 =
INFO  16:15:33,236 - #51 true
INFO  16:15:33,236 - #38 ;
INFO  16:15:33,236 - #47 }
INFO  16:15:33,237 - #48 cnt
INFO  16:15:33,237 - #36 ++
INFO  16:15:33,237 - #38 ;
INFO  16:15:33,237 - #8 if
INFO  16:15:33,237 - #42 (
INFO  16:15:33,237 - #48 cnt
INFO  16:15:33,237 - #27 ==
INFO  16:15:33,237 - #48 MAX
INFO  16:15:33,237 - #43 )
INFO  16:15:33,237 - #46 {
INFO  16:15:33,237 - #12 print
INFO  16:15:33,238 - #42 (
INFO  16:15:33,238 - #48 Exceeded
INFO  16:15:33,238 - #48 limit
INFO  16:15:33,238 - #43 )
INFO  16:15:33,238 - #38 ;
INFO  16:15:33,238 - #48 b
INFO  16:15:33,238 - #35 =
INFO  16:15:33,238 - #51 true
INFO  16:15:33,238 - #38 ;
INFO  16:15:33,238 - #47 }
INFO  16:15:33,238 - #47 }
INFO  16:15:33,238 - #10 while
INFO  16:15:33,238 - #42 (
INFO  16:15:33,238 - #48 b
INFO  16:15:33,238 - #27 ==
INFO  16:15:33,238 - #51 false
INFO  16:15:33,239 - #43 )
INFO  16:15:33,239 - #38 ;
INFO  16:15:33,239 - #14 return
INFO  16:15:33,239 - #49 0
INFO  16:15:33,239 - #38 ;
INFO  16:15:33,239 - #47 }
INFO  16:15:33,239 - #47 }
