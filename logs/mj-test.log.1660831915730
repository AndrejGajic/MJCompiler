INFO  16:11:22,742 - Compiling source file: C:\Users\Andrej\eclipse-workspace\MJCompiler\test\lexerTest1.mj
INFO  16:11:22,751 - #2 program
INFO  16:11:22,751 - #48 MJLexerTest1
INFO  16:11:22,751 - #46 {
INFO  16:11:22,751 - #7 const
INFO  16:11:22,751 - #48 int
INFO  16:11:22,751 - #48 MAX
INFO  16:11:22,752 - #35 =
INFO  16:11:22,752 - #49 50
INFO  16:11:22,752 - #38 ;
INFO  16:11:22,752 - #48 int
INFO  16:11:22,752 - #48 x
INFO  16:11:22,752 - #35 =
INFO  16:11:22,752 - #49 5
INFO  16:11:22,752 - #40 ,
INFO  16:11:22,753 - #48 y
INFO  16:11:22,753 - #35 =
INFO  16:11:22,753 - #49 10
INFO  16:11:22,753 - #38 ;
INFO  16:11:22,753 - #48 boolean
INFO  16:11:22,753 - #48 b
INFO  16:11:22,753 - #38 ;
INFO  16:11:22,754 - #48 char
INFO  16:11:22,754 - #48 c
INFO  16:11:22,754 - #38 ;
INFO  16:11:22,754 - #48 int
INFO  16:11:22,754 - #48 array
INFO  16:11:22,754 - #44 [
INFO  16:11:22,754 - #48 MAX
INFO  16:11:22,754 - #45 ]
INFO  16:11:22,755 - #38 ;
INFO  16:11:22,755 - #48 int
INFO  16:11:22,755 - #48 sumOfArray
INFO  16:11:22,755 - #42 (
INFO  16:11:22,755 - #48 int
INFO  16:11:22,755 - #44 [
INFO  16:11:22,755 - #45 ]
INFO  16:11:22,755 - #48 array
INFO  16:11:22,755 - #43 )
INFO  16:11:22,755 - #46 {
INFO  16:11:22,756 - #48 int
INFO  16:11:22,756 - #48 sum
INFO  16:11:22,756 - #35 =
INFO  16:11:22,756 - #49 0
INFO  16:11:22,756 - #38 ;
INFO  16:11:22,756 - #48 for
INFO  16:11:22,756 - #42 (
INFO  16:11:22,756 - #48 int
INFO  16:11:22,757 - #48 i
INFO  16:11:22,757 - #35 =
INFO  16:11:22,757 - #49 0
INFO  16:11:22,757 - #38 ;
INFO  16:11:22,757 - #48 i
INFO  16:11:22,757 - #31 <
INFO  16:11:22,757 - #48 array
INFO  16:11:22,757 - #41 .
INFO  16:11:22,758 - #48 length
INFO  16:11:22,758 - #38 ;
INFO  16:11:22,758 - #48 i
INFO  16:11:22,758 - #36 ++
INFO  16:11:22,758 - #43 )
INFO  16:11:22,758 - #46 {
INFO  16:11:22,758 - #48 sum
INFO  16:11:22,759 - #35 =
INFO  16:11:22,759 - #48 sum
INFO  16:11:22,759 - #22 +
INFO  16:11:22,759 - #48 array
INFO  16:11:22,759 - #44 [
INFO  16:11:22,759 - #48 i
INFO  16:11:22,759 - #45 ]
INFO  16:11:22,759 - #38 ;
INFO  16:11:22,759 - #47 }
INFO  16:11:22,760 - #14 return
INFO  16:11:22,760 - #48 sum
INFO  16:11:22,760 - #38 ;
INFO  16:11:22,760 - #47 }
INFO  16:11:22,760 - #48 int
INFO  16:11:22,760 - #48 main
INFO  16:11:22,760 - #42 (
INFO  16:11:22,760 - #43 )
INFO  16:11:22,760 - #46 {
INFO  16:11:22,760 - #48 b
INFO  16:11:22,761 - #35 =
INFO  16:11:22,761 - #51 false
INFO  16:11:22,761 - #38 ;
INFO  16:11:22,761 - #48 int
INFO  16:11:22,761 - #48 cnt
INFO  16:11:22,761 - #35 =
INFO  16:11:22,761 - #49 0
INFO  16:11:22,761 - #38 ;
INFO  16:11:22,761 - #9 do
INFO  16:11:22,762 - #46 {
INFO  16:11:22,762 - #8 if
INFO  16:11:22,762 - #42 (
INFO  16:11:22,762 - #48 cnt
INFO  16:11:22,762 - #26 %
INFO  16:11:22,763 - #49 2
INFO  16:11:22,763 - #27 ==
INFO  16:11:22,763 - #49 0
INFO  16:11:22,763 - #43 )
INFO  16:11:22,763 - #46 {
INFO  16:11:22,763 - #48 array
INFO  16:11:22,764 - #44 [
INFO  16:11:22,764 - #48 cnt
INFO  16:11:22,764 - #45 ]
INFO  16:11:22,764 - #35 =
INFO  16:11:22,764 - #48 x
INFO  16:11:22,765 - #36 ++
INFO  16:11:22,765 - #38 ;
INFO  16:11:22,765 - #47 }
INFO  16:11:22,765 - #6 else
INFO  16:11:22,765 - #46 {
INFO  16:11:22,765 - #48 array
INFO  16:11:22,766 - #44 [
INFO  16:11:22,766 - #48 cnt
INFO  16:11:22,766 - #45 ]
INFO  16:11:22,766 - #35 =
INFO  16:11:22,767 - #48 y
INFO  16:11:22,767 - #36 ++
INFO  16:11:22,767 - #23 -
INFO  16:11:22,767 - #35 =
INFO  16:11:22,767 - #22 +
INFO  16:11:22,769 - #38 ;
INFO  16:11:22,769 - #47 }
INFO  16:11:22,771 - #48 int
INFO  16:11:22,771 - #48 sum
INFO  16:11:22,771 - #35 =
INFO  16:11:22,772 - #48 sumOfArray
INFO  16:11:22,772 - #42 (
INFO  16:11:22,772 - #48 array
INFO  16:11:22,772 - #43 )
INFO  16:11:22,772 - #38 ;
INFO  16:11:22,773 - #8 if
INFO  16:11:22,773 - #42 (
INFO  16:11:22,773 - #48 sum
INFO  16:11:22,773 - #29 >
INFO  16:11:22,773 - #49 100
INFO  16:11:22,773 - #43 )
INFO  16:11:22,774 - #46 {
INFO  16:11:22,775 - #48 b
INFO  16:11:22,775 - #35 =
INFO  16:11:22,775 - #51 true
INFO  16:11:22,776 - #38 ;
INFO  16:11:22,776 - #47 }
INFO  16:11:22,776 - #48 cnt
INFO  16:11:22,776 - #36 ++
INFO  16:11:22,776 - #38 ;
INFO  16:11:22,776 - #8 if
INFO  16:11:22,776 - #42 (
INFO  16:11:22,776 - #48 cnt
INFO  16:11:22,776 - #27 ==
INFO  16:11:22,776 - #48 MAX
INFO  16:11:22,776 - #43 )
INFO  16:11:22,776 - #46 {
INFO  16:11:22,777 - #12 print
INFO  16:11:22,777 - #42 (
INFO  16:11:22,777 - #48 Exceeded
INFO  16:11:22,777 - #48 limit
INFO  16:11:22,777 - #43 )
INFO  16:11:22,777 - #38 ;
INFO  16:11:22,777 - #48 b
INFO  16:11:22,778 - #35 =
INFO  16:11:22,778 - #51 true
INFO  16:11:22,778 - #38 ;
INFO  16:11:22,778 - #47 }
INFO  16:11:22,778 - #47 }
INFO  16:11:22,778 - #10 while
INFO  16:11:22,778 - #42 (
INFO  16:11:22,779 - #48 b
INFO  16:11:22,779 - #27 ==
INFO  16:11:22,779 - #51 false
INFO  16:11:22,779 - #43 )
INFO  16:11:22,779 - #38 ;
INFO  16:11:22,779 - #14 return
INFO  16:11:22,780 - #49 0
INFO  16:11:22,780 - #38 ;
INFO  16:11:22,780 - #47 }
INFO  16:11:22,780 - #47 }
